<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ifuryst.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ifuryst.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-10-24T00:27:17+00:00</updated><id>https://ifuryst.github.io/feed.xml</id><title type="html">ifuryst</title><subtitle>📝 &amp; 💭 </subtitle><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.24</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-24-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.24"/><published>2025-10-24T00:00:00+00:00</published><updated>2025-10-24T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-24-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-24-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>特朗普赦免Binance创始人赵长鹏</strong>：美国前总统特朗普赦免了Binance创始人赵长鹏，引发加密货币界关注。<a href="https://www.wsj.com/finance/currencies/trump-pardons-convicted-binance-founder-7509bd63">WSJ</a></li> <li><strong>苹果在英国App Store垄断案中败诉</strong>：可能面临高达20亿美元的罚款，影响其应用商店政策。<a href="https://9to5mac.com/2025/10/23/apple-loses-uk-app-store-monopoly-case-penalty-might-near-2-billion/">9to5mac</a></li> <li><strong>OpenAI收购Sky.app</strong>：此举可能旨在增强其AI应用生态或用户界面能力。<a href="https://openai.com/index/openai-acquires-software-applications-incorporated">OpenAI</a></li> <li><strong>美国政府关闭报告其武装部队侵犯人权行为的网站</strong>：引发言论自由与政府透明度争议。<a href="https://www.bbc.com/news/articles/cqx30vnwd4do">BBC</a></li> <li><strong>AI误将多力多滋误判为武器，武装警察包围学生</strong>：突显AI在公共安全应用中的误判风险与潜在后果。<a href="https://www.dexerto.com/entertainment/armed-police-swarm-student-after-ai-mistakes-bag-of-doritos-for-a-weapon-3273512/">Dexerto</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Claude Memory功能上线</strong>：Anthropic为Claude AI新增记忆功能，提升长期对话能力。<a href="https://www.anthropic.com/news/memory">Anthropic</a></li> <li><strong>PyTorch Monarch发布</strong>：一个专注于高效、大规模训练和推理的新PyTorch版本。<a href="https://pytorch.org/blog/introducing-pytorch-monarch/">PyTorch Blog</a></li> <li><strong>Google Earth AI获得更新与更多访问权限</strong>：进一步利用AI提升地图和地理空间数据分析能力。<a href="https://blog.google/technology/research/new-updates-and-more-access-to-google-earth-ai/">Google Blog</a></li> <li><strong>Antislop：消除LLM重复模式的框架</strong>：新的研究旨在通过一个框架减少大型语言模型生成内容的重复性。<a href="https://arxiv.org/abs/2510.15061">arXiv</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>编程的”一无所有”哲学</strong>：探讨极简主义编程和底层抽象的深层思考。<a href="https://joshmoody.org/blog/programming-with-less-than-nothing/">Josh Moody Blog</a></li> <li><strong>算法如何通过博弈论推高价格</strong>：一篇关于算法协同定价机制及其经济影响的分析。<a href="https://www.quantamagazine.org/the-game-theory-of-how-algorithms-can-drive-up-prices-20251022/">Quanta Magazine</a></li> <li><strong>苹果传奇般的细节关注度去哪了？</strong>：一篇博客文章探讨了苹果产品质量和用户体验的潜在下滑。<a href="https://blog.johnozbay.com/what-happened-to-apples-attention-to-detail.html">John Ozbay Blog</a></li> <li><strong>收音机工作原理（2024版）</strong>：深入浅出地解释了无线电通信的基本原理和现代应用。<a href="https://lcamtuf.substack.com/p/radios-how-do-they-work">lcamtuf.substack.com</a></li> <li><strong>Casey Muratori：我总能识别出优秀的程序员</strong>：分享了其在编程面试中识别优秀程序员的关键指标和方法。<a href="https://www.gethopp.app/blog/how-to-conduct-good-programming-interviews">gethopp.app</a></li> <li><strong>使用Obsidian的注意事项</strong>：一篇关于Markdown笔记工具Obsidian的个人使用体验和潜在陷阱的思考。<a href="https://phong.bearblog.dev/be-careful-with-obsidian/">Phong’s Bear Blog</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>AWS DynamoDB US-East-1区域服务中断总结</strong>：亚马逊发布了关于其关键服务区域中断的详细报告。<a href="https://aws.amazon.com/message/101925/">AWS</a></li> <li><strong>SpaceX禁用2500个据称被亚洲诈骗中心使用的Starlink终端</strong>：旨在打击利用星链进行犯罪活动的行为。<a href="https://arstechnica.com/tech-policy/2025/10/starlink-blocks-2500-dishes-allegedly-used-by-myanmars-notorious-scam-centers/">Ars Technica</a></li> <li><strong>美国国债达38万亿美元，疫情外万亿美元累积最快</strong>：经济报告显示美国国债持续快速增长，引发关注。<a href="https://apnews.com/article/trump-treasury-debt-ceiling-bessent-09575f13ca95c2f1beb38234b2cbe85b">AP News</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>FocusTube：隐藏YouTube Shorts的Chrome扩展</strong>：帮助用户在YouTube上保持专注，避免短视频干扰。<a href="https://github.com/CaptainYouz/FocusTube">GitHub</a></li> <li><strong>Deadstack：以”我的大脑方式”工作的科技新闻聚合器</strong>：一个号称能更直观地聚合科技新闻的平台。<a href="https://deadstack.net/recent">deadstack.net</a></li> <li><strong>Deta Surf：一个开源、本地优先的AI笔记本</strong>：旨在提供一个私密且高效的AI实验和笔记环境。<a href="https://github.com/deta/surf">GitHub</a></li> <li><strong>Nostr Web：基于Nostr的去中心化网站托管</strong>：探索利用Nostr协议实现去中心化内容发布的新方式。<a href="https://nweb.shugur.com/">nweb.shugur.com</a></li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>钠离子电池已开始应用于汽车和家庭储能</strong>：这种成本更低的新型电池技术正逐步进入实际应用。<a href="https://cleantechnica.com/2025/10/22/the-sodium-ion-battery-revolution-has-started/">CleanTechnica</a></li> <li><strong>“二次利用”的电动汽车电池能否用于电网规模储能？</strong>：探讨退役EV电池在大型能源存储系统中的潜力。<a href="https://www.volts.wtf/p/can-second-life-ev-batteries-work">Volts</a></li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li><strong>C64 Blood Money</strong>：关于经典Commodore 64平台游戏的介绍或回顾。<a href="https://lemmings.info/c64-blood-money/">lemmings.info</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>VST3音频插件格式现已采用MIT许可证</strong>：音频开发工具的重要许可变更，促进开源生态发展。<a href="https://forums.steinberg.net/t/vst-3-8-0-sdk-released/1011988">Steinberg Forums</a></li> <li><strong>用D语言开发ASN.1编译器一年的经历</strong>：一个开发者分享了用D语言构建ASN.1编译器的技术细节和挑战。<a href="https://bradley.chatha.dev/blog/dlang-propaganda/asn1-compiler-in-d/">Bradley Chatha’s Blog</a></li> <li><strong>MinIO拒绝发布解决CVE-2025-62506的Docker构建</strong>：MinIO社区因安全漏洞修复和Docker构建发布问题引发讨论。<a href="https://github.com/minio/minio/issues/21647">GitHub</a></li> <li><strong>OpenMaxIO：MinIO对象存储的UI分支</strong>：针对MinIO用户界面不足的开源替代方案。<a href="https://github.com/OpenMaxIO/openmaxio-object-browser">GitHub</a></li> <li><strong>Rust-based coreutils的日期bug影响Ubuntu 25.10自动更新</strong>：一个基于Rust的系统工具中发现的日期处理问题导致系统更新受阻。<a href="https://lwn.net/Articles/1043103/">LWN.net</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">大模型上下文工程实践指南-第6章：工具使用与MCP</title><link href="https://ifuryst.github.io/blog/2025/ce101-6-tool-use-and-mcp/" rel="alternate" type="text/html" title="大模型上下文工程实践指南-第6章：工具使用与MCP"/><published>2025-10-21T00:00:00+00:00</published><updated>2025-10-21T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/ce101-6-tool-use-and-mcp</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/ce101-6-tool-use-and-mcp/"><![CDATA[<p>早期有些人寄希望于大模型能力提升能实现AGI，但是现在慢慢地发现，工具调用才是现阶段模型最需要的，工具调用也是大模型与外界交互的一个窗口。现在流行的<strong>Function Calling</strong>、<strong>Computer-Use</strong>、<strong>MCP（Model Context Protocol）</strong>都是在这个方向延伸出来的。</p> <p>这一篇我把函数调用和MCP放在了一起，是因为这些东西本质上都是一样的东西，只是早期刚开始没有任何标准的时候，各家模型都自我实现了一套函数调用，接下去我们会一一过一下工具调用的分类和演进</p> <h1 id="61-函数调用">6.1 函数调用</h1> <p>最开始调用大模型时，是可以通过传入厂商预定义的结构化数据（JSON Schema），来告诉大模型一些预定义的工具可以使用，这个结构根据厂商的不同而不同，这个阶段大家一般称呼为<strong>函数调用（Function Calling）</strong>。最早可追溯到OpenAI的这篇<a href="https://openai.com/index/function-calling-and-other-api-updates/">Function calling and other API updates</a>，Anthropic也在2024年5月<a href="https://www.anthropic.com/news/tool-use-ga">宣布</a>Claude支持Tool Use（aka function calling）。</p> <p>我们简单看一下<a href="https://platform.openai.com/docs/guides/tools?lang=bash">OpenAI</a>和<a href="https://ai.google.dev/gemini-api/docs/function-calling?example=weather#rest_1">Google</a>各自模型怎么调用工具的例子。</p> <p>OpenAI的：</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-X</span> POST https://api.openai.com/v1/responses <span class="se">\</span>
  <span class="nt">-H</span> <span class="s2">"Authorization: Bearer </span><span class="nv">$OPENAI_API_KEY</span><span class="s2">"</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s2">"Content-Type: application/json"</span> <span class="se">\</span>
  <span class="nt">-d</span> <span class="s1">'{
    "model": "gpt-5",
    "input": [
      {"role": "user", "content": "What is the weather like in Paris today?"}
    ],
    "tools": [
      {
        "type": "function",
        "name": "get_weather",
        "description": "Get current temperature for a given location.",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "City and country e.g. Bogotá, Colombia"
            }
          },
          "required": ["location"],
          "additionalProperties": false
        },
        "strict": true
      }
    ]
  }'</span>

</code></pre></div></div> <p>Google的：</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent"</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s2">"x-goog-api-key: </span><span class="nv">$GEMINI_API_KEY</span><span class="s2">"</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  <span class="nt">-X</span> POST <span class="se">\</span>
  <span class="nt">-d</span> <span class="s1">'{
    "contents": [
      {
        "role": "user",
        "parts": [
          {
            "text": "What'</span><span class="se">\'</span><span class="s1">'s the temperature in London?"
          }
        ]
      }
    ],
    "tools": [
      {
        "functionDeclarations": [
          {
            "name": "get_current_temperature",
            "description": "Gets the current temperature for a given location.",
            "parameters": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The city name, e.g. San Francisco"
                }
              },
              "required": ["location"]
            }
          }
        ]
      }
    ]
  }'</span>

</code></pre></div></div> <p>可以看到通过JSON的方式来定义函数，基本上是函数名、描述、相关字段和类型这些信息，都集中在调用时<code class="language-plaintext highlighter-rouge">tools</code>这个字段下，只不过下面的字段名有些许差异（这也是MCP流行的一个重要原因）。</p> <p>现在我们来看看函数调用的一个流程，我们这边直接引用前面提到的OpenAI和Google的模型做函数调用时的流程图：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_1-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_1-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_2-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_2-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>这个流程可以很清楚的看出，函数调用的流程是：</p> <ol> <li>提供一组函数在上下文中</li> <li>让大模型根据上下文来决定是否要调用函数</li> <li>调用则返回对应格式的内容，如：<code class="language-plaintext highlighter-rouge">get_weather("paris")</code></li> <li>应用负责具体去执行这个函数，得到结果</li> <li>将结果附带在上下文再次请求大模型</li> <li>根据执行结果来决定后续的动作，比如告知用户完成任务了，或者还需要在执行其他任务</li> </ol> <p>最后，我们从前面的OpenAI和Google的函数调用对比，可以非常明显的观测到，针对函数的定义是完全不一样的格式，这就造成了兼容的困难，也就是说系统里接入了多个模型的情况下，就有可能要写多个调用方式来兼容，这造成了极大的不便，在这种情况下，MCP应运而生了</p> <h1 id="62-mcp">6.2 MCP</h1> <p>Anthropic于<a href="https://www.anthropic.com/news/model-context-protocol">2024年11月</a>推出了<a href="https://modelcontextprotocol.io/">MCP（Model Context Protocol）</a>，经过几个月的沉淀，很多服务涌现，到2025年上半年，MCP在非常短的时间内火出圈，所有人都在谈论MCP，随着Google、OpenAI等主流的模型厂商都宣布并支持了MCP之后，这一开放标准已经成为AI时代函数调用的事实标准协议。</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_3-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_3-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058557_3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p><a href="https://www.ibm.com/think/topics/model-context-protocol">这张图</a>展示了MCP的架构，虽然MCP里定义了：</p> <ul> <li>Host：运行LLM应用的设备</li> <li>Client：MCP客户端，负责LLM和Server的通信，起到一个中介作用</li> <li>Server：MCP服务端，负责实际的逻辑，也可能调用外部的服务、命令等</li> </ul> <p>我觉得可以更简化的理解，MCP最主要的就是MCP Server，包含了一些功能的一个服务，而客户端可以通过MCP协议去调用这个Server，结果返回给大模型。引用一下<a href="https://dzone.com/articles/mcp-client-agent-architecture-amp-implementation">这篇文章</a>中的图：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_4-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_4-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>可以很清晰地看清楚整个流程：</p> <ol> <li>用户发送问题</li> <li>AI应用连接到MCP Server（这个过程有可能发生在应用启动的时候，在用户发送问题之前建立好连接）</li> <li>获取工具列表（最常见的一个请求，不过MCP还支持获取提示词之类的资源），是JSON格式的数据</li> <li>将用户问题和工具列表一起发送给大模型</li> <li>大模型根据判断，如果不产生调用直接返回。如果产生调用就返回到AI应用</li> <li>AI应用根据返回的信息知道请求哪个工具，参数是什么，组装后请求</li> <li>AI应用得到MCP Server返回的结果</li> <li>AI应用将工具执行后的结果再给到大模型（前面的聊天记录也会一起）</li> <li>大模型做最后的结果输出</li> <li>AI应用将最终结果返回给用户（整个周期期间可能已经通过流式不断返回了）</li> </ol> <p>这是完整的流程，实际中根据应用形态、编排和业务等情况，有些步骤是非必要的。了解完架构和流程，整体有个印象了，现在我们深入了解一下MCP协议，至少知道实际使用中我们应该怎么选择。</p> <h2 id="621-mcp协议">6.2.1 MCP协议</h2> <p>MCP协议里最重要的当属<a href="https://modelcontextprotocol.io/specification/2025-06-18/basic/transports">传输协议</a>（Transport Protocol），我写这篇文章的时候，MCP标准演进到2025-06-18这个修订版了，目前支持的是：</p> <ul> <li>Stdio：通过命令直接拉起MCP Server</li> <li>Streamable HTTP：通过流式HTTP去请求MCP Server</li> </ul> <p>最早的版本是Stdio和SSE，但是因为SSE需要长期保持一个连接，且偏有状态，在很多场景下不适用，后来才演进成流式HTTP。</p> <p>这个其实也展现了MCP在业界的发展。我们可以理解Stdio更适用于C端的应用，比如我们用的ChatGPT、Cursor等，可以在端侧就直接连接和处理。而HTTP则支持一些远端的MCP，尤其适合一些B端场景。比如高德地图MCP，就是直接通过官方的URL连接使用。当然这个分类不是绝对的，只是按照经验来说是这个倾向。</p> <p>值得一提的是，在MCP发展的阶段，出现了Stdio、SSE、StreamableHTTP三种协议互转的需求，也催生了很多开源项目，几个月前我开源的<a href="https://github.com/AmoyLab/Unla">Unla</a>正是处理这种需求的一个开源项目，并且更进一步，支持了反向代理存量的HTTP接口，这对于B端来说，可以快速通过配置化的方式将很多存量的API转成MCP Server而不需要任何代码的改造。另外还有一些情况下，因为接入太多MCP Server了，导致上下文膨胀得很厉害，因此也出现了一些MCP Server聚合的项目，将多个MCP Servers绑定到某个MCP下，甚至可以智能的选择激活的工具。这些都是MCP发展和普及过程中产生的一些衍生物。</p> <p>用一个非常简单的代码来展示一下MCP是如何运作的：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span><span class="sh">"""</span><span class="s">
Simple MCP Server for Teaching Purposes
使用 FastMCP 实现的简单教学服务器
支持三种传输协议：stdio, SSE, streamable HTTP
</span><span class="sh">"""</span>

<span class="kn">import</span> <span class="n">sys</span>
<span class="kn">from</span> <span class="n">fastmcp</span> <span class="kn">import</span> <span class="n">FastMCP</span>

<span class="c1"># 创建 MCP 服务器实例
</span><span class="n">mcp</span> <span class="o">=</span> <span class="nc">FastMCP</span><span class="p">(</span><span class="sh">"</span><span class="s">Demo Teaching Server</span><span class="sh">"</span><span class="p">)</span>


<span class="nd">@mcp.tool</span><span class="p">()</span>
<span class="k">def</span> <span class="nf">hello_world</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="sh">"</span><span class="s">World</span><span class="sh">"</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    简单的 Hello World 工具

    Args:
        name: 要问候的名字，默认为 </span><span class="sh">"</span><span class="s">World</span><span class="sh">"</span><span class="s">

    Returns:
        问候消息
    </span><span class="sh">"""</span>
    <span class="k">return</span> <span class="sa">f</span><span class="sh">"</span><span class="s">Hello, </span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s">! 👋</span><span class="sh">"</span>


<span class="nd">@mcp.tool</span><span class="p">()</span>
<span class="k">def</span> <span class="nf">ping_pong</span><span class="p">(</span><span class="n">message</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    Ping-Pong 回声工具

    Args:
        message: 要发送的消息

    Returns:
        如果消息是 </span><span class="sh">"</span><span class="s">ping</span><span class="sh">"</span><span class="s"> 返回 </span><span class="sh">"</span><span class="s">pong</span><span class="sh">"</span><span class="s">，否则返回原消息的回声
    </span><span class="sh">"""</span>
    <span class="k">if</span> <span class="n">message</span><span class="p">.</span><span class="nf">lower</span><span class="p">()</span> <span class="o">==</span> <span class="sh">"</span><span class="s">ping</span><span class="sh">"</span><span class="p">:</span>
        <span class="k">return</span> <span class="sh">"</span><span class="s">pong! 🏓</span><span class="sh">"</span>
    <span class="k">return</span> <span class="sa">f</span><span class="sh">"</span><span class="s">Echo: </span><span class="si">{</span><span class="n">message</span><span class="si">}</span><span class="sh">"</span>


<span class="nd">@mcp.tool</span><span class="p">()</span>
<span class="k">def</span> <span class="nf">add_numbers</span><span class="p">(</span><span class="n">a</span><span class="p">:</span> <span class="nb">float</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span> <span class="nb">float</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">float</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    简单的加法计算器

    Args:
        a: 第一个数字
        b: 第二个数字

    Returns:
        两个数字的和
    </span><span class="sh">"""</span>
    <span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>


<span class="nd">@mcp.tool</span><span class="p">()</span>
<span class="k">def</span> <span class="nf">get_server_info</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="nb">dict</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    获取服务器信息

    Returns:
        服务器的基本信息
    </span><span class="sh">"""</span>
    <span class="k">return</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">name</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Demo Teaching Server</span><span class="sh">"</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">version</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">1.0.0</span><span class="sh">"</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">description</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">一个用于教学的简单 MCP 服务器</span><span class="sh">"</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">tools_count</span><span class="sh">"</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">framework</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">FastMCP</span><span class="sh">"</span>
    <span class="p">}</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">"</span><span class="s">__main__</span><span class="sh">"</span><span class="p">:</span>
    <span class="kn">import</span> <span class="n">argparse</span>

    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="p">.</span><span class="nc">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="sh">"</span><span class="s">MCP Demo Server - 支持多种传输协议</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span>
        <span class="sh">"</span><span class="s">--transport</span><span class="sh">"</span><span class="p">,</span>
        <span class="nb">type</span><span class="o">=</span><span class="nb">str</span><span class="p">,</span>
        <span class="n">choices</span><span class="o">=</span><span class="p">[</span><span class="sh">"</span><span class="s">stdio</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sse</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">http</span><span class="sh">"</span><span class="p">],</span>
        <span class="n">default</span><span class="o">=</span><span class="sh">"</span><span class="s">stdio</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">help</span><span class="o">=</span><span class="sh">"</span><span class="s">传输协议类型 (stdio/sse/http)</span><span class="sh">"</span>
    <span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span>
        <span class="sh">"</span><span class="s">--host</span><span class="sh">"</span><span class="p">,</span>
        <span class="nb">type</span><span class="o">=</span><span class="nb">str</span><span class="p">,</span>
        <span class="n">default</span><span class="o">=</span><span class="sh">"</span><span class="s">127.0.0.1</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">help</span><span class="o">=</span><span class="sh">"</span><span class="s">HTTP/SSE 服务器主机地址 (默认: 127.0.0.1)</span><span class="sh">"</span>
    <span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span>
        <span class="sh">"</span><span class="s">--port</span><span class="sh">"</span><span class="p">,</span>
        <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span>
        <span class="n">default</span><span class="o">=</span><span class="mi">8000</span><span class="p">,</span>
        <span class="n">help</span><span class="o">=</span><span class="sh">"</span><span class="s">HTTP/SSE 服务器端口 (默认: 8000)</span><span class="sh">"</span>
    <span class="p">)</span>

    <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="nf">parse_args</span><span class="p">()</span>

    <span class="c1"># 根据传输协议类型运行服务器
</span>    <span class="k">if</span> <span class="n">args</span><span class="p">.</span><span class="n">transport</span> <span class="o">==</span> <span class="sh">"</span><span class="s">stdio</span><span class="sh">"</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">🚀 启动 STDIO 传输模式...</span><span class="sh">"</span><span class="p">,</span> <span class="nb">file</span><span class="o">=</span><span class="n">sys</span><span class="p">.</span><span class="n">stderr</span><span class="p">)</span>
        <span class="n">mcp</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="n">transport</span><span class="o">=</span><span class="sh">"</span><span class="s">stdio</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">args</span><span class="p">.</span><span class="n">transport</span> <span class="o">==</span> <span class="sh">"</span><span class="s">sse</span><span class="sh">"</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">🚀 启动 SSE 传输模式 @ http://</span><span class="si">{</span><span class="n">args</span><span class="p">.</span><span class="n">host</span><span class="si">}</span><span class="s">:</span><span class="si">{</span><span class="n">args</span><span class="p">.</span><span class="n">port</span><span class="si">}</span><span class="s">/sse</span><span class="sh">"</span><span class="p">,</span> <span class="nb">file</span><span class="o">=</span><span class="n">sys</span><span class="p">.</span><span class="n">stderr</span><span class="p">)</span>
        <span class="n">mcp</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="n">transport</span><span class="o">=</span><span class="sh">"</span><span class="s">sse</span><span class="sh">"</span><span class="p">,</span> <span class="n">host</span><span class="o">=</span><span class="n">args</span><span class="p">.</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="n">args</span><span class="p">.</span><span class="n">port</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">args</span><span class="p">.</span><span class="n">transport</span> <span class="o">==</span> <span class="sh">"</span><span class="s">http</span><span class="sh">"</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">🚀 启动 HTTP (Streamable) 传输模式 @ http://</span><span class="si">{</span><span class="n">args</span><span class="p">.</span><span class="n">host</span><span class="si">}</span><span class="s">:</span><span class="si">{</span><span class="n">args</span><span class="p">.</span><span class="n">port</span><span class="si">}</span><span class="s">/mcp</span><span class="sh">"</span><span class="p">,</span> <span class="nb">file</span><span class="o">=</span><span class="n">sys</span><span class="p">.</span><span class="n">stderr</span><span class="p">)</span>
        <span class="n">mcp</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="n">transport</span><span class="o">=</span><span class="sh">"</span><span class="s">http</span><span class="sh">"</span><span class="p">,</span> <span class="n">host</span><span class="o">=</span><span class="n">args</span><span class="p">.</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="n">args</span><span class="p">.</span><span class="n">port</span><span class="p">,</span> <span class="n">path</span><span class="o">=</span><span class="sh">"</span><span class="s">/mcp</span><span class="sh">"</span><span class="p">)</span>


</code></pre></div></div> <p>定义了4个工具，并且同时支持了Stdio, SSE, Streamable HTTP，我们使用<a href="https://github.com/modelcontextprotocol/inspector">Inspector</a>来连接一下</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_5-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_5-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>Stdio是直接通过命令的方式拉起运行，通信方式是通过STDIN和STDOUT，简单理解就是在命令行里输入请求（符合MCP定义的规范JSON-RPC），然后接收响应的内容。流程如下：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_6-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_6-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_6.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>更具体的内容可以参考<a href="https://modelcontextprotocol.io/specification/2025-06-18/basic/transports#stdio">官方文档</a>。接下来是SSE和StreamableHTTP</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_7-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_7-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058558_7.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_8-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_8-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_8.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>都是一样需要提前运行MCP Server，会通过监听HTTP来接受MCP Client的请求。SSE通常以<code class="language-plaintext highlighter-rouge">/sse</code>结尾，通过<code class="language-plaintext highlighter-rouge">/message</code>发送消息，而Streamable HTTP则都是通过<code class="language-plaintext highlighter-rouge">/mcp</code>。</p> <p>这边我们通过几个连续的curl请求来展示一下Streamable HTTP的实际流程：</p> <ol> <li><code class="language-plaintext highlighter-rouge">initialize</code>：初始化，这步最关键的时一定要拿到HTTP响应头里的<code class="language-plaintext highlighter-rouge">mcp-session-id</code>，后续都是基于这个会话id进行的</li> </ol> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_9-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_9-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_9.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <ol> <li><code class="language-plaintext highlighter-rouge">notifications/initialized</code>：客户端初始化完后通知服务端，需要在HTTP请求头里增加mcp-session-id，收到的HTTP响应不是200，而是202</li> </ol> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_10-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_10-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058559_10.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <ol> <li><code class="language-plaintext highlighter-rouge">tools/list</code>：客户端请求工具列表</li> </ol> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_11-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_11-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_11-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_11.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <ol> <li><code class="language-plaintext highlighter-rouge">tools/call</code>：客户端根据前面的工具列表里的一些定义（如请求参数和类型），调用某个工具得到结果</li> </ol> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_12-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_12-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_12.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>所有涉及的命令如下：</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 1. initialize</span>
curl <span class="nt">--location</span> <span class="s1">'http://localhost:8000/mcp'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Accept: application/json, text/event-stream'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
<span class="nt">--data</span> <span class="s1">'{
    "method": "initialize",
    "params": {
        "protocolVersion": "2024-11-05",
        "capabilities": {},
        "clientInfo": {
            "name": "mcp-inspector",
            "version": "0.7.0"
        }
    },
    "jsonrpc": "2.0",
    "id": 0
}'</span> <span class="nt">-i</span>


<span class="c"># 2. notifications/initialized</span>
curl <span class="nt">--location</span> <span class="s1">'http://localhost:8000/mcp'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Accept: application/json, text/event-stream'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Mcp-Session-Id: 744f2f9dd0b84c419fb97d3a933534db'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
<span class="nt">--data</span> <span class="s1">'{
    "method": "notifications/initialized",
    "jsonrpc": "2.0"
}'</span> <span class="nt">-i</span>

<span class="c"># 3. tools/list</span>
curl <span class="nt">--location</span> <span class="s1">'http://localhost:8000/mcp'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Accept: application/json, text/event-stream'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Mcp-Session-Id: 744f2f9dd0b84c419fb97d3a933534db'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
<span class="nt">--data</span> <span class="s1">'{
    "method": "tools/list",
    "params": {},
    "jsonrpc": "2.0",
    "id": 1
}'</span> <span class="nt">-i</span>

<span class="c"># 4. tools/call</span>
curl <span class="nt">--location</span> <span class="s1">'http://localhost:8000/mcp'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Accept: application/json, text/event-stream'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Mcp-Session-Id: 744f2f9dd0b84c419fb97d3a933534db'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
<span class="nt">--data</span> <span class="s1">'{
    "method": "tools/call",
    "params": {
        "name": "hello_world",
        "arguments": {
            "name": "Leo"
        },
        "_meta": {
            "progressToken": 1
        }
    },
    "jsonrpc": "2.0",
    "id": 2
}'</span> <span class="nt">-i</span>

</code></pre></div></div> <p>可以看出，实际上MCP的通信协议没什么神秘的，MCP带来的好处并不是技术上的革新，而是统一协议，这样服务提供方和用户都可以有共识，就好像HTTP本质上也是基于TCP传输，但是正是因为有了开放协议，制定了标准之后，才有了网站和各类APP的繁荣发展。</p> <h2 id="622-claude-code">6.2.2 Claude Code</h2> <p>了解完MCP协议，我们结合Claude Code来看看MCP如何结合在实际应用中的。</p> <p>Claude Code（下称为CC）作为Anthropic的AI Agent，目前被很多人使用，我们可以通过系统提示词看到CC是通过MCP定义工具的，总体的工具如下（v1.*）：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_13-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_13-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_13-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058560_13.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>我们可以在请求的<code class="language-plaintext highlighter-rouge">tools</code>里看到对应的工具定义</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058561_14-480.webp 480w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058561_14-800.webp 800w,/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058561_14-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-21-ce101-6-tool-use-and-mcp/1761058561_14.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>我们看看<code class="language-plaintext highlighter-rouge">Bash</code>的定义</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bash"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Executes a given bash command in a persistent shell session with optional timeout, ensuring proper handling and security measures.</span><span class="se">\n\n</span><span class="s2">Before executing the command, please follow these steps:</span><span class="se">\n\n</span><span class="s2">1. Directory Verification:</span><span class="se">\n</span><span class="s2">   - If the command will create new directories or files, first use the LS tool to verify the parent directory exists and is the correct location</span><span class="se">\n</span><span class="s2">   - For example, before running </span><span class="se">\"</span><span class="s2">mkdir foo/bar</span><span class="se">\"</span><span class="s2">, first use LS to check that </span><span class="se">\"</span><span class="s2">foo</span><span class="se">\"</span><span class="s2"> exists and is the intended parent directory</span><span class="se">\n\n</span><span class="s2">2. Command Execution:</span><span class="se">\n</span><span class="s2">   - Always quote file paths that contain spaces with double quotes (e.g., cd </span><span class="se">\"</span><span class="s2">path with spaces/file.txt</span><span class="se">\"</span><span class="s2">)</span><span class="se">\n</span><span class="s2">   - Examples of proper quoting:</span><span class="se">\n</span><span class="s2">     - cd </span><span class="se">\"</span><span class="s2">/Users/name/My Documents</span><span class="se">\"</span><span class="s2"> (correct)</span><span class="se">\n</span><span class="s2">     - cd /Users/name/My Documents (incorrect - will fail)</span><span class="se">\n</span><span class="s2">     - python </span><span class="se">\"</span><span class="s2">/path/with spaces/script.py</span><span class="se">\"</span><span class="s2"> (correct)</span><span class="se">\n</span><span class="s2">     - python /path/with spaces/script.py (incorrect - will fail)</span><span class="se">\n</span><span class="s2">   - After ensuring proper quoting, execute the command.</span><span class="se">\n</span><span class="s2">   - Capture the output of the command.</span><span class="se">\n\n</span><span class="s2">Usage notes:</span><span class="se">\n</span><span class="s2">  - The command argument is required.</span><span class="se">\n</span><span class="s2">  - You can specify an optional timeout in milliseconds (up to 600000ms / 10 minutes). If not specified, commands will timeout after 120000ms (2 minutes).</span><span class="se">\n</span><span class="s2">  - It is very helpful if you write a clear, concise description of what this command does in 5-10 words.</span><span class="se">\n</span><span class="s2">  - If the output exceeds 30000 characters, output will be truncated before being returned to you.</span><span class="se">\n</span><span class="s2">  - VERY IMPORTANT: You MUST avoid using search commands like `find` and `grep`. Instead use Grep, Glob, or Task to search. You MUST avoid read tools like `cat`, `head`, `tail`, and `ls`, and use Read and LS to read files.</span><span class="se">\n</span><span class="s2"> - If you _still_ need to run `grep`, STOP. ALWAYS USE ripgrep at `rg` first, which all ${PRODUCT_NAME} users have pre-installed.</span><span class="se">\n</span><span class="s2">  - When issuing multiple commands, use the ';' or '&amp;&amp;' operator to separate them. DO NOT use newlines (newlines are ok in quoted strings).</span><span class="se">\n</span><span class="s2">  - Try to maintain your current working directory throughout the session by using absolute paths and avoiding usage of `cd`. You may use `cd` if the User explicitly requests it.</span><span class="se">\n</span><span class="s2">    &lt;good-example&gt;</span><span class="se">\n</span><span class="s2">    pytest /foo/bar/tests</span><span class="se">\n</span><span class="s2">    &lt;/good-example&gt;</span><span class="se">\n</span><span class="s2">    &lt;bad-example&gt;</span><span class="se">\n</span><span class="s2">    cd /foo/bar &amp;&amp; pytest tests</span><span class="se">\n</span><span class="s2">    &lt;/bad-example&gt;</span><span class="se">\n\n\n\n\n</span><span class="s2"># Committing changes with git</span><span class="se">\n\n</span><span class="s2">When the user asks you to create a new git commit, follow these steps carefully:</span><span class="se">\n\n</span><span class="s2">1. You have the capability to call multiple tools in a single response. When multiple independent pieces of information are requested, batch your tool calls together for optimal performance. ALWAYS run the following bash commands in parallel, each using the Bash tool:</span><span class="se">\n</span><span class="s2">  - Run a git status command to see all untracked files.</span><span class="se">\n</span><span class="s2">  - Run a git diff command to see both staged and unstaged changes that will be committed.</span><span class="se">\n</span><span class="s2">  - Run a git log command to see recent commit messages, so that you can follow this repository's commit message style.</span><span class="se">\n</span><span class="s2">2. Analyze all staged changes (both previously staged and newly added) and draft a commit message:</span><span class="se">\n</span><span class="s2">  - Summarize the nature of the changes (eg. new feature, enhancement to an existing feature, bug fix, refactoring, test, docs, etc.). Ensure the message accurately reflects the changes and their purpose (i.e. </span><span class="se">\"</span><span class="s2">add</span><span class="se">\"</span><span class="s2"> means a wholly new feature, </span><span class="se">\"</span><span class="s2">update</span><span class="se">\"</span><span class="s2"> means an enhancement to an existing feature, </span><span class="se">\"</span><span class="s2">fix</span><span class="se">\"</span><span class="s2"> means a bug fix, etc.).</span><span class="se">\n</span><span class="s2">  - Check for any sensitive information that shouldn't be committed</span><span class="se">\n</span><span class="s2">  - Draft a concise (1-2 sentences) commit message that focuses on the </span><span class="se">\"</span><span class="s2">why</span><span class="se">\"</span><span class="s2"> rather than the </span><span class="se">\"</span><span class="s2">what</span><span class="se">\"\n</span><span class="s2">  - Ensure it accurately reflects the changes and their purpose</span><span class="se">\n</span><span class="s2">3. You have the capability to call multiple tools in a single response. When multiple independent pieces of information are requested, batch your tool calls together for optimal performance. ALWAYS run the following commands in parallel:</span><span class="se">\n</span><span class="s2">   - Add relevant untracked files to the staging area.</span><span class="se">\n</span><span class="s2">   - Create the commit with a message ending with:</span><span class="se">\n</span><span class="s2">   🤖 Generated with [Claude Code](https://claude.ai/code)</span><span class="se">\n\n</span><span class="s2">   Co-Authored-By: Claude &lt;noreply@anthropic.com&gt;</span><span class="se">\n</span><span class="s2">   - Run git status to make sure the commit succeeded.</span><span class="se">\n</span><span class="s2">4. If the commit fails due to pre-commit hook changes, retry the commit ONCE to include these automated changes. If it fails again, it usually means a pre-commit hook is preventing the commit. If the commit succeeds but you notice that files were modified by the pre-commit hook, you MUST amend your commit to include them.</span><span class="se">\n\n</span><span class="s2">Important notes:</span><span class="se">\n</span><span class="s2">- NEVER update the git config</span><span class="se">\n</span><span class="s2">- NEVER run additional commands to read or explore code, besides git bash commands</span><span class="se">\n</span><span class="s2">- NEVER use the TodoWrite or Task tools</span><span class="se">\n</span><span class="s2">- DO NOT push to the remote repository unless the user explicitly asks you to do so</span><span class="se">\n</span><span class="s2">- IMPORTANT: Never use git commands with the -i flag (like git rebase -i or git add -i) since they require interactive input which is not supported.</span><span class="se">\n</span><span class="s2">- If there are no changes to commit (i.e., no untracked files and no modifications), do not create an empty commit</span><span class="se">\n</span><span class="s2">- In order to ensure good formatting, ALWAYS pass the commit message via a HEREDOC, a la this example:</span><span class="se">\n</span><span class="s2">&lt;example&gt;</span><span class="se">\n</span><span class="s2">git commit -m </span><span class="se">\"</span><span class="s2">$(cat &lt;&lt;'EOF'</span><span class="se">\n</span><span class="s2">   Commit message here.</span><span class="se">\n\n</span><span class="s2">   🤖 Generated with [Claude Code](https://claude.ai/code)</span><span class="se">\n\n</span><span class="s2">   Co-Authored-By: Claude &lt;noreply@anthropic.com&gt;</span><span class="se">\n</span><span class="s2">   EOF</span><span class="se">\n</span><span class="s2">   )</span><span class="se">\"\n</span><span class="s2">&lt;/example&gt;</span><span class="se">\n\n</span><span class="s2"># Creating pull requests</span><span class="se">\n</span><span class="s2">Use the gh command via the Bash tool for ALL GitHub-related tasks including working with issues, pull requests, checks, and releases. If given a Github URL use the gh command to get the information needed.</span><span class="se">\n\n</span><span class="s2">IMPORTANT: When the user asks you to create a pull request, follow these steps carefully:</span><span class="se">\n\n</span><span class="s2">1. You have the capability to call multiple tools in a single response. When multiple independent pieces of information are requested, batch your tool calls together for optimal performance. ALWAYS run the following bash commands in parallel using the Bash tool, in order to understand the current state of the branch since it diverged from the main branch:</span><span class="se">\n</span><span class="s2">   - Run a git status command to see all untracked files</span><span class="se">\n</span><span class="s2">   - Run a git diff command to see both staged and unstaged changes that will be committed</span><span class="se">\n</span><span class="s2">   - Check if the current branch tracks a remote branch and is up to date with the remote, so you know if you need to push to the remote</span><span class="se">\n</span><span class="s2">   - Run a git log command and `git diff [base-branch]...HEAD` to understand the full commit history for the current branch (from the time it diverged from the base branch)</span><span class="se">\n</span><span class="s2">2. Analyze all changes that will be included in the pull request, making sure to look at all relevant commits (NOT just the latest commit, but ALL commits that will be included in the pull request!!!), and draft a pull request summary</span><span class="se">\n</span><span class="s2">3. You have the capability to call multiple tools in a single response. When multiple independent pieces of information are requested, batch your tool calls together for optimal performance. ALWAYS run the following commands in parallel:</span><span class="se">\n</span><span class="s2">   - Create new branch if needed</span><span class="se">\n</span><span class="s2">   - Push to remote with -u flag if needed</span><span class="se">\n</span><span class="s2">   - Create PR using gh pr create with the format below. Use a HEREDOC to pass the body to ensure correct formatting.</span><span class="se">\n</span><span class="s2">&lt;example&gt;</span><span class="se">\n</span><span class="s2">gh pr create --title </span><span class="se">\"</span><span class="s2">the pr title</span><span class="se">\"</span><span class="s2"> --body </span><span class="se">\"</span><span class="s2">$(cat &lt;&lt;'EOF'</span><span class="se">\n</span><span class="s2">## Summary</span><span class="se">\n</span><span class="s2">&lt;1-3 bullet points&gt;</span><span class="se">\n\n</span><span class="s2">## Test plan</span><span class="se">\n</span><span class="s2">[Checklist of TODOs for testing the pull request...]</span><span class="se">\n\n</span><span class="s2">🤖 Generated with [Claude Code](https://claude.ai/code)</span><span class="se">\n</span><span class="s2">EOF</span><span class="se">\n</span><span class="s2">)</span><span class="se">\"\n</span><span class="s2">&lt;/example&gt;</span><span class="se">\n\n</span><span class="s2">Important:</span><span class="se">\n</span><span class="s2">- NEVER update the git config</span><span class="se">\n</span><span class="s2">- DO NOT use the TodoWrite or Task tools</span><span class="se">\n</span><span class="s2">- Return the PR URL when you're done, so the user can see it</span><span class="se">\n\n</span><span class="s2"># Other common operations</span><span class="se">\n</span><span class="s2">- View comments on a Github PR: gh api repos/foo/bar/pulls/123/comments"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"input_schema"</span><span class="p">:</span><span class="w">
    </span><span class="p">{</span><span class="w">
        </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"object"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"properties"</span><span class="p">:</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"The command to execute"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"timeout"</span><span class="p">:</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"number"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Optional timeout in milliseconds (max 600000)"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"description"</span><span class="p">:</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">" Clear, concise description of what this command does in 5-10 words. Examples:</span><span class="se">\n</span><span class="s2">Input: ls</span><span class="se">\n</span><span class="s2">Output: Lists files in current directory</span><span class="se">\n\n</span><span class="s2">Input: git status</span><span class="se">\n</span><span class="s2">Output: Shows working tree status</span><span class="se">\n\n</span><span class="s2">Input: npm install</span><span class="se">\n</span><span class="s2">Output: Installs package dependencies</span><span class="se">\n\n</span><span class="s2">Input: mkdir foo</span><span class="se">\n</span><span class="s2">Output: Creates directory 'foo'"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"required"</span><span class="p">:</span><span class="w">
        </span><span class="p">[</span><span class="w">
            </span><span class="s2">"command"</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="nl">"additionalProperties"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
        </span><span class="nl">"$schema"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://json-schema.org/draft-07/schema#"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span></code></pre></div></div> <p>MCP是Anthropic推行的标准，自然快速在自家产品采用了，我们可以看到，在AI Agent中需要有一个MCP Client的模块，这样才可以完成前面提到的流程，去获取对应的工具列表给拼接到上下文中给到大模型，最后从大模型返回的上下文拿到需要执行的工具，再调用MCP Server进行执行。</p> <p>现在很多AI Agent集成了MCP调用的能力，可以通过配置的方式进行调用，比如CC的下可以用<code class="language-plaintext highlighter-rouge">.mcp.json</code>：</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"mcpServers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"demo-server-stdio"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"python"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"/Users/ifuryst/projects/github/MCP-demo/server.py"</span><span class="p">],</span><span class="w">
      </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"DEMO_API_KEY"</span><span class="p">:</span><span class="w"> </span><span class="s2">"stdio-key-12345"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"DEMO_ENV"</span><span class="p">:</span><span class="w"> </span><span class="s2">"development"</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"demo-server-sse"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sse"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://127.0.0.1:8001/sse"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"headers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"X-API-Key"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sse-key-67890"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"X-Environment"</span><span class="p">:</span><span class="w"> </span><span class="s2">"testing"</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"demo-server-http"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://127.0.0.1:8002/mcp"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"headers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"X-API-Key"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http-key-abcde"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"X-Environment"</span><span class="p">:</span><span class="w"> </span><span class="s2">"production"</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span></code></pre></div></div> <h1 id="63-总结">6.3 总结</h1> <p>这章的篇幅不长，很快的就将工具调用相关的内容过完，实际应用中不一定局限在函数调用或MCP，具体例子是这几天Anthropic推出的<a href="https://www.anthropic.com/news/skills">Claude Skills</a>，给出了一个很实在的例子。我们在实际的AI应用研发中，关注MCP是为了关注协议兼容，可以快速享用一些协议带来的好处，包括商业机会、开源复用等等。而使用函数调用可能更多是一方的工具快速集成、性能最大化等作用，在此基础之上是可以类似Calude Skills一样做一定的扩展，扩宽一点大模型的边界，让大模型拥有更多的能力支撑更复杂的业务场景（这也是模型能力持续提升带来的转变）。</p> <p>最终回归到工具使用，目前更多是服务于AI Agent，在AI Agent中工具的使用主要集中在这么几个重点上：</p> <ol> <li>工具的集成：根据Agent的不同，可以集成不同的工具，最常见的有ShellExec、FileOp、BrowserUse、APICall等</li> <li>定义和加载工具：现在基本可以依据MCP做定义了，至于加载可以启动时加载也可以运行时加载，更可以通过一些更智能的手段加载必要的工具</li> <li>执行和结果收集：这个主要是Agent内部的流程实现</li> <li>结果卸载：AI Agent长时段（Long-horizon）运行基本上上下文会被各种工具调用的结果塞满，如何抽离卸载工具执行结果是上下文管理中很重要的一部分</li> </ol> <p>有了工具调用的AI Agent，拥有了与外界交互的能力，结合前面的提到记忆系统和持久化能力，大模型的应用从一来一回的多轮次对话式生成进入到了可自主决策执行的阶段了。接下去我们就会以可自主执行的AI Agent为核心去结合前面了解的技术来深入AI Agent的内部。</p>]]></content><author><name></name></author><category term="AI"/><category term="AI"/><category term="CE101"/><category term="Book"/><summary type="html"><![CDATA[早期有些人寄希望于大模型能力提升能实现AGI，但是现在慢慢地发现，工具调用才是现阶段模型最需要的，工具调用也是大模型与外界交互的一个窗口。现在流行的Function Calling、Computer-Use、MCP（Model Context Protocol）都是在这个方向延伸出来的。]]></summary></entry><entry><title type="html">LeoTalk AI周知 5: Deep Agent</title><link href="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-1-deep-agent/" rel="alternate" type="text/html" title="LeoTalk AI周知 5: Deep Agent"/><published>2025-10-20T00:00:00+00:00</published><updated>2025-10-20T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-1-deep-agent</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-1-deep-agent/"><![CDATA[<p>最近开始有不少人聊Deep Agent这个词了，人们热衷于发明新的名词，但是同时热词也反映了人们的共同经历。</p> <p>Deep Agent，或者说Agent 2.0大体上就是从Loop进化了，不单是套一个Loop就够了，比较窄面的理解其实就是往Multi Agent的方向演进了</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_9-480.webp 480w,/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_9-800.webp 800w,/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_9.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>原因是任务越来越复杂，没办法通过简单的基于Loop实现ReAct类型的Agent了，上下文会爆炸，各种任务混杂在一起，也很难将上下文精准卸载出去或者做摘要缩减，而拆分成多Agent的好处也在AI Agent度过初期阶段后成为必须。业务场景的扩展、任务复杂度提升、迭代差异和效果评估等因素都促使大家往这个方面去推进了，所以不难理解现在Deep Agent的重要性持续提升。Agent 1.0大家都在关注Prompting Engineering、MCP、记忆等，Agent 2.0需要开始考虑编排、稳健运行的runtime环境、agent的通信等。</p> <h1 id="技术研究技术突破">技术研究/技术突破</h1> <ul> <li>v0发布<a href="https://v0.app/vibecoding">The State of Vibe Coding</a></li> <li>Google Cloud的<a href="https://services.google.com/fh/files/misc/startup_technical_guide_ai_agents_final.pdf">Startup technical guide AI Agents</a>：在推销自己的云服务、AI服务和配套的开源、协议等</li> <li>Sonar的营销性质白皮书：<a href="https://www.sonarsource.com/the-coding-personalities-of-leading-llms.pdf">The Coding Personalities of Leading LLMs</a>，有趣的是根据静态分析工具分析了几个SOTA模型的人格类型和特征描述</li> </ul> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_10-480.webp 480w,/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_10-800.webp 800w,/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-20-leotalk-ai-weekly-1-deep-agent/1760966090_10.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <h1 id="产品模型发布">产品&amp;模型发布</h1> <ul> <li>InclusionAI（蚂蚁金服）<a href="https://x.com/AntLingAGI/status/1977767599657345027">发布</a>Ring-1T，基于Ling2.0架构，总1万亿参数（500亿活跃，128K上下文），取得IMO银牌</li> <li><a href="https://encord.com/multimodal-dataset-emm1/">Encord E-MM1</a>，号称全球最大规模的多模态数据集开源了</li> <li>Google<a href="https://blog.google/technology/ai/veo-updates-flow/">发布</a>Veo3.1：引用RundownAI的一句话很有趣：在今天这个注意力经济的时代，有用可能比不过有记忆点。暗讽Veo3.1的风光已经被Sora2抢光了。对于Google来说不可谓不深刻，之前就已经被OAI搞了好几次</li> <li>Anthropic<a href="https://www.anthropic.com/news/claude-haiku-4-5">发布</a>Claude Haiku4.5：主打便宜&amp;快（比Sonnet4.5快一倍）。不得不说现在CC比Codex的速度快很多</li> <li>Google和耶鲁大学研究者<a href="https://blog.google/technology/ai/google-gemma-ai-cancer-therapy-discovery/">发布</a>C2S-Scale 27B基础模型（基于Google的open-Gemma）：发现了此前未知的癌症治疗路径。</li> <li>微软<a href="https://microsoft.ai/news/introducing-mai-image-1-debuting-in-the-top-10-on-lmarena/">发布</a>MAI-Image-1，文生图模型，莫前在LMArena排Top10（值得注意的是第一还是腾讯的Hunyuan-image-3.0）</li> <li>ChatGPT Go（便宜版订阅）在<a href="https://help.openai.com/en/articles/11989085-what-is-chatgpt-go">89个国家可用</a></li> <li>Anthropic<a href="https://www.anthropic.com/news/skills">发布</a>Agent Skills：通过<code class="language-plaintext highlighter-rouge">SKILL.md</code>定义为出发点，分了三级的Skills设定，感觉有点类似插件系统了，写各种Prompt和工具使用，还可以使用脚本，甚至感觉有些场景下比MCP更好用</li> <li>ChatGPT现在可以<a href="https://x.com/OpenAI/status/1978608684088643709">自动管理保存的记忆</a>了，不会再有memory full的提醒了，非常make sense的一个功能，原来我一直觉得让用户手动管理内存是非常不合理的一件事情。</li> <li>Andrej Karpathy<a href="https://github.com/karpathy/nanochat">发布了nanochat</a>：用最小的方式展示了端到端的训练、微调的ChatGPT克隆，非常值得学习，可以有个全局的认知</li> <li>Cognition<a href="https://cognition.ai/blog/swe-grep">推出</a>SWE-grep和SWE-grep-mini模型（RL后），用于快速的上下文检索</li> <li>n8n<a href="https://docs.n8n.io/advanced-ai/ai-workflow-builder/">推出</a>Workflow Builder</li> <li>DeepSeek<a href="https://github.com/deepseek-ai/DeepSeek-OCR">推出</a>DeepSeek-OCR</li> </ul> <h1 id="热点论文">热点论文</h1> <ul> <li><a href="https://arxiv.org/abs/2510.00446"><strong>LongCodeZip: Compress Long Context for Code Language Models</strong></a><strong>：</strong>一个为代码LLM设计的高效上下文压缩框架，专门解决长上下文代码生成的高成本和延迟问题</li> <li><a href="https://alexzhang13.github.io/blog/2025/rlm/"><strong>Recursive Language Models</strong></a>：递归语言模型是一种允许模型通过递归调用自身来处理长上下文的技术，由RLM驱动的GPT-5 mini在长上下文基准测试中的表现比GPT-5高出 114%</li> <li><a href="https://arxiv.org/abs/2510.11701"><strong>Demystifying Reinforcement Learning in Agentic Reasoning</strong></a>：探讨RL在智能体推理中的关键因素：数据、算法、推理模式</li> <li><a href="https://www.biorxiv.org/content/10.1101/2025.04.14.648850v2"><strong>Scaling Large Language Models for Next-Generation Single-Cell Analysis</strong></a>：把基因表达数据转成细胞句子，让LLM可以理解单细胞生物学</li> <li><a href="https://arxiv.org/abs/2510.13786"><strong>The Art of Scaling Reinforcement Learning Compute for LLMs</strong></a>：提出ScaleRL，一种可预测的RL训练规模化规律</li> <li><a href="https://arxiv.org/abs/2510.05174"><strong>Emergent Coordination in Multi-Agent Language Models</strong></a>：提出信息论方法量化多Agent系统中的群体智能</li> <li><a href="https://arxiv.org/abs/2510.14973"><strong>Attention Is All You Need for KV Cache in Diffusion LLMs</strong></a>：一种无训练、架构无关的加速LLM推理方法</li> <li><a href="https://arxiv.org/abs/2510.12773"><strong>Dr.LLM: Dynamic Layer Routing in LLMs</strong></a>：提出一种新的LLM动态路由框架：让大模型在推理时按需选择执行、跳过或重复某些Transformer层，从而在不牺牲精度的前提下减少计算量</li> <li><a href="https://arxiv.org/abs/2510.07242"><strong>Hybrid Reinforcement: When Reward Is Sparse, It’s Better to Be Dense</strong></a>：提出HERO框架，结合信号验证器和奖励模型分数的RL框架，旨在同时保持可验证性和丰富的反馈的优点</li> <li><a href="https://arxiv.org/abs/2510.11977"><strong>Holistic Agent Leaderboard: The Missing Infrastructure for AI Agent Evaluation</strong></a>：HAL框架，建立一个高效、可复现、全维度的评测体系，推动从能过基准测试到能在真实世界中可靠工作的转变</li> <li><a href="https://arxiv.org/abs/2510.13928"><strong>LLMs Can Get “Brain Rot”!</strong></a>：提出LLM脑腐假说：持续接触低质量的网络文本会导致大模型认知退化</li> <li><a href="https://www.arxiv.org/abs/2509.23045"><strong>Kimi-Dev: Agentless Training as Skill Prior for SWE-Agents</strong></a>：融合两类软件工程LLM范式：Agentless和Agent-based（SWE-Agent），证明两者并非对立，而是可以互补强化</li> </ul> <h1 id="其他阅读">其他阅读</h1> <ul> <li><a href="https://www.xiaoyuzhoufm.com/episode/68e74f521bef327f3d7ddcd7">老罗和Tim的对话</a></li> <li><a href="https://docs.google.com/document/d/1rsaK53T3Lg5KoGwvf8ukOUvbELRtH-V0LnOIFDxBryE/edit?pli=1&amp;tab=t.0">Agentic Design Patterns</a></li> <li>Andrew Ng的<a href="https://www.deeplearning.ai/courses/agentic-ai/">课程</a></li> <li><a href="https://nlp.elvissaravia.com/p/deep-agents">Deep Agents</a>, <a href="https://www.philschmid.de/agents-2.0-deep-agents">Agents 2.0: From Shallow Loops to Deep Agents</a></li> <li><a href="https://github.com/anthropics/prompt-eng-interactive-tutorial">Anthropic’s Prompt Engineering Interactive Tutorial</a></li> </ul>]]></content><author><name></name></author><category term="AI"/><category term="AI"/><category term="LeoTalkAIWeekly"/><category term="Tech"/><summary type="html"><![CDATA[最近开始有不少人聊Deep Agent这个词了，人们热衷于发明新的名词，但是同时热词也反映了人们的共同经历。]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.20</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-20-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.20"/><published>2025-10-20T00:00:00+00:00</published><updated>2025-10-20T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-20-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-20-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>OpenAI研究员GPT-5数学突破乌龙</strong>：有OpenAI研究员曾宣称GPT-5在数学方面有突破，但后来被证实并未发生。<a href="https://the-decoder.com/leading-openai-researcher-announced-a-gpt-5-math-breakthrough-that-never-happened/">The Decoder</a></li> <li><strong>GoFundMe CEO：经济太差用户众筹买菜</strong>：GoFundMe的CEO表示，经济状况严峻，其用户甚至需要众筹支付日常基本生活用品。<a href="https://finance.yahoo.com/news/gofundme-ceo-says-economy-bad-182843671.html">Yahoo Finance</a></li> <li><strong>客机高空疑似被太空碎片击中</strong>：一架联合航空客机在36000英尺高空被不明物体击中，疑为太空碎片。<a href="https://avbrief.com/united-max-hit-by-falling-object-at-36000-feet/">AVbrief</a></li> <li><strong>Xubuntu.org域名可能遭入侵</strong>：有报告指出Xubuntu.org域名可能已被劫持或存在安全漏洞，用户应警惕。<a href="https://old.reddit.com/r/Ubuntu/comments/1oa4549/xubuntu_org_might_be_compromised/">Reddit</a></li> <li><strong>Pebble智能手表正式回归iOS和Android</strong>：经典智能手表品牌Pebble通过社区努力，正式在iOS和Android平台“复活”。<a href="https://twitter.com/ericmigi/status/1979576965494710564">Twitter</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>[Replacement.ai] AI内容替换工具</strong>：智能替换文案中的人名，避免政治不正确或敏感内容。<a href="https://replacement.ai/">Replacement.ai</a></li> <li><strong>微调（fine-tuning）的回归</strong>：文章探讨了在当前AI发展趋势下，微调方法重新重要性的论点。<a href="https://welovesota.com/article/the-case-for-the-return-of-fine-tuning">welovesota.com</a></li> <li><strong>GNU Octave整合JupyterLite</strong>：实现随时随地的科学计算和数据分析。<a href="https://blog.jupyter.org/gnu-octave-meets-jupyterlite-compute-anywhere-anytime-8b033afbbcdc">Jupyter Blog</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>Andrej Karpathy的成功建议</strong>：Andrej Karpathy分享了2013年他在课程中取得成功的经验和建议。<a href="https://cs.stanford.edu/people/karpathy/advice.html">Stanford CS</a></li> <li><strong>友谊始于家庭</strong>：一篇关于友谊起源及其重要性的深度文章。<a href="https://3quarksdaily.com/3quarksdaily/2025/10/friendship-begins-at-home.html">3 Quarks Daily</a></li> <li><strong>责任问题</strong>：一篇深入探讨责任问题及其在不同领域影响的博文。<a href="https://www.jamesshore.com/v2/blog/2025/the-accountability-problem">James Shore</a></li> <li><strong>选择过多不等于自由</strong>：文章探讨了选择的丰富性与真正自由之间的哲学区别。<a href="https://aeon.co/essays/why-an-abundance-of-choice-is-not-the-same-as-freedom">Aeon</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>Windows 11更新Bug致恢复环境失效</strong>：Windows 11 25H2十月更新引入Bug，导致恢复环境无法使用。<a href="https://www.techpowerup.com/342032/windows-11-25h2-october-update-bug-renders-recovery-environment-unusable">TechPowerUp</a></li> <li><strong>Novo Nordisk在加拿大市场失误</strong>：药企Novo Nordisk在加拿大市场出现某种策略或商业上的失误。<a href="https://www.science.org/content/blog-post/novo-nordisk-s-canadian-mistake">Science.org</a></li> <li><strong>高校拒绝特朗普高等教育协议</strong>：在截止日期临近之际，9所大学中的4所拒绝了特朗普政府重塑高等教育的协议。<a href="https://arstechnica.com/culture/2025/10/with-deadline-looming-4-of-9-universities-reject-trumps-compact-to-remake-higher-ed/">Ars Technica</a></li> <li><strong>纽约“亿万富翁大道”豪宅现裂缝</strong>：纽约地标性豪宅432 Park Avenue出现裂缝，引发责任归属争议。<a href="https://www.nytimes.com/2025/10/19/nyregion/432-park-avenue-condo-tower.html">NYT</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>[Duck-UI] 浏览器版DuckDB SQL IDE</strong>：一个基于浏览器的 DuckDB SQL 集成开发环境。<a href="https://demo.duckui.com/">Duck-UI Demo</a></li> <li><strong>美国政府运行状态监控</strong>：一个监控美国政府网站服务状态和可用性的工具。<a href="https://usa-status.com/">USA Status</a></li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>废弃土地加剧休斯顿高温</strong>：研究发现休斯顿的废弃土地是导致当地气温升高的一个重要因素。<a href="https://stories.tamu.edu/news/2025/10/07/abandoned-land-drives-dangerous-heat-in-houston-texas-am-study-finds/">Texas A&amp;M</a></li> <li><strong>从零组装电加热元件</strong>：低科技杂志分享了如何从头开始制作电加热元件的教程。<a href="https://solar.lowtechmagazine.com/2025/10/how-to-build-an-electric-heating-element-from-scratch/">Low-tech Magazine</a></li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li><strong>卢浮宫王室珠宝被盗</strong>：盗贼在短短4分钟内从卢浮宫博物馆偷走了王室珠宝。<a href="https://apnews.com/article/france-louvre-museum-robbery-a3687f330a43e0aaff68c732c4b2585b">AP News</a></li> <li><strong>2007年发生了什么</strong>：一个回顾2007年重大事件、流行文化和科技的怀旧网站。<a href="https://whathappenedin2007.com/">What Happened in 2007</a></li> <li><strong>百年拉链迎来首次重大升级</strong>：拉链在发明百年后，首次获得重大技术升级。<a href="https://www.wired.com/story/the-zipper-is-getting-its-first-major-upgrade-in-100-years/">Wired</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>如何摆脱VMware</strong>：Hacker News 上关于用户如何从VMware平台迁移的讨论。<a href="https://news.ycombinator.com/item?id=45635940">Hacker News</a></li> <li><strong>RFCs：互联网的蓝图</strong>：一篇文章解释了RFC（请求评论）在构建互联网标准中的重要性。<a href="https://ackreq.github.io/posts/what-are-rfcs/">Ackreq</a></li> <li><strong>比较单板计算机</strong>：一个方便开发者和爱好者比较各种单板计算机（SBC）规格和性能的网站。<a href="https://sbc.compare/">SBC Compare</a></li> <li><strong>Dosbian：在树莓派上启动DOSBox</strong>：Dosbian项目允许用户在树莓派上直接启动到DOSBox环境。<a href="https://cmaiolino.wordpress.com/dosbian/">cmaiolino.wordpress.com</a></li> <li><strong>改进Kindle网页反混淆器</strong>：一篇关于如何改进PixelMelt的Kindle网页反混淆器的技术博文。<a href="https://shkspr.mobi/blog/2025/10/improving-pixelmelts-kindle-web-deobfuscator/">shkspr.mobi</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.19</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-19-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.19"/><published>2025-10-19T00:00:00+00:00</published><updated>2025-10-19T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-19-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-19-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>诺贝尔奖得主杨振宁逝世</strong>：著名物理学家、诺贝尔奖得主杨振宁享年103岁去世，标志着一个时代的落幕。<a href="https://www.chinadaily.com.cn/a/202510/18/WS68f3170ea310f735438b5bf2.html">China Daily</a></li> <li><strong>Ring摄像头加强与执法部门合作</strong>：Ring摄像头与执法部门的日益紧密合作引发了公众对隐私的担忧。<a href="https://arstechnica.com/gadgets/2025/10/ring-cameras-are-about-to-get-increasingly-chummy-with-law-enforcement/">Ars Technica</a></li> <li><strong>Gary Marcus：AGI并非迫在眉睫</strong>：知名AI研究者Gary Marcus认为通用人工智能（AGI）遥远，且大型语言模型并非实现AGI的有效途径。<a href="https://garymarcus.substack.com/p/the-last-few-months-have-been-devastating">Gary Marcus Substack</a></li> <li><strong>AMD Strix Halo APU架构概览</strong>：深入解析AMD即将推出的采用小芯片设计的Strix Halo APU，展示其在性能和能效上的潜力。<a href="https://chipsandcheese.com/p/amds-chiplet-apu-an-overview-of-strix">Chips and Cheese</a></li> <li><strong>30年前的IDE失落了吗？</strong>：回顾30年前的集成开发环境，反思现代IDE在功能和哲学上的演变与缺失。<a href="https://blogsystem5.substack.com/p/the-ides-we-had-30-years-ago-and">blogsystem5</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Ripgrep 15.0 发布</strong>：快速命令行搜索工具Ripgrep更新至15.0版本，带来新功能与改进。<a href="https://github.com/BurntSushi/ripgrep/releases/tag/15.0.0">GitHub</a></li> <li><strong>StageConnect协议开源</strong>：Behringer的StageConnect音频设备协议现已开源，方便开发者集成音频设备。<a href="https://github.com/OpenMixerProject/StageConnect">GitHub</a></li> <li><strong>Flowistry Rust IDE插件</strong>：一款为Rust语言设计的IDE插件，帮助开发者聚焦于代码中的关键部分，提升开发效率。<a href="https://github.com/willcrichton/flowistry">GitHub</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>注意力是一种奢侈品</strong>：Seth Godin探讨在信息爆炸时代，注意力日益成为稀缺资源及其社会意义。<a href="https://seths.blog/2025/10/attention-is-a-luxury-good/">Seth’s Blog</a></li> <li><strong>Unix可执行文件即Smalltalk方法</strong>：一篇论文探讨将Unix可执行文件视为Smalltalk方法的创新编程范式，引发对系统设计的思考。<a href="https://programmingmadecomplicated.wordpress.com/wp-content/uploads/2025/10/onward25-jakubovic.pdf">Programming Made Complicated</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>./watch</strong>：一个轻量级命令行工具，用于实时监控文件或命令输出的变化。<a href="https://dotslashwatch.com/">dotslashwatch.com</a></li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>植物根系结构绘图</strong>：瓦赫宁根大学的数字藏品展示了大量精美的植物根系手绘图，具有科研和艺术价值。<a href="https://images.wur.nl/digital/collection/coll13/search">WUR Digital Collection</a></li> <li><strong>耳鸣神经调控器</strong>：一个在线工具，通过生成神经调控音调，帮助缓解耳鸣症状。<a href="https://mynoise.net/NoiseMachines/neuromodulationTonesGenerator.php">mynoise.net</a></li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li><strong>免费编程书籍汇总</strong>：GitHub上一个包含了大量免费编程书籍资源的仓库，供学习者参考。<a href="https://github.com/EbookFoundation/free-programming-books">GitHub</a></li> <li><strong>NeXT电脑办公室影像</strong>：记录NeXT电脑公司办公室的历史资料，重温科技发展的重要时刻。<a href="https://archive.org/details/NeXTComputerOffices">Internet Archive</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>SQL反模式</strong>：讨论在数据库设计和查询中应避免的常见SQL反模式，以提高效率和可维护性。<a href="https://datamethods.substack.com/p/sql-anti-patterns-you-should-avoid">datamethods</a></li> <li><strong>GPU上快速计算贝塞尔曲线距离</strong>：探讨在GPU上高效计算立方贝塞尔曲线距离的优化算法和技术。<a href="https://blog.pkh.me/p/46-fast-calculation-of-the-distance-to-cubic-bezier-curves-on-the-gpu.html">blog.pkh.me</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.18</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-18-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.18"/><published>2025-10-18T00:00:00+00:00</published><updated>2025-10-18T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-18-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-18-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>OpenAI未来12月需4000亿美金</strong>：分析指出OpenAI在一年内可能需要巨额资金以维持发展。<a href="https://www.wheresyoured.at/openai400bn/">wheresyoured.at</a></li> <li><strong>Andrej Karpathy：AGI仍需十年</strong>：AI专家Andrej Karpathy预测通用人工智能（AGI）至少还需要十年才能实现。<a href="https://www.dwarkesh.com/p/andrej-karpathy">Dwarkesh Patel</a></li> <li><strong>大脑细胞通过纳米管网络通信</strong>：一项科学新发现揭示大脑中存在通过树突纳米管网络实现的细胞间通信。<a href="https://www.science.org/doi/10.1126/science.adr7403">Science</a></li> <li><strong>亚马逊Ring与Flock警用AI摄像头合作</strong>：亚马逊旗下Ring智能门铃将与警用AI摄像头网络Flock建立合作关系，引发隐私担忧。<a href="https://techcrunch.com/2025/10/16/amazons-ring-to-partner-with-flock-a-network-of-ai-cameras-used-by-ice-feds-and-police/">TechCrunch</a></li> <li><strong>AI领域存在“货物崇拜”问题</strong>：金融时报文章批评AI领域盲目追求表象而非实质，存在“货物崇拜”现象。<a href="https://www.ft.com/content/f2025ac7-a71f-464f-a3a6-1e39c98612c7">FT</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Ruby核心团队接管RubyGems和Bundler</strong>：Ruby核心团队正式宣布接管两大关键包管理工具的维护和开发。<a href="https://www.ruby-lang.org/en/news/2025/10/17/rubygems-repository-transition/">Ruby-Lang.org</a></li> <li><strong>Claude Skills潜力巨大</strong>：Simon Willison探讨Claude Skills的强大功能，认为其影响可能远超传统MCP。<a href="https://simonwillison.net/2025/Oct/16/claude-skills/">Simon Willison</a></li> <li><strong>GNU工具链BPF支持的下一步</strong>：LWN文章深入探讨了GNU工具链中Berkeley Packet Filter (BPF) 支持的未来发展计划。<a href="https://lwn.net/Articles/1039827/">LWN.net</a></li> <li><strong>Forgejo v13.0 发布</strong>：代码托管平台Forgejo发布新版本，带来多项功能改进和更新。<a href="https://forgejo.org/2025-10-release-v13-0/">Forgejo.org</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>你没有事实核查，我必须尖叫</strong>：一篇关于信息时代缺乏事实核查、充斥虚假信息困境的深刻反思。<a href="https://shkspr.mobi/blog/2025/10/i-have-no-facts-and-i-must-scream/">shkspr.mobi</a></li> <li><strong>“转向”的深层含义</strong>：探讨“The Pivot”这一概念的深度文章，可能指职业、科技或社会层面的重大转变。<a href="https://www.antipope.org/charlie/blog-static/2025/10/the-pivot-1.html">antipope.org</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>4Chan律师公开与Ofcom通信</strong>：4Chan的律师披露了与英国通信管理局Ofcom之间的往来信件内容。<a href="https://alecmuffett.com/article/117792">Alec Muffett</a></li> <li><strong>电动汽车折旧速度快于燃油车</strong>：研究显示电动汽车的折旧速度正在超过燃油车，影响市场预期。<a href="https://restofworld.org/2025/ev-depreciation-blusmart-collapse/">Rest of World</a></li> <li><strong>GOG雇佣私人侦探追查IP版权方</strong>：游戏平台GOG为寻找失联的游戏IP版权所有者，不得不寻求私人侦探的帮助。<a href="https://www.thegamer.com/gog-private-investigators-off-the-grid-ip-rights-holders/">TheGamer</a></li> <li><strong>SpaceX机密卫星网络发射神秘信号</strong>：一个SpaceX的机密卫星网络正在太空中发射不明信号，引发广泛关注。<a href="https://www.npr.org/2025/10/17/nx-s1-5575254/spacex-starshield-starlink-signal">NPR</a></li> <li><strong>美国汽车收回率飙升</strong>：随着越来越多美国人拖欠汽车贷款，汽车被收回的案例急剧增加，反映经济压力。<a href="https://www.theguardian.com/business/2025/oct/17/us-car-repossessions-economy">The Guardian</a></li> <li><strong>Tor项目发起年度筹款活动</strong>：Tor项目发起募捐，呼吁社区支持其维护互联网自由和隐私的努力。<a href="https://blog.torproject.org/2025-fundraiser-donations-matched/">Tor Project Blog</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li>📸 <a href="https://meow.camera/">Meow.camera</a>：一个以猫咪为主题的趣味在线摄像头项目。</li> <li>🏙️ <a href="https://arstechnica.com/gaming/2024/08/metropolis-1998-lets-you-design-every-building-in-an-isometric-pixel-art-city/">Metropolis 1998</a>：一款像素艺术城市建造游戏，玩家可以设计城市中的每一栋建筑。</li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li>💰 <a href="https://50centadjustedforinflation.com/">50 Cent通胀调整计算器</a>：一个趣味网站，计算说唱歌手50 Cent的财富按通货膨胀调整后的价值。</li> <li>🏜️ <a href="https://bookofjoe2.blogspot.com/2025/10/live-stream-from-namib-desert.html">纳米布沙漠直播</a>：来自纳米布沙漠的实时直播流。</li> <li>🎮 《死或生》系列创作者板垣伴信去世：知名游戏制作人Tomonobu Itagaki逝世，享年58岁。<a href="https://www.gamedeveloper.com/design/dead-or-alive-creator-tomonobu-itagaki-has-passed-away-at-58">GameDeveloper.com</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>从AWS迁移到Hetzner Cloud的实践</strong>：一篇分享将服务从AWS迁移到Hetzner Cloud的详细经验文章。<a href="https://digitalsociety.coop/posts/migrating-to-hetzner-cloud/">Digital Society Coop</a></li> <li><strong>Ask HN: 如何阻止AWS恶意机器人请求</strong>：Hacker News上关于如何处理一个每月发送20亿请求的AWS恶意机器人的求助与讨论。<a href="https://news.ycombinator.com/item?id=45613567">Hacker News</a></li> <li><strong>Ask HN: 无框架如何构建大型前端应用</strong>：Hacker News上关于如何在不使用React等流行框架的情况下构建大型前端应用的讨论。<a href="https://news.ycombinator.com/item?id=45615193">Hacker News</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.16</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-16-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.16"/><published>2025-10-16T00:00:00+00:00</published><updated>2025-10-16T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-16-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-16-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>Apple M5芯片发布，AI性能大跃进</strong>：苹果正式发布M5芯片，全面升级MacBook Pro、iPad Pro及Vision Pro，重点提升AI处理能力。(<a href="https://www.apple.com/newsroom/2025/10/apple-unleashes-m5-the-next-big-leap-in-ai-performance-for-apple-silicon/">Apple Newsroom M5</a>、<a href="https://www.apple.com/macbook-pro/">MacBook Pro</a>、<a href="https://www.apple.com/newsroom/2025/10/apple-vision-pro-upgraded-with-the-m5-chip-and-dual-knit-band/">Vision Pro</a>、<a href="https://www.apple.com/newsroom/2025/10/apple-introduces-the-powerful-new-ipad-pro-with-the-m5-chip/">iPad Pro</a>)</li> <li><strong>F5证实黑客窃取BIG-IP漏洞与源代码</strong>：重要网络基础设施提供商F5披露，黑客已获取其未公开的BIG-IP漏洞及源代码，引发广泛关注。(<a href="https://www.bleepingcomputer.com/news/security/f5-says-hackers-stole-undisclosed-big-ip-flaws-source-code/">BleepingComputer</a>)</li> <li><strong>爱尔兰永久实施艺术家基本收入计划</strong>：爱尔兰政府决定将艺术家基本收入项目转为永久性政策，支持文化创意产业。(<a href="https://www.artnews.com/art-news/news/ireland-basic-income-artists-program-permanent-1234756981/">ARTnews</a>)</li> <li><strong>警惕“求职面试”钓鱼攻击</strong>：一篇个人经历讲述了差点在“求职面试”中被复杂网络钓鱼手法诈骗的经历。(<a href="https://blog.daviddodda.com/how-i-almost-got-hacked-by-a-job-interview">blog.daviddodda.com</a>)</li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Anthropic发布Claude Haiku 4.5</strong>：Anthropic推出其新一代AI模型Haiku 4.5。(<a href="https://www.anthropic.com/news/claude-haiku-4-5">anthropic.com</a>)</li> <li><strong>Nvidia DGX Spark：硬件强大，生态待熟</strong>：Nvidia的DGX Spark在硬件上表现出色，但其生态系统仍处于早期发展阶段。(<a href="https://simonwillison.net/2025/Oct/14/nvidia-dgx-spark/">simonwillison.net</a>)</li> <li><strong>“Just Talk to It”：一种Agentic工程方法</strong>：探讨通过直接对话来引导AI Agent开发的新范式。(<a href="https://steipete.me/posts/just-talk-to-it">steipete.me</a>)</li> <li><strong>Zed编辑器现已支持Windows</strong>：流行的代码编辑器Zed正式发布Windows版本。(<a href="https://zed.dev/blog/zed-for-windows-is-here">zed.dev</a>)</li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>拒绝做Copilot代码的“橡皮图章”</strong>：一位程序员表达了对Copilot生成代码的担忧，强调人工审核的重要性。(<a href="https://prahladyeri.github.io/blog/2025/10/i-am-a-programmer.html">prahladyeri.github.io</a>)</li> <li><strong>“你是森林里最可怕的怪物”</strong>：一篇引人深思的文章，探讨了视角与力量的哲学。(<a href="https://jamie.ideasasylum.com/2025/10/15/you-are-the-scariest-monster-in-the-woods">jamie.ideasasylum.com</a>)</li> <li><strong>放弃Serverless带来性能提升与架构简化</strong>：一家公司分享了从Serverless转向传统架构后，性能和复杂性得到的改善。(<a href="https://www.unkey.com/blog/serverless-exit">unkey.com</a>)</li> <li><strong>代码语法高亮为什么会出错？</strong>：深入分析代码语法高亮中可能存在的问题和挑战。(<a href="https://tonsky.me/blog/syntax-highlighting/">tonsky.me</a>)</li> <li><strong>7年AI实施经验总结</strong>：作者分享了其在AI项目实施过程中学到的重要经验和教训。(<a href="https://www.jampa.dev/p/llms-and-the-lessons-we-still-havent">jampa.dev</a>)</li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>警惕虚假互动机器人：电商流量73%可能来自虚假访客</strong>：报告指出电商网站上高达73%的访客可能并非真实用户，揭示了机器人模仿互动的严重性。(<a href="https://joindatacops.com/resources/how-73-of-your-e-commerce-visitors-could-be-fake">joindatacops.com</a>)</li> <li><strong>Pixnapping攻击：新型图片窃取漏洞</strong>：一种利用图片元数据进行敏感信息窃取的新型攻击手法被披露。(<a href="https://www.pixnapping.com/">pixnapping.com</a>)</li> <li><strong>英国风力涡轮机停运的成本</strong>：分析了英国因各种原因停运风力涡轮机所带来的经济损失。(<a href="https://wastedwind.energy/">wastedwind.energy</a>)</li> <li><strong>美国护照效力跌至历史新低</strong>：Henley全球流动性报告显示，美国护照的免签国数量有所下降。(<a href="https://www.henleyglobal.com/newsroom/press-releases/henley-global-mobility-report-oct-2025">henleyglobal.com</a>)</li> <li><strong>欧洲数字主权悖论：“聊天监控”更新</strong>：对欧洲“聊天监控”政策的最新进展和潜在影响进行讨论。(<a href="https://www.process-one.net/blog/chat-control-update-oct-2025/">process-one.net</a>)</li> <li><strong>硬盘性能是否在提升？</strong>：Backblaze通过数据分析探讨了硬盘驱动器的可靠性和性能趋势。(<a href="https://www.backblaze.com/blog/are-hard-drives-getting-better-lets-revisit-the-bathtub-curve/">backblaze.com</a>)</li> <li><strong>新英格兰地区最后一座燃煤电厂停运</strong>：据业主称，新英格兰地区的最后一座燃煤发电厂已停止运营。(<a href="https://www.nhpr.org/nh-news/2025-10-06/new-englands-last-coal-plant-has-stopped-operating-according-to-its-owners">nhpr.org</a>)</li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li>💬 <a href="https://github.com/squidowl/halloy">Halloy – 现代IRC客户端</a>：一个基于现代技术构建的IRC客户端。</li> <li>🕹️ <a href="https://www.macsourceports.com/">Mac Source Ports – 老游戏新Mac运行</a>：让旧版经典游戏能在新的Mac系统上运行。</li> <li>📝 <a href="https://github.com/42futures/firm">Firm – 文本工作管理系统</a>：一个简洁的文本化工作管理系统。</li> <li>🎤 <a href="https://scriberpro.cc/hn/">Scriber Pro – macOS离线AI转录</a>：一款Mac上支持离线AI语音转录的应用。</li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li>💾 <a href="https://diskprices.com/?locale=us">Disk Prices</a>：实时查询硬盘价格的工具。</li> <li>🎶 <a href="https://www.davidbyrne.com/radio#filter=all&amp;sortby=date:desc">David Byrne Radio</a>：著名音乐人大卫·伯恩的电台项目。</li> <li>📄 <a href="https://www.vincentuden.xyz/blog/pdf-reader">我讨厌Acrobat</a>：一篇关于PDF阅读器用户体验的吐槽文章。</li> <li>🖥️ <a href="https://lab.alexanderobenauer.com/updates/the-jasper-report">重现Canon Cat文档界面</a>：一个复刻经典Canon Cat电脑界面的项目。</li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>Pwning Nix生态系统</strong>：揭示了Nix包管理生态系统中的潜在安全漏洞和滥用风险。(<a href="https://ptrpa.ws/nixpkgs-actions-abuse">ptrpa.ws</a>)</li> <li><strong>利用Nvidia GPU Linux驱动的内核堆栈UAF漏洞</strong>：深入分析了一个Nvidia GPU Linux驱动中的内核堆栈use-after-free漏洞及其利用方式。(<a href="https://blog.quarkslab.com/./nvidia_gpu_kernel_vmalloc_exploit.html">blog.quarkslab.com</a>)</li> <li><strong>Rust的垃圾回收：终结器前沿</strong>：探讨了Rust中垃圾回收的实现和“终结器”机制。(<a href="https://soft-dev.org/pubs/html/hughes_tratt__garbage_collection_for_rust_the_finalizer_frontier/">soft-dev.org</a>)</li> <li><strong>ASP.NET安全特性绕过漏洞</strong>：一个关于ASP.NET中存在的安全特性绕过漏洞的技术详情。(<a href="https://nvd.nist.gov/vuln/detail/CVE-2025-55315">nvd.nist.gov</a>)</li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.15</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-15-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.15"/><published>2025-10-15T00:00:00+00:00</published><updated>2025-10-15T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-15-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-15-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>SpaceX 星舰第11次试飞成功</strong>：SpaceX成功发射星舰巨型火箭进行第11次测试飞行，取得进展。(<a href="https://www.cnn.com/science/live-news/spacex-starship-flight-11-launch-10-13-25">CNN</a>)</li> <li><strong>GPT-5o-mini被曝幻觉医学成绩</strong>：AI模型GPT-5o-mini在处理医学住院申请时出现幻觉，捏造申请人成绩。(<a href="https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization">ThalamusGME</a>)</li> <li><strong>新型CRISPR工具可编辑线粒体DNA</strong>：科学家开发出类似CRISPR的工具，首次实现对线粒体DNA的精确编辑。(<a href="https://www.nature.com/articles/d41586-025-03307-x">Nature</a>)</li> <li><strong>敏感内部链接在地球同步卫星上泄露</strong>：研究揭示GEO卫星明文传输敏感内部链接，存在严重安全风险。(<a href="https://satcom.sysnet.ucsd.edu/docs/dontlookup_ccs25_fullpaper.pdf">PDF</a>)</li> <li><strong>多家媒体拒签五角大楼新规</strong>：纽约时报、AP、Newsmax等媒体拒绝签署五角大楼新提出的新闻采访规则。(<a href="https://apnews.com/article/pentagon-press-access-defense-department-rules-95878bce05096912887701eaa6d019c6">AP News</a>)</li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Pyrefly：Rust实现的Python类型检查器与语言服务器</strong>：一个用Rust编写的高性能Python类型检查器和语言服务器项目。(<a href="https://pyrefly.org/?featured_on=talkpython">Pyrefly</a>)</li> <li><strong>AI如何“听”口音的可视化</strong>：通过声音可视化展示AI如何识别和聚类不同口音的研究。(<a href="https://accent-explorer.boldvoice.com/">Boldvoice</a>)</li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>媒体报道死亡原因与实际情况的偏差</strong>：分析新闻报道的死亡原因与真实死亡统计数据之间的差异。(<a href="https://ourworldindata.org/does-the-news-reflect-what-we-die-from">Our World in Data</a>)</li> <li><strong>为何力推Agentic，当模型连指令都难以遵循？</strong>：一篇质疑AI Agent能力与实际落地差距的讨论。(<a href="https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154">Cursor Forum</a>)</li> <li><strong>美国正滑向文盲社会</strong>：一篇深度探讨美国教育水平下降，导致国民阅读能力普遍低下的文章。(<a href="https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/">The Atlantic</a>)</li> <li><strong>你的老板为何不担心AI？</strong>：探讨管理者对AI的认知偏差，认为“关掉就好”的心态。(<a href="https://boydkane.com/essays/boss">Boyd Kane</a>)</li> <li><strong>为何要学习编程语言（2022）</strong>：一篇探讨学习编程语言深层价值的思考文章。(<a href="https://people.csail.mit.edu/rachit/post/why-study-programming-languages/">Rachit Nigam</a>)</li> <li><strong>Let’s Not Encrypt (2019)</strong>：一篇对加密技术潜在负面影响和过度依赖的批判性思考。(<a href="https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml">Michael Orlitzky</a>)</li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>位置追踪数据挑战传统认知</strong>：监控数据揭示了我们对位置追踪的理解可能存在误区和挑战。(<a href="https://www.lighthousereports.com/investigation/surveillance-secrets/">Lighthouse Reports</a>)</li> <li><strong>美国一半投票机被MAGA寡头拥有</strong>：揭示美国选举系统潜在的政治影响和所有权集中问题。(<a href="https://dissentinbloom.substack.com/p/half-of-americas-voting-machines">Dissent in Bloom</a>)</li> <li><strong>AppLovin被指控非自愿安装应用</strong>：报告揭露AppLovin存在未经用户同意安装应用程序的行为。(<a href="https://www.benedelman.org/applovin-nonconsensual-installs/">Ben Edelman</a>)</li> <li><strong>Telegram端到端加密被攻破</strong>：一篇2023年的研究论文详细介绍了如何绕过Telegram的端到端加密。(<a href="https://tosc.iacr.org/index.php/ToSC/article/view/10302">ToSC</a>)</li> <li><strong>特斯拉在韩面临补贴风险</strong>：因普遍存在的电池故障问题，特斯拉在韩国可能面临失去补贴的风险。(<a href="https://electrek.co/2025/10/14/tesla-is-at-risk-of-lossing-subsidies-in-korea-over-widespread-battery-failures/">Electrek</a>)</li> <li><strong>RFK Jr. 必须离开</strong>：一篇评论文章，呼吁RFK Jr.退出政治舞台，尤其针对其健康和疫苗立场。(<a href="https://quillette.com/2025/09/17/rfk-jr-must-go-hhs-health-vaccines/">Quillette</a>)</li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>ADS-B Exposed</strong>：一个揭露ADS-B（广播式自动相关监视）数据及其潜在隐私泄露的项目或工具。(<a href="https://adsb.exposed/">adsb.exposed</a>)</li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>天文学家“成像”遥远宇宙中的神秘暗物质</strong>：科学家成功对遥远宇宙中的一个神秘暗物体进行了成像。(<a href="https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x">MPG</a>)</li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li><strong>KDE庆祝29周年</strong>：KDE社区庆祝成立29周年并启动年度募捐活动。(<a href="https://kde.org/fundraisers/yearend2025/">KDE</a>)</li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>$2.97 ADC能有多糟糕？</strong>：一篇关于低成本ADC（模数转换器）性能和测试的深入分析。(<a href="https://excamera.substack.com/p/how-bad-can-a-297-adc-be">Excamera Substack</a>)</li> <li><strong>阵列语言的“动物园”</strong>：一个展示多种阵列编程语言的集合。(<a href="https://ktye.github.io/">Ktye.github.io</a>)</li> <li><strong>Wireshark 4.6.0支持macOS Pktap元数据</strong>：Wireshark更新，可在macOS上显示PID和进程名等包元数据。(<a href="https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/">Nuxx.net</a>)</li> <li><strong>Copy-and-Patch教程</strong>：一份关于”Copy-and-Patch”技术的详细教程。(<a href="https://transactional.blog/copy-and-patch/tutorial">Transactional Blog</a>)</li> <li><strong>SmolBSD – 构建你自己的极简BSD系统</strong>：一个教你如何构建最小化BSD系统的项目。(<a href="https://smolbsd.org/">SmolBSD</a>)</li> <li><strong>暂停Litestream 0.5.0版本</strong>：关于Litestream 0.5.0版本存在问题，建议暂停使用并等待修复的通知。(<a href="https://mtlynch.io/notes/hold-off-on-litestream-0.5.0/">mtlynch.io</a>)</li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk AI周知 4: AI时代的入口和商业化之路</title><link href="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/" rel="alternate" type="text/html" title="LeoTalk AI周知 4: AI时代的入口和商业化之路"/><published>2025-10-13T00:00:00+00:00</published><updated>2025-10-13T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/"><![CDATA[<p>在这点上OpenAI确实一次次走在前面，做出的一些决定和决策仔细思考还是挺佩服的。</p> <p>现在在大模型这个方向上，OpenAI领先的并不多，其他竞争对手追赶的太猛了，但是以ChatGPT的先发优势建立的生态和用户粘性，是现阶段OAI的强大护城河，Sam Altman本人的营销和融资能力也是很顶，给了OAI持续的动量。OAI现在不断以ChatGPT为基础去探索和扩展商业版图，是一个很好的策略，也是正确的策略。</p> <p>相比之下，国内市场，我觉得DeepSeek、豆包和元宝都是类似的，反而是千问，似乎没有一个很有名的C端流量入口，虽然其在大模型方面技术和发展速度很顶，但是似乎在流量入口这块似乎还差点意思。</p> <p>这块主要是针对C端的，也会辐射一些B端用户。不过B端角度更多还是在于API、推理服务maas、私有化等，那是另一个大市场和打法了。</p> <h1 id="技术研究技术突破">技术研究/技术突破</h1> <ul> <li>Adobe<a href="https://news.adobe.com/news/2025/10/adobe-us-holiday-shopping-season-cross-250-billion-online-rising-yoy">发布</a>研究报告，预计AI驱动的零售网站的流量将增加520％</li> <li>ASAPP发布<a href="https://cx.asapp.com/hubfs/eBooks/eBook%20-%20ASAPP%20-%20100%20generative%20AI%20use%20cases%20for%20contact%20centers.pdf"><strong>The generative AI agent 100: 100 use cases for contact centers by industry</strong></a>：概述了100个AI Agent的使用案例</li> </ul> <h2 id="state-of-ai-report-2025">State of AI Report 2025</h2> <p>Air Street Capital发布了2025年的AI状况报告<a href="https://www.stateof.ai/2025-report-launch">State of AI Report 2025</a>，主要讲述了AI推理能力的成熟、商业化的爆发、算力基础设施的工业化，以及全球竞争格局的重塑</p> <ol> <li>2025年是推理元年（Reasoning Got Real）</li> </ol> <ul> <li>OpenAI、Google、Anthropic、DeepSeek等大模型厂商都推出了能进行复杂推理、验证和反思的系统</li> <li>人机交互从生成式迈向推理式，标志着AI进入能规划、验证和自我纠正的新阶段</li> <li>见证了AI推理能力的全球竞赛，研究进展速度非常快</li> </ul> <ol> <li>产业和商业化：AI进入盈利时代</li> </ol> <ul> <li>AI商业化全面爆发：顶级实验室和企业营收接近200亿美元</li> <li>成本骤降、性价比倍增：模型能力价格比每6-8个月翻倍</li> <li>企业采用率激增：美国使用AI工具的企业从2023年5%飙升至44%；平均合同金额达53万美元；AI-First创业公司增长速度是同行的1.5倍</li> <li>普及化趋势（1200AI从业者中调查）：95%在工作或生活中使用AI；76%自费购买工具；大多数表示生产力持续提升</li> </ul> <ol> <li>算力与基础设施：进入AI工业时代</li> </ol> <ul> <li>多吉瓦级数据中心标志进入AI工业时代</li> <li>电力和土地取代GPU成为新的瓶颈</li> </ul> <ol> <li>地缘政治：中美格局成型</li> </ol> <ul> <li>OpenAI仍 保持领先，但是优势已经很微弱了</li> <li>Meta推出开源领先地位，中国厂商接棒，DeepSeek、Qwen、Kimi在推理和编程任务上直追GPT-5</li> <li>中国被认为是全球AI能力的可信第二位</li> </ul> <ol> <li>科研与应用突破：AI成为科研合作者</li> </ol> <ul> <li>AI进入科学研究角色：DeepMind的Co-Scientist、斯坦福的Virtual Lab、Profluent的ProGen3</li> <li>行动链（Chain-of-Action）推理进入无力世界，如AI2的Molmo-Act、Google的Gemini Robotics 1.5等具备推理后行动的具身智能系统</li> </ul> <ol> <li>安全与对齐：从理论风险专项可监控性</li> </ol> <ul> <li>安全研究进入务实阶段：模型可伪装对齐，促使研究者提出可监控税（Monitorability Tax）概念，为透明度而牺牲部分性能</li> </ul> <ol> <li>趋势与未来展望</li> </ol> <ul> <li>AI时新的生产系统</li> <li>扩展推理是下一个前沿：从语言模型走向具备计划、验证、反思和执行链路的智能体</li> <li>经济增长核心驱动力：AI成为全球生产力与竞争力的中心</li> </ul> <p><em>Opinion：PPT313页，确实很难一页一页看完，比较多是比较空洞的结论，不一定务实，但是可以提取一些自己感兴趣的部分看看，当作参考。我觉得长期工作在一线的从业者，对于AI的应用和敏感度应该还是有的，也能看到实际带来的营收情况。这个报告就当作全球角度的一个印证。</em></p> <h2 id="麦肯锡2025科技趋势展望报告">麦肯锡2025科技趋势展望报告</h2> <p>麦肯锡7月分发的<a href="https://www.mckinsey.com/capabilities/mckinsey-digital/our-insights/the-top-trends-in-tech#/">2025年科技趋势展望报告</a>，网页上看有交互式体验，<a href="https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20top%20trends%20in%20tech%202025/mckinsey-technology-trends-outlook-2025.pdf">完整版PDF</a>有108页。</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>主要分析了13项前沿科技趋势，聚焦在四个维度上的变化情况：</p> <ol> <li>创新（Innovation）</li> <li>关注度（Interest）</li> <li>投资（Equity Investment）</li> <li>行业采纳度（Adoption）</li> </ol> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>13个趋势分为三大类：</p> <ol> <li>AI革命（The AI Revolution）</li> <li>计算与连接前沿（Compute &amp; Connectivity Frontiers）</li> <li>工程前沿（Cutting-edge Engineering）</li> </ol> <p>六个宏观主题：</p> <ol> <li><strong>自主系统崛起</strong> —— 从实验走向现实，包括机器人与数字代理。</li> <li><strong>人机协作新范式</strong> —— 多模态交互、语音与触觉技术让AI成为“协作者”。</li> <li><strong>算力与基础设施瓶颈</strong> —— 电力、网络、数据中心成为关键制约。</li> <li><strong>地区与国家竞争加剧</strong> —— 科技主权、半导体、自主基础设施等成竞争焦点。</li> <li><strong>规模与专业化并行</strong> —— 同时发展超大模型与本地化/边缘智能。</li> <li><strong>负责任创新</strong> —— 透明度、公平性、伦理与信任成为商业竞争力要素。</li> </ol> <p>最主要的增长依然来自于AI领域，其中最主要的亮点是Agentic AI获得了巨大的关注</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>2023年因为经济环境波动导致科技投资下滑，但是2024年多数趋势反弹，其中AI、可持续能源、云计算和半导体是最具吸引力的投资方向。AI+专用硬件+清洁能源成为互相促进的三大主轴</p> <p>总体而言，AI正在成为所有前沿科技的放大器，而Agentic AI的兴起标志着AI从生成内容走向了自主行动的新阶段，企业的竞争力将取决于能否在AI驱动的生态中实现规模化和跨领域融合</p> <p><em>Opinion：目前看2025年确实属于AI Agent大年（或者说Agentic AI），最近2个季度以来明显能感受到B端的重视和投入在持续提升，今年跑得快的企业都能收获不少。但是今年更多还是在早期阶段，和以往的技术发展有类似的趋势，AI的这波Adoption有长尾效应，可以预见明年会有更多的B端游预算投入这块，是非常大的机会。反观C端，目前更多还是在于诸如OpenAI这类拥有ChatGPT为超级入口的企业有撬动力，配合一下敢想敢试的战略，有很大机会撬动一些原来并不明显的市场，至少目前我们可以初见一些端倪了。</em></p> <h1 id="产品模型发布">产品&amp;模型发布</h1> <ul> <li>ElevenLabs<a href="https://elevenlabs.io/docs/agents-platform/customization/agent-workflows">发布</a>Agent Workflows</li> <li>FigureAI<a href="https://www.figure.ai/news/introducing-figure-03">发布</a>Figure 03</li> <li>Google<a href="https://cloud.google.com/blog/products/ai-machine-learning/introducing-gemini-enterprise">发布</a>Gemini Enterprise：对标OpenAI的AgentBuilder（只能通过API），定价为每个用户每月30美元（后续会推出针对初创和中小企业是20美元）</li> <li>Amazon<a href="https://aws.amazon.com/quicksuite/">发布</a>Quick Suite：对标OpenAI的AgentBuilder</li> <li>Google发布Gemini 2.5 Computer Use Model：CUA（Computer Use Agent）是结合了多模态的一个大方向，这个方向也是模型厂兵家必争之地。现在更多还是成本和延时的问题，不然有一些case可以处理的很好，某种角度可以看作是RPA的未来</li> <li>腾讯<a href="https://github.com/Tencent-Hunyuan/HunyuanVision">发布</a>Hunyuan-Vision-1.5-Thinking，多模态视觉大模型，在LM Arena Vision Arena上排名第三。最近腾讯多模态有些成绩</li> <li>三星<a href="https://arxiv.org/pdf/2510.04871">发布</a>TRM（Tiny Recursion Model），一个7M参数的模型，在某些推理任务上打败了SOTA模型</li> </ul> <h2 id="openai-devday-2025">OpenAI DevDay 2025</h2> <p><a href="https://www.youtube.com/watch?v=hS1YqcewH0c&amp;t=55s">OpenAI DevDay 2025</a>，关键点：</p> <ul> <li>Apps inside ChatGPT：应用可以集成到ChatGPT里，有点类似GPTs升级版，底层基于MCP去构建的。不管如何，势必会引发第一批抢滩登陆的APP，算是给这些应用一次推广和引流的机会</li> <li>AgentKit：包括<a href="https://platform.openai.com/agent-builder">Agent Builder</a>、<a href="https://openai.github.io/chatkit-js/">ChatKit</a>和<a href="https://platform.openai.com/docs/guides/evals">Evals</a>。更多是基于类似n8n、dify、coze的workflow去快速构建Agent（或者说工作流）。</li> <li>Codex：GA了。增加了Slack集成（Integration）、Codex SDK、企业控制（Enterprise Controls）</li> <li>API更新：增加了GPT-5 Pro、gpt-realtime-mini、Sora 2</li> </ul> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p><em>Opinion：我个人非常期待AgentKit，虽然现有的dify、coze等开源方案很Open了，但是更喜欢这种集成到ChatGPT这种日常高频使用的应用里，可以快速拉一些很常用的轻workflow，而不需要自己去serve一个。我相信到时候可以把一些信息摄取流集成进去，结合codex可以玩出很多花样。Jackywine</em><a href="https://mp.weixin.qq.com/s/oMsItbQUJr6sqgkJy_yA_A"><em>这篇文章</em></a><em>分析的也很棒，值得看</em></p> <h1 id="投资商业">投资&amp;商业</h1> <ul> <li>高通宣布收购Arduino</li> <li>软银以54亿美元收购了ABB的机器人部门（Robotics arm），这次收购让软银立即进入价值750亿美元的机器人市场，该市场的年增长率为8%（AI驱动的部分甚至有20%的增长速度）</li> <li>Bloomberg这张关于OpenAI、Nvidia相关的企业间的资本走向很有意思，值得一看：</li> </ul> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <h1 id="热点论文">热点论文</h1> <ul> <li><a href="https://arxiv.org/abs/2510.04618"><strong>Agentic Context Engineering (ACE): Self-Improving LLMs via Evolving Contexts, Not Fine-Tuning</strong></a>：斯坦福大学、SambaNova Systems和加州大学伯克利分校推出的ACE框架，不靠修改模型权重（参数微调），而是通过上下文工程，不断编辑、扩展模型输入上下文，像是为大模型维护一个不断成长的操作手册或知识库。有三个Generator、Reflector和Curator三个角色，整个流程采用同一个底座大模型，通过增量更新（而不是整体重写），避免上下文崩塌。</li> <li><a href="https://arxiv.org/abs/2509.02547"><strong>The Landscape of Agentic Reinforcement Learning for LLMs: A Survey</strong></a>：关于Agentic RL在大模型里的综述，系统性的梳理</li> <li><a href="https://arxiv.org/abs/2510.01179"><strong>TOUCAN: Synthesizing 1.5M Tool-Agentic Data from Real-World MCP Environments</strong></a>：MIT、IBM和华盛顿大学研究人员发布的，一个用于训练Agent使用MCP的数据集，包含了495个MCP Server和150万工具的交互</li> <li><a href="https://huggingface.co/blog/driaforall/mem-agent-blog"><strong>mem-agent: Equipping LLM Agents with Memory Using RL</strong></a></li> </ul> <h1 id="其他阅读">其他阅读</h1> <ul> <li><a href="https://x.com/aaditsh/status/1975424053763842398">50个</a>OpenAI的AgentBuilder的实用案例</li> <li>Mike Futia分享的<a href="https://x.com/mikefutia/status/1975940358526623953">工作流</a>（基于n8n+Sora2 API），可以快速将一张图片转成HD画质且没有水印的视频</li> <li>Antonio Gulli（谷歌Senior Engineer）在Google I/O 2025上Demo了3个AI Agent，目前在Google Docs上开源了<a href="https://docs.google.com/document/d/1rsaK53T3Lg5KoGwvf8ukOUvbELRtH-V0LnOIFDxBryE/edit?pli=1&amp;tab=t.0">400多页</a>的指南，很不错的内容，对于有在构建Agent的人值得一读</li> <li>这篇<a href="https://x.com/GoogleCloudTech/status/1976333515772809266">推文</a>表明：Google现在支持了1300万名开发者、每月处理1.3千万亿Tokens，Gemini已生成2.3亿段视频和130亿张图片，AI Overviews覆盖了20亿用户，65%的客户已经在使用Google的AI产品</li> </ul>]]></content><author><name></name></author><category term="AI"/><category term="AI"/><category term="Tech"/><category term="LeoTalkAIWeekly"/><summary type="html"><![CDATA[在这点上OpenAI确实一次次走在前面，做出的一些决定和决策仔细思考还是挺佩服的。]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.13</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-13-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.13"/><published>2025-10-13T00:00:00+00:00</published><updated>2025-10-13T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-13-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-13-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>Jeep软件更新致车辆变砖</strong>：Jeep通过OTA更新导致所有2024款Wrangler 4xe车型无法启动，引发车主不满。<a href="https://twitter.com/StephenGutowski/status/1977055831720862101">Twitter</a></li> <li><strong>GitHub Copilot RCE漏洞曝光</strong>：研究人员发现GitHub Copilot存在远程代码执行漏洞，可通过Prompt注入触发。<a href="https://embracethered.com/blog/posts/2025/github-copilot-remote-code-execution-via-prompt-injection/">embracethered.com</a></li> <li><strong>中国稀土限制威胁美国防供应链</strong>：中国新的稀土及磁体出口限制，可能对美国国防工业供应链造成冲击。<a href="https://www.csis.org/analysis/chinas-new-rare-earth-and-magnet-restrictions-threaten-us-defense-supply-chains">CSIS</a></li> <li><strong>德国石荷州转向开源邮件系统</strong>：德国石勒苏益格-荷尔斯泰因州政府完成其邮件系统向开源方案的迁移。<a href="https://news.itsfoss.com/schleswig-holstein-email-system-migration/">Itsfoss News</a></li> <li><strong>间谍软件公司NSO Group被美投资者收购</strong>：以色列间谍软件公司NSO Group确认被美国投资者收购，其未来发展引人关注。<a href="https://techcrunch.com/2025/10/10/spyware-maker-nso-group-confirms-acquisition-by-us-investors/">TechCrunch</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>ATLAS：更快LLM推理系统</strong>：Together.ai发布AdapTive-LeArning Speculator System，可显著加速LLM推理。<a href="https://www.together.ai/blog/adaptive-learning-speculator-system-atlas">together.ai</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>App Store的威权本质</strong>：文章探讨了App Store从一开始就具备的集权控制特性和其对生态系统的影响。<a href="https://infrequently.org/2025/10/the-app-store-was-always-authoritarian/">infrequently.org</a></li> <li><strong>托马斯·潘恩与批判性思维</strong>：回顾1776年托马斯·潘恩如何为反抗君主制和保持怀疑精神辩护，及其对现代社会的影响。<a href="https://theconversation.com/in-1776-thomas-paine-made-the-best-case-for-fighting-kings-and-for-being-skeptical-266448">The Conversation</a></li> <li><strong>维基百科为何不能说地球是平的</strong>：一篇关于维基百科中立性原则和知识论的文章，探讨平台在事实认定上的复杂性。<a href="https://en.wikipedia.org/wiki/Wikipedia:Why_Wikipedia_cannot_claim_the_Earth_is_not_flat">Wikipedia</a></li> <li><strong>AI繁荣之后会留下什么？</strong>：反思AI热潮结束后，我们可能面临的社会和技术遗产，以及长期影响。<a href="https://blog.robbowley.net/2025/10/12/after-the-ai-boom-what-might-we-be-left-with/">robbowley.net</a></li> <li><strong>自由软件并未“胜利”</strong>：探讨自由软件运动的现状与挑战，认为其尚未取得完全胜利，仍需努力。<a href="https://dorotac.eu/posts/fosswon/">dorotac.eu</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>“抵制Spotify”运动兴起</strong>：艺术家和粉丝发起DIY运动，鼓励大家放弃Spotify平台，以寻求更公平的音乐分发模式。<a href="https://www.theguardian.com/technology/2025/oct/12/spotify-boycott-artists">The Guardian</a></li> <li><strong>Nostr与ATProto（2024）</strong>：对比分析Nostr和ATProto两个去中心化社交协议的现状与发展，及其在构建未来网络中的角色。<a href="https://shreyanjain.net/2024/07/05/nostr-and-atproto.html">shreyanjain.net</a></li> <li><strong>极端天气造成超千亿损失</strong>：截至今年6月，极端天气事件已在美国造成超过1000亿美元的损失，刷新历史纪录，凸显气候变化影响。<a href="https://www.livescience.com/planet-earth/climate-change/extreme-weather-caused-more-than-usd100-billion-in-damage-by-june-smashing-us-records">Live Science</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>Rift：macOS平铺窗口管理器</strong>：一个专为macOS设计的平铺窗口管理器项目，旨在提升多任务处理效率。<a href="https://github.com/acsandmann/rift">GitHub</a></li> <li><strong>Spellscript：咒语式编程语言</strong>：一个独特且深奥的编程语言项目，其代码可读作“咒语书”。<a href="https://github.com/sirbread/spellscript">GitHub</a></li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>宠物狗对玩具的成瘾性行为</strong>：研究发现宠物狗对玩具有类似成瘾的行为特质，表现出极高动机和执着。<a href="https://www.nature.com/articles/s41598-025-18636-0">Nature</a></li> <li><strong>儿童长新冠患者血浆中纤维蛋白凝块定量</strong>：一项关于儿童长新冠患者血液中纤维蛋白凝块的研究，可能揭示长新冠的病理机制。<a href="https://www.researchsquare.com/article/rs-7483367/v1">Research Square</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>拒绝OneDrive备份的烦恼</strong>：指南介绍了如何避免Windows自动开启OneDrive备份，从而更好地管理本地文件。<a href="https://idiallo.com/byte-size/say-no-to-onedrive-backup">idiallo.com</a></li> <li><strong>Macro Splats 2025</strong>：一篇关于宏（Macro）使用与模式匹配的讨论，深入探讨其在编程中的应用。<a href="https://danybittel.ch/macro.html">danybittel.ch</a></li> <li><strong>Wireguard FPGA实现</strong>：利用FPGA加速WireGuard VPN协议的硬件实现项目，提高网络通信效率。<a href="https://github.com/chili-chips-ba/wireguard-fpga">GitHub</a></li> <li><strong>如何使用Helix编辑器</strong>：分享作者如何配置和使用Helix命令行文本编辑器的心得，提供实践性建议。<a href="https://rushter.com/blog/helix-editor/">rushter.com</a></li> <li><strong>PostgreSQL 18的psql管道模式</strong>：介绍psql在PostgreSQL 18中引入的管道模式（Pipelining）新特性，提升交互效率。<a href="https://postgresql.verite.pro/blog/2025/10/01/psql-pipeline.html">postgresql.verite.pro</a></li> <li><strong>锁定文件规范耗时四年</strong>：一篇关于Python中锁定文件（lock files）规范制定过程为何耗时漫长的文章，揭示标准化的复杂性。<a href="https://snarky.ca/why-it-took-4-years-to-get-a-lock-files-specification/">snarky.ca</a></li> <li><strong>Emacs agent-shell</strong>：一个由ACP驱动的Emacs Agent Shell工具，旨在提供更智能和交互式的开发体验。<a href="https://xenodium.com/introducing-agent-shell">xenodium.com</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry></feed>
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ifuryst.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ifuryst.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-10-16T00:16:03+00:00</updated><id>https://ifuryst.github.io/feed.xml</id><title type="html">ifuryst</title><subtitle>📝 &amp; 💭 </subtitle><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.16</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-16-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.16"/><published>2025-10-16T00:00:00+00:00</published><updated>2025-10-16T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-16-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-16-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>Apple M5芯片发布，AI性能大跃进</strong>：苹果正式发布M5芯片，全面升级MacBook Pro、iPad Pro及Vision Pro，重点提升AI处理能力。(<a href="https://www.apple.com/newsroom/2025/10/apple-unleashes-m5-the-next-big-leap-in-ai-performance-for-apple-silicon/">Apple Newsroom M5</a>、<a href="https://www.apple.com/macbook-pro/">MacBook Pro</a>、<a href="https://www.apple.com/newsroom/2025/10/apple-vision-pro-upgraded-with-the-m5-chip-and-dual-knit-band/">Vision Pro</a>、<a href="https://www.apple.com/newsroom/2025/10/apple-introduces-the-powerful-new-ipad-pro-with-the-m5-chip/">iPad Pro</a>)</li> <li><strong>F5证实黑客窃取BIG-IP漏洞与源代码</strong>：重要网络基础设施提供商F5披露，黑客已获取其未公开的BIG-IP漏洞及源代码，引发广泛关注。(<a href="https://www.bleepingcomputer.com/news/security/f5-says-hackers-stole-undisclosed-big-ip-flaws-source-code/">BleepingComputer</a>)</li> <li><strong>爱尔兰永久实施艺术家基本收入计划</strong>：爱尔兰政府决定将艺术家基本收入项目转为永久性政策，支持文化创意产业。(<a href="https://www.artnews.com/art-news/news/ireland-basic-income-artists-program-permanent-1234756981/">ARTnews</a>)</li> <li><strong>警惕“求职面试”钓鱼攻击</strong>：一篇个人经历讲述了差点在“求职面试”中被复杂网络钓鱼手法诈骗的经历。(<a href="https://blog.daviddodda.com/how-i-almost-got-hacked-by-a-job-interview">blog.daviddodda.com</a>)</li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Anthropic发布Claude Haiku 4.5</strong>：Anthropic推出其新一代AI模型Haiku 4.5。(<a href="https://www.anthropic.com/news/claude-haiku-4-5">anthropic.com</a>)</li> <li><strong>Nvidia DGX Spark：硬件强大，生态待熟</strong>：Nvidia的DGX Spark在硬件上表现出色，但其生态系统仍处于早期发展阶段。(<a href="https://simonwillison.net/2025/Oct/14/nvidia-dgx-spark/">simonwillison.net</a>)</li> <li><strong>“Just Talk to It”：一种Agentic工程方法</strong>：探讨通过直接对话来引导AI Agent开发的新范式。(<a href="https://steipete.me/posts/just-talk-to-it">steipete.me</a>)</li> <li><strong>Zed编辑器现已支持Windows</strong>：流行的代码编辑器Zed正式发布Windows版本。(<a href="https://zed.dev/blog/zed-for-windows-is-here">zed.dev</a>)</li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>拒绝做Copilot代码的“橡皮图章”</strong>：一位程序员表达了对Copilot生成代码的担忧，强调人工审核的重要性。(<a href="https://prahladyeri.github.io/blog/2025/10/i-am-a-programmer.html">prahladyeri.github.io</a>)</li> <li><strong>“你是森林里最可怕的怪物”</strong>：一篇引人深思的文章，探讨了视角与力量的哲学。(<a href="https://jamie.ideasasylum.com/2025/10/15/you-are-the-scariest-monster-in-the-woods">jamie.ideasasylum.com</a>)</li> <li><strong>放弃Serverless带来性能提升与架构简化</strong>：一家公司分享了从Serverless转向传统架构后，性能和复杂性得到的改善。(<a href="https://www.unkey.com/blog/serverless-exit">unkey.com</a>)</li> <li><strong>代码语法高亮为什么会出错？</strong>：深入分析代码语法高亮中可能存在的问题和挑战。(<a href="https://tonsky.me/blog/syntax-highlighting/">tonsky.me</a>)</li> <li><strong>7年AI实施经验总结</strong>：作者分享了其在AI项目实施过程中学到的重要经验和教训。(<a href="https://www.jampa.dev/p/llms-and-the-lessons-we-still-havent">jampa.dev</a>)</li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>警惕虚假互动机器人：电商流量73%可能来自虚假访客</strong>：报告指出电商网站上高达73%的访客可能并非真实用户，揭示了机器人模仿互动的严重性。(<a href="https://joindatacops.com/resources/how-73-of-your-e-commerce-visitors-could-be-fake">joindatacops.com</a>)</li> <li><strong>Pixnapping攻击：新型图片窃取漏洞</strong>：一种利用图片元数据进行敏感信息窃取的新型攻击手法被披露。(<a href="https://www.pixnapping.com/">pixnapping.com</a>)</li> <li><strong>英国风力涡轮机停运的成本</strong>：分析了英国因各种原因停运风力涡轮机所带来的经济损失。(<a href="https://wastedwind.energy/">wastedwind.energy</a>)</li> <li><strong>美国护照效力跌至历史新低</strong>：Henley全球流动性报告显示，美国护照的免签国数量有所下降。(<a href="https://www.henleyglobal.com/newsroom/press-releases/henley-global-mobility-report-oct-2025">henleyglobal.com</a>)</li> <li><strong>欧洲数字主权悖论：“聊天监控”更新</strong>：对欧洲“聊天监控”政策的最新进展和潜在影响进行讨论。(<a href="https://www.process-one.net/blog/chat-control-update-oct-2025/">process-one.net</a>)</li> <li><strong>硬盘性能是否在提升？</strong>：Backblaze通过数据分析探讨了硬盘驱动器的可靠性和性能趋势。(<a href="https://www.backblaze.com/blog/are-hard-drives-getting-better-lets-revisit-the-bathtub-curve/">backblaze.com</a>)</li> <li><strong>新英格兰地区最后一座燃煤电厂停运</strong>：据业主称，新英格兰地区的最后一座燃煤发电厂已停止运营。(<a href="https://www.nhpr.org/nh-news/2025-10-06/new-englands-last-coal-plant-has-stopped-operating-according-to-its-owners">nhpr.org</a>)</li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li>💬 <a href="https://github.com/squidowl/halloy">Halloy – 现代IRC客户端</a>：一个基于现代技术构建的IRC客户端。</li> <li>🕹️ <a href="https://www.macsourceports.com/">Mac Source Ports – 老游戏新Mac运行</a>：让旧版经典游戏能在新的Mac系统上运行。</li> <li>📝 <a href="https://github.com/42futures/firm">Firm – 文本工作管理系统</a>：一个简洁的文本化工作管理系统。</li> <li>🎤 <a href="https://scriberpro.cc/hn/">Scriber Pro – macOS离线AI转录</a>：一款Mac上支持离线AI语音转录的应用。</li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li>💾 <a href="https://diskprices.com/?locale=us">Disk Prices</a>：实时查询硬盘价格的工具。</li> <li>🎶 <a href="https://www.davidbyrne.com/radio#filter=all&amp;sortby=date:desc">David Byrne Radio</a>：著名音乐人大卫·伯恩的电台项目。</li> <li>📄 <a href="https://www.vincentuden.xyz/blog/pdf-reader">我讨厌Acrobat</a>：一篇关于PDF阅读器用户体验的吐槽文章。</li> <li>🖥️ <a href="https://lab.alexanderobenauer.com/updates/the-jasper-report">重现Canon Cat文档界面</a>：一个复刻经典Canon Cat电脑界面的项目。</li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>Pwning Nix生态系统</strong>：揭示了Nix包管理生态系统中的潜在安全漏洞和滥用风险。(<a href="https://ptrpa.ws/nixpkgs-actions-abuse">ptrpa.ws</a>)</li> <li><strong>利用Nvidia GPU Linux驱动的内核堆栈UAF漏洞</strong>：深入分析了一个Nvidia GPU Linux驱动中的内核堆栈use-after-free漏洞及其利用方式。(<a href="https://blog.quarkslab.com/./nvidia_gpu_kernel_vmalloc_exploit.html">blog.quarkslab.com</a>)</li> <li><strong>Rust的垃圾回收：终结器前沿</strong>：探讨了Rust中垃圾回收的实现和“终结器”机制。(<a href="https://soft-dev.org/pubs/html/hughes_tratt__garbage_collection_for_rust_the_finalizer_frontier/">soft-dev.org</a>)</li> <li><strong>ASP.NET安全特性绕过漏洞</strong>：一个关于ASP.NET中存在的安全特性绕过漏洞的技术详情。(<a href="https://nvd.nist.gov/vuln/detail/CVE-2025-55315">nvd.nist.gov</a>)</li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.15</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-15-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.15"/><published>2025-10-15T00:00:00+00:00</published><updated>2025-10-15T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-15-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-15-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>SpaceX 星舰第11次试飞成功</strong>：SpaceX成功发射星舰巨型火箭进行第11次测试飞行，取得进展。(<a href="https://www.cnn.com/science/live-news/spacex-starship-flight-11-launch-10-13-25">CNN</a>)</li> <li><strong>GPT-5o-mini被曝幻觉医学成绩</strong>：AI模型GPT-5o-mini在处理医学住院申请时出现幻觉，捏造申请人成绩。(<a href="https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization">ThalamusGME</a>)</li> <li><strong>新型CRISPR工具可编辑线粒体DNA</strong>：科学家开发出类似CRISPR的工具，首次实现对线粒体DNA的精确编辑。(<a href="https://www.nature.com/articles/d41586-025-03307-x">Nature</a>)</li> <li><strong>敏感内部链接在地球同步卫星上泄露</strong>：研究揭示GEO卫星明文传输敏感内部链接，存在严重安全风险。(<a href="https://satcom.sysnet.ucsd.edu/docs/dontlookup_ccs25_fullpaper.pdf">PDF</a>)</li> <li><strong>多家媒体拒签五角大楼新规</strong>：纽约时报、AP、Newsmax等媒体拒绝签署五角大楼新提出的新闻采访规则。(<a href="https://apnews.com/article/pentagon-press-access-defense-department-rules-95878bce05096912887701eaa6d019c6">AP News</a>)</li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Pyrefly：Rust实现的Python类型检查器与语言服务器</strong>：一个用Rust编写的高性能Python类型检查器和语言服务器项目。(<a href="https://pyrefly.org/?featured_on=talkpython">Pyrefly</a>)</li> <li><strong>AI如何“听”口音的可视化</strong>：通过声音可视化展示AI如何识别和聚类不同口音的研究。(<a href="https://accent-explorer.boldvoice.com/">Boldvoice</a>)</li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>媒体报道死亡原因与实际情况的偏差</strong>：分析新闻报道的死亡原因与真实死亡统计数据之间的差异。(<a href="https://ourworldindata.org/does-the-news-reflect-what-we-die-from">Our World in Data</a>)</li> <li><strong>为何力推Agentic，当模型连指令都难以遵循？</strong>：一篇质疑AI Agent能力与实际落地差距的讨论。(<a href="https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154">Cursor Forum</a>)</li> <li><strong>美国正滑向文盲社会</strong>：一篇深度探讨美国教育水平下降，导致国民阅读能力普遍低下的文章。(<a href="https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/">The Atlantic</a>)</li> <li><strong>你的老板为何不担心AI？</strong>：探讨管理者对AI的认知偏差，认为“关掉就好”的心态。(<a href="https://boydkane.com/essays/boss">Boyd Kane</a>)</li> <li><strong>为何要学习编程语言（2022）</strong>：一篇探讨学习编程语言深层价值的思考文章。(<a href="https://people.csail.mit.edu/rachit/post/why-study-programming-languages/">Rachit Nigam</a>)</li> <li><strong>Let’s Not Encrypt (2019)</strong>：一篇对加密技术潜在负面影响和过度依赖的批判性思考。(<a href="https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml">Michael Orlitzky</a>)</li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>位置追踪数据挑战传统认知</strong>：监控数据揭示了我们对位置追踪的理解可能存在误区和挑战。(<a href="https://www.lighthousereports.com/investigation/surveillance-secrets/">Lighthouse Reports</a>)</li> <li><strong>美国一半投票机被MAGA寡头拥有</strong>：揭示美国选举系统潜在的政治影响和所有权集中问题。(<a href="https://dissentinbloom.substack.com/p/half-of-americas-voting-machines">Dissent in Bloom</a>)</li> <li><strong>AppLovin被指控非自愿安装应用</strong>：报告揭露AppLovin存在未经用户同意安装应用程序的行为。(<a href="https://www.benedelman.org/applovin-nonconsensual-installs/">Ben Edelman</a>)</li> <li><strong>Telegram端到端加密被攻破</strong>：一篇2023年的研究论文详细介绍了如何绕过Telegram的端到端加密。(<a href="https://tosc.iacr.org/index.php/ToSC/article/view/10302">ToSC</a>)</li> <li><strong>特斯拉在韩面临补贴风险</strong>：因普遍存在的电池故障问题，特斯拉在韩国可能面临失去补贴的风险。(<a href="https://electrek.co/2025/10/14/tesla-is-at-risk-of-lossing-subsidies-in-korea-over-widespread-battery-failures/">Electrek</a>)</li> <li><strong>RFK Jr. 必须离开</strong>：一篇评论文章，呼吁RFK Jr.退出政治舞台，尤其针对其健康和疫苗立场。(<a href="https://quillette.com/2025/09/17/rfk-jr-must-go-hhs-health-vaccines/">Quillette</a>)</li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>ADS-B Exposed</strong>：一个揭露ADS-B（广播式自动相关监视）数据及其潜在隐私泄露的项目或工具。(<a href="https://adsb.exposed/">adsb.exposed</a>)</li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>天文学家“成像”遥远宇宙中的神秘暗物质</strong>：科学家成功对遥远宇宙中的一个神秘暗物体进行了成像。(<a href="https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x">MPG</a>)</li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li><strong>KDE庆祝29周年</strong>：KDE社区庆祝成立29周年并启动年度募捐活动。(<a href="https://kde.org/fundraisers/yearend2025/">KDE</a>)</li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>$2.97 ADC能有多糟糕？</strong>：一篇关于低成本ADC（模数转换器）性能和测试的深入分析。(<a href="https://excamera.substack.com/p/how-bad-can-a-297-adc-be">Excamera Substack</a>)</li> <li><strong>阵列语言的“动物园”</strong>：一个展示多种阵列编程语言的集合。(<a href="https://ktye.github.io/">Ktye.github.io</a>)</li> <li><strong>Wireshark 4.6.0支持macOS Pktap元数据</strong>：Wireshark更新，可在macOS上显示PID和进程名等包元数据。(<a href="https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/">Nuxx.net</a>)</li> <li><strong>Copy-and-Patch教程</strong>：一份关于”Copy-and-Patch”技术的详细教程。(<a href="https://transactional.blog/copy-and-patch/tutorial">Transactional Blog</a>)</li> <li><strong>SmolBSD – 构建你自己的极简BSD系统</strong>：一个教你如何构建最小化BSD系统的项目。(<a href="https://smolbsd.org/">SmolBSD</a>)</li> <li><strong>暂停Litestream 0.5.0版本</strong>：关于Litestream 0.5.0版本存在问题，建议暂停使用并等待修复的通知。(<a href="https://mtlynch.io/notes/hold-off-on-litestream-0.5.0/">mtlynch.io</a>)</li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk AI周知 4: AI时代的入口和商业化之路</title><link href="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/" rel="alternate" type="text/html" title="LeoTalk AI周知 4: AI时代的入口和商业化之路"/><published>2025-10-13T00:00:00+00:00</published><updated>2025-10-13T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/"><![CDATA[<p>在这点上OpenAI确实一次次走在前面，做出的一些决定和决策仔细思考还是挺佩服的。</p> <p>现在在大模型这个方向上，OpenAI领先的并不多，其他竞争对手追赶的太猛了，但是以ChatGPT的先发优势建立的生态和用户粘性，是现阶段OAI的强大护城河，Sam Altman本人的营销和融资能力也是很顶，给了OAI持续的动量。OAI现在不断以ChatGPT为基础去探索和扩展商业版图，是一个很好的策略，也是正确的策略。</p> <p>相比之下，国内市场，我觉得DeepSeek、豆包和元宝都是类似的，反而是千问，似乎没有一个很有名的C端流量入口，虽然其在大模型方面技术和发展速度很顶，但是似乎在流量入口这块似乎还差点意思。</p> <p>这块主要是针对C端的，也会辐射一些B端用户。不过B端角度更多还是在于API、推理服务maas、私有化等，那是另一个大市场和打法了。</p> <h1 id="技术研究技术突破">技术研究/技术突破</h1> <ul> <li>Adobe<a href="https://news.adobe.com/news/2025/10/adobe-us-holiday-shopping-season-cross-250-billion-online-rising-yoy">发布</a>研究报告，预计AI驱动的零售网站的流量将增加520％</li> <li>ASAPP发布<a href="https://cx.asapp.com/hubfs/eBooks/eBook%20-%20ASAPP%20-%20100%20generative%20AI%20use%20cases%20for%20contact%20centers.pdf"><strong>The generative AI agent 100: 100 use cases for contact centers by industry</strong></a>：概述了100个AI Agent的使用案例</li> </ul> <h2 id="state-of-ai-report-2025">State of AI Report 2025</h2> <p>Air Street Capital发布了2025年的AI状况报告<a href="https://www.stateof.ai/2025-report-launch">State of AI Report 2025</a>，主要讲述了AI推理能力的成熟、商业化的爆发、算力基础设施的工业化，以及全球竞争格局的重塑</p> <ol> <li>2025年是推理元年（Reasoning Got Real）</li> </ol> <ul> <li>OpenAI、Google、Anthropic、DeepSeek等大模型厂商都推出了能进行复杂推理、验证和反思的系统</li> <li>人机交互从生成式迈向推理式，标志着AI进入能规划、验证和自我纠正的新阶段</li> <li>见证了AI推理能力的全球竞赛，研究进展速度非常快</li> </ul> <ol> <li>产业和商业化：AI进入盈利时代</li> </ol> <ul> <li>AI商业化全面爆发：顶级实验室和企业营收接近200亿美元</li> <li>成本骤降、性价比倍增：模型能力价格比每6-8个月翻倍</li> <li>企业采用率激增：美国使用AI工具的企业从2023年5%飙升至44%；平均合同金额达53万美元；AI-First创业公司增长速度是同行的1.5倍</li> <li>普及化趋势（1200AI从业者中调查）：95%在工作或生活中使用AI；76%自费购买工具；大多数表示生产力持续提升</li> </ul> <ol> <li>算力与基础设施：进入AI工业时代</li> </ol> <ul> <li>多吉瓦级数据中心标志进入AI工业时代</li> <li>电力和土地取代GPU成为新的瓶颈</li> </ul> <ol> <li>地缘政治：中美格局成型</li> </ol> <ul> <li>OpenAI仍 保持领先，但是优势已经很微弱了</li> <li>Meta推出开源领先地位，中国厂商接棒，DeepSeek、Qwen、Kimi在推理和编程任务上直追GPT-5</li> <li>中国被认为是全球AI能力的可信第二位</li> </ul> <ol> <li>科研与应用突破：AI成为科研合作者</li> </ol> <ul> <li>AI进入科学研究角色：DeepMind的Co-Scientist、斯坦福的Virtual Lab、Profluent的ProGen3</li> <li>行动链（Chain-of-Action）推理进入无力世界，如AI2的Molmo-Act、Google的Gemini Robotics 1.5等具备推理后行动的具身智能系统</li> </ul> <ol> <li>安全与对齐：从理论风险专项可监控性</li> </ol> <ul> <li>安全研究进入务实阶段：模型可伪装对齐，促使研究者提出可监控税（Monitorability Tax）概念，为透明度而牺牲部分性能</li> </ul> <ol> <li>趋势与未来展望</li> </ol> <ul> <li>AI时新的生产系统</li> <li>扩展推理是下一个前沿：从语言模型走向具备计划、验证、反思和执行链路的智能体</li> <li>经济增长核心驱动力：AI成为全球生产力与竞争力的中心</li> </ul> <p><em>Opinion：PPT313页，确实很难一页一页看完，比较多是比较空洞的结论，不一定务实，但是可以提取一些自己感兴趣的部分看看，当作参考。我觉得长期工作在一线的从业者，对于AI的应用和敏感度应该还是有的，也能看到实际带来的营收情况。这个报告就当作全球角度的一个印证。</em></p> <h2 id="麦肯锡2025科技趋势展望报告">麦肯锡2025科技趋势展望报告</h2> <p>麦肯锡7月分发的<a href="https://www.mckinsey.com/capabilities/mckinsey-digital/our-insights/the-top-trends-in-tech#/">2025年科技趋势展望报告</a>，网页上看有交互式体验，<a href="https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20top%20trends%20in%20tech%202025/mckinsey-technology-trends-outlook-2025.pdf">完整版PDF</a>有108页。</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>主要分析了13项前沿科技趋势，聚焦在四个维度上的变化情况：</p> <ol> <li>创新（Innovation）</li> <li>关注度（Interest）</li> <li>投资（Equity Investment）</li> <li>行业采纳度（Adoption）</li> </ol> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>13个趋势分为三大类：</p> <ol> <li>AI革命（The AI Revolution）</li> <li>计算与连接前沿（Compute &amp; Connectivity Frontiers）</li> <li>工程前沿（Cutting-edge Engineering）</li> </ol> <p>六个宏观主题：</p> <ol> <li><strong>自主系统崛起</strong> —— 从实验走向现实，包括机器人与数字代理。</li> <li><strong>人机协作新范式</strong> —— 多模态交互、语音与触觉技术让AI成为“协作者”。</li> <li><strong>算力与基础设施瓶颈</strong> —— 电力、网络、数据中心成为关键制约。</li> <li><strong>地区与国家竞争加剧</strong> —— 科技主权、半导体、自主基础设施等成竞争焦点。</li> <li><strong>规模与专业化并行</strong> —— 同时发展超大模型与本地化/边缘智能。</li> <li><strong>负责任创新</strong> —— 透明度、公平性、伦理与信任成为商业竞争力要素。</li> </ol> <p>最主要的增长依然来自于AI领域，其中最主要的亮点是Agentic AI获得了巨大的关注</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240692_3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>2023年因为经济环境波动导致科技投资下滑，但是2024年多数趋势反弹，其中AI、可持续能源、云计算和半导体是最具吸引力的投资方向。AI+专用硬件+清洁能源成为互相促进的三大主轴</p> <p>总体而言，AI正在成为所有前沿科技的放大器，而Agentic AI的兴起标志着AI从生成内容走向了自主行动的新阶段，企业的竞争力将取决于能否在AI驱动的生态中实现规模化和跨领域融合</p> <p><em>Opinion：目前看2025年确实属于AI Agent大年（或者说Agentic AI），最近2个季度以来明显能感受到B端的重视和投入在持续提升，今年跑得快的企业都能收获不少。但是今年更多还是在早期阶段，和以往的技术发展有类似的趋势，AI的这波Adoption有长尾效应，可以预见明年会有更多的B端游预算投入这块，是非常大的机会。反观C端，目前更多还是在于诸如OpenAI这类拥有ChatGPT为超级入口的企业有撬动力，配合一下敢想敢试的战略，有很大机会撬动一些原来并不明显的市场，至少目前我们可以初见一些端倪了。</em></p> <h1 id="产品模型发布">产品&amp;模型发布</h1> <ul> <li>ElevenLabs<a href="https://elevenlabs.io/docs/agents-platform/customization/agent-workflows">发布</a>Agent Workflows</li> <li>FigureAI<a href="https://www.figure.ai/news/introducing-figure-03">发布</a>Figure 03</li> <li>Google<a href="https://cloud.google.com/blog/products/ai-machine-learning/introducing-gemini-enterprise">发布</a>Gemini Enterprise：对标OpenAI的AgentBuilder（只能通过API），定价为每个用户每月30美元（后续会推出针对初创和中小企业是20美元）</li> <li>Amazon<a href="https://aws.amazon.com/quicksuite/">发布</a>Quick Suite：对标OpenAI的AgentBuilder</li> <li>Google发布Gemini 2.5 Computer Use Model：CUA（Computer Use Agent）是结合了多模态的一个大方向，这个方向也是模型厂兵家必争之地。现在更多还是成本和延时的问题，不然有一些case可以处理的很好，某种角度可以看作是RPA的未来</li> <li>腾讯<a href="https://github.com/Tencent-Hunyuan/HunyuanVision">发布</a>Hunyuan-Vision-1.5-Thinking，多模态视觉大模型，在LM Arena Vision Arena上排名第三。最近腾讯多模态有些成绩</li> <li>三星<a href="https://arxiv.org/pdf/2510.04871">发布</a>TRM（Tiny Recursion Model），一个7M参数的模型，在某些推理任务上打败了SOTA模型</li> </ul> <h2 id="openai-devday-2025">OpenAI DevDay 2025</h2> <p><a href="https://www.youtube.com/watch?v=hS1YqcewH0c&amp;t=55s">OpenAI DevDay 2025</a>，关键点：</p> <ul> <li>Apps inside ChatGPT：应用可以集成到ChatGPT里，有点类似GPTs升级版，底层基于MCP去构建的。不管如何，势必会引发第一批抢滩登陆的APP，算是给这些应用一次推广和引流的机会</li> <li>AgentKit：包括<a href="https://platform.openai.com/agent-builder">Agent Builder</a>、<a href="https://openai.github.io/chatkit-js/">ChatKit</a>和<a href="https://platform.openai.com/docs/guides/evals">Evals</a>。更多是基于类似n8n、dify、coze的workflow去快速构建Agent（或者说工作流）。</li> <li>Codex：GA了。增加了Slack集成（Integration）、Codex SDK、企业控制（Enterprise Controls）</li> <li>API更新：增加了GPT-5 Pro、gpt-realtime-mini、Sora 2</li> </ul> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240693_5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_6.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240694_7.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p><em>Opinion：我个人非常期待AgentKit，虽然现有的dify、coze等开源方案很Open了，但是更喜欢这种集成到ChatGPT这种日常高频使用的应用里，可以快速拉一些很常用的轻workflow，而不需要自己去serve一个。我相信到时候可以把一些信息摄取流集成进去，结合codex可以玩出很多花样。Jackywine</em><a href="https://mp.weixin.qq.com/s/oMsItbQUJr6sqgkJy_yA_A"><em>这篇文章</em></a><em>分析的也很棒，值得看</em></p> <h1 id="投资商业">投资&amp;商业</h1> <ul> <li>高通宣布收购Arduino</li> <li>软银以54亿美元收购了ABB的机器人部门（Robotics arm），这次收购让软银立即进入价值750亿美元的机器人市场，该市场的年增长率为8%（AI驱动的部分甚至有20%的增长速度）</li> <li>Bloomberg这张关于OpenAI、Nvidia相关的企业间的资本走向很有意思，值得一看：</li> </ul> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8-480.webp 480w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8-800.webp 800w,/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-13-leotalk-ai-weekly-4-the-ai-traffic-gateway-and-the/1760240695_8.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <h1 id="热点论文">热点论文</h1> <ul> <li><a href="https://arxiv.org/abs/2510.04618"><strong>Agentic Context Engineering (ACE): Self-Improving LLMs via Evolving Contexts, Not Fine-Tuning</strong></a>：斯坦福大学、SambaNova Systems和加州大学伯克利分校推出的ACE框架，不靠修改模型权重（参数微调），而是通过上下文工程，不断编辑、扩展模型输入上下文，像是为大模型维护一个不断成长的操作手册或知识库。有三个Generator、Reflector和Curator三个角色，整个流程采用同一个底座大模型，通过增量更新（而不是整体重写），避免上下文崩塌。</li> <li><a href="https://arxiv.org/abs/2509.02547"><strong>The Landscape of Agentic Reinforcement Learning for LLMs: A Survey</strong></a>：关于Agentic RL在大模型里的综述，系统性的梳理</li> <li><a href="https://arxiv.org/abs/2510.01179"><strong>TOUCAN: Synthesizing 1.5M Tool-Agentic Data from Real-World MCP Environments</strong></a>：MIT、IBM和华盛顿大学研究人员发布的，一个用于训练Agent使用MCP的数据集，包含了495个MCP Server和150万工具的交互</li> <li><a href="https://huggingface.co/blog/driaforall/mem-agent-blog"><strong>mem-agent: Equipping LLM Agents with Memory Using RL</strong></a></li> </ul> <h1 id="其他阅读">其他阅读</h1> <ul> <li><a href="https://x.com/aaditsh/status/1975424053763842398">50个</a>OpenAI的AgentBuilder的实用案例</li> <li>Mike Futia分享的<a href="https://x.com/mikefutia/status/1975940358526623953">工作流</a>（基于n8n+Sora2 API），可以快速将一张图片转成HD画质且没有水印的视频</li> <li>Antonio Gulli（谷歌Senior Engineer）在Google I/O 2025上Demo了3个AI Agent，目前在Google Docs上开源了<a href="https://docs.google.com/document/d/1rsaK53T3Lg5KoGwvf8ukOUvbELRtH-V0LnOIFDxBryE/edit?pli=1&amp;tab=t.0">400多页</a>的指南，很不错的内容，对于有在构建Agent的人值得一读</li> <li>这篇<a href="https://x.com/GoogleCloudTech/status/1976333515772809266">推文</a>表明：Google现在支持了1300万名开发者、每月处理1.3千万亿Tokens，Gemini已生成2.3亿段视频和130亿张图片，AI Overviews覆盖了20亿用户，65%的客户已经在使用Google的AI产品</li> </ul>]]></content><author><name></name></author><category term="AI"/><category term="AI"/><category term="Tech"/><category term="LeoTalkAIWeekly"/><summary type="html"><![CDATA[在这点上OpenAI确实一次次走在前面，做出的一些决定和决策仔细思考还是挺佩服的。]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.13</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-13-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.13"/><published>2025-10-13T00:00:00+00:00</published><updated>2025-10-13T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-13-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-13-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>Jeep软件更新致车辆变砖</strong>：Jeep通过OTA更新导致所有2024款Wrangler 4xe车型无法启动，引发车主不满。<a href="https://twitter.com/StephenGutowski/status/1977055831720862101">Twitter</a></li> <li><strong>GitHub Copilot RCE漏洞曝光</strong>：研究人员发现GitHub Copilot存在远程代码执行漏洞，可通过Prompt注入触发。<a href="https://embracethered.com/blog/posts/2025/github-copilot-remote-code-execution-via-prompt-injection/">embracethered.com</a></li> <li><strong>中国稀土限制威胁美国防供应链</strong>：中国新的稀土及磁体出口限制，可能对美国国防工业供应链造成冲击。<a href="https://www.csis.org/analysis/chinas-new-rare-earth-and-magnet-restrictions-threaten-us-defense-supply-chains">CSIS</a></li> <li><strong>德国石荷州转向开源邮件系统</strong>：德国石勒苏益格-荷尔斯泰因州政府完成其邮件系统向开源方案的迁移。<a href="https://news.itsfoss.com/schleswig-holstein-email-system-migration/">Itsfoss News</a></li> <li><strong>间谍软件公司NSO Group被美投资者收购</strong>：以色列间谍软件公司NSO Group确认被美国投资者收购，其未来发展引人关注。<a href="https://techcrunch.com/2025/10/10/spyware-maker-nso-group-confirms-acquisition-by-us-investors/">TechCrunch</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>ATLAS：更快LLM推理系统</strong>：Together.ai发布AdapTive-LeArning Speculator System，可显著加速LLM推理。<a href="https://www.together.ai/blog/adaptive-learning-speculator-system-atlas">together.ai</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>App Store的威权本质</strong>：文章探讨了App Store从一开始就具备的集权控制特性和其对生态系统的影响。<a href="https://infrequently.org/2025/10/the-app-store-was-always-authoritarian/">infrequently.org</a></li> <li><strong>托马斯·潘恩与批判性思维</strong>：回顾1776年托马斯·潘恩如何为反抗君主制和保持怀疑精神辩护，及其对现代社会的影响。<a href="https://theconversation.com/in-1776-thomas-paine-made-the-best-case-for-fighting-kings-and-for-being-skeptical-266448">The Conversation</a></li> <li><strong>维基百科为何不能说地球是平的</strong>：一篇关于维基百科中立性原则和知识论的文章，探讨平台在事实认定上的复杂性。<a href="https://en.wikipedia.org/wiki/Wikipedia:Why_Wikipedia_cannot_claim_the_Earth_is_not_flat">Wikipedia</a></li> <li><strong>AI繁荣之后会留下什么？</strong>：反思AI热潮结束后，我们可能面临的社会和技术遗产，以及长期影响。<a href="https://blog.robbowley.net/2025/10/12/after-the-ai-boom-what-might-we-be-left-with/">robbowley.net</a></li> <li><strong>自由软件并未“胜利”</strong>：探讨自由软件运动的现状与挑战，认为其尚未取得完全胜利，仍需努力。<a href="https://dorotac.eu/posts/fosswon/">dorotac.eu</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>“抵制Spotify”运动兴起</strong>：艺术家和粉丝发起DIY运动，鼓励大家放弃Spotify平台，以寻求更公平的音乐分发模式。<a href="https://www.theguardian.com/technology/2025/oct/12/spotify-boycott-artists">The Guardian</a></li> <li><strong>Nostr与ATProto（2024）</strong>：对比分析Nostr和ATProto两个去中心化社交协议的现状与发展，及其在构建未来网络中的角色。<a href="https://shreyanjain.net/2024/07/05/nostr-and-atproto.html">shreyanjain.net</a></li> <li><strong>极端天气造成超千亿损失</strong>：截至今年6月，极端天气事件已在美国造成超过1000亿美元的损失，刷新历史纪录，凸显气候变化影响。<a href="https://www.livescience.com/planet-earth/climate-change/extreme-weather-caused-more-than-usd100-billion-in-damage-by-june-smashing-us-records">Live Science</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>Rift：macOS平铺窗口管理器</strong>：一个专为macOS设计的平铺窗口管理器项目，旨在提升多任务处理效率。<a href="https://github.com/acsandmann/rift">GitHub</a></li> <li><strong>Spellscript：咒语式编程语言</strong>：一个独特且深奥的编程语言项目，其代码可读作“咒语书”。<a href="https://github.com/sirbread/spellscript">GitHub</a></li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>宠物狗对玩具的成瘾性行为</strong>：研究发现宠物狗对玩具有类似成瘾的行为特质，表现出极高动机和执着。<a href="https://www.nature.com/articles/s41598-025-18636-0">Nature</a></li> <li><strong>儿童长新冠患者血浆中纤维蛋白凝块定量</strong>：一项关于儿童长新冠患者血液中纤维蛋白凝块的研究，可能揭示长新冠的病理机制。<a href="https://www.researchsquare.com/article/rs-7483367/v1">Research Square</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>拒绝OneDrive备份的烦恼</strong>：指南介绍了如何避免Windows自动开启OneDrive备份，从而更好地管理本地文件。<a href="https://idiallo.com/byte-size/say-no-to-onedrive-backup">idiallo.com</a></li> <li><strong>Macro Splats 2025</strong>：一篇关于宏（Macro）使用与模式匹配的讨论，深入探讨其在编程中的应用。<a href="https://danybittel.ch/macro.html">danybittel.ch</a></li> <li><strong>Wireguard FPGA实现</strong>：利用FPGA加速WireGuard VPN协议的硬件实现项目，提高网络通信效率。<a href="https://github.com/chili-chips-ba/wireguard-fpga">GitHub</a></li> <li><strong>如何使用Helix编辑器</strong>：分享作者如何配置和使用Helix命令行文本编辑器的心得，提供实践性建议。<a href="https://rushter.com/blog/helix-editor/">rushter.com</a></li> <li><strong>PostgreSQL 18的psql管道模式</strong>：介绍psql在PostgreSQL 18中引入的管道模式（Pipelining）新特性，提升交互效率。<a href="https://postgresql.verite.pro/blog/2025/10/01/psql-pipeline.html">postgresql.verite.pro</a></li> <li><strong>锁定文件规范耗时四年</strong>：一篇关于Python中锁定文件（lock files）规范制定过程为何耗时漫长的文章，揭示标准化的复杂性。<a href="https://snarky.ca/why-it-took-4-years-to-get-a-lock-files-specification/">snarky.ca</a></li> <li><strong>Emacs agent-shell</strong>：一个由ACP驱动的Emacs Agent Shell工具，旨在提供更智能和交互式的开发体验。<a href="https://xenodium.com/introducing-agent-shell">xenodium.com</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.12</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-12-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.12"/><published>2025-10-12T00:00:00+00:00</published><updated>2025-10-12T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-12-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-12-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>科技巨头市值蒸发7700亿美金</strong>：纳斯达克经历4月以来最大跌幅，头部科技公司遭受重创。<a href="https://www.cnbc.com/2025/10/10/tech-megacaps-market-cap-mag-7.html">CNBC</a></li> <li><strong>诺贝尔奖得主丹尼尔·卡尼曼选择辅助自杀</strong>：这位著名心理学家和经济学家在瑞士做出了这一决定。<a href="https://www.bluewin.ch/en/entertainment/nobel-prize-winner-opts-for-suicide-in-switzerland-2619460.html">Bluewin</a></li> <li><strong>微软OneDrive AI照片扫描：每年仅限3次退出</strong>：用户隐私设置受限，AI面部识别引发担忧。<a href="https://hardware.slashdot.org/story/25/10/11/0238213/microsofts-onedrive-begins-testing-face-recognizing-ai-for-photos-for-some-preview-users">Slashdot</a></li> <li><strong>澳洲航空Qantas数据泄露，500万客户受影响</strong>：黑客在赎金期限过后公布了客户敏感数据。<a href="https://www.theguardian.com/business/2025/oct/11/hackers-leak-qantas-data-containing-5-million-customer-records-after-ransom-deadline-passes">The Guardian</a></li> <li><strong>AMD与索尼为PS6重构图形管线</strong>：预示PlayStation 6将采用全新的芯片架构设计，革新游戏体验。<a href="https://arstechnica.com/gaming/2025/10/amd-and-sony-tease-new-chip-architecture-ahead-of-playstation-6/">Ars Technica</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>如何使用编码Agent</strong>：一篇关于在2025年10月如何利用AI编码Agent的实践文章，分享了作者的经验。<a href="https://blog.fsck.com/2025/10/09/superpowers/">fsck.com</a></li> <li><strong>Windows Subsystem for FreeBSD (WSL-For-FreeBSD)</strong>：一个允许在Windows上运行FreeBSD的子系统项目，为开发者提供更多选择。<a href="https://github.com/BalajeS/WSL-For-FreeBSD">GitHub</a></li> <li><strong>Microsoft Amplifier</strong>：微软发布的一个新项目或工具，其详情和用途可在GitHub上探索。<a href="https://github.com/microsoft/amplifier">GitHub</a></li> <li><strong>AV2视频编码器</strong>：AV2视频编码器在性能上超越AV1，能降低30%的比特率，最终规范预计2025年底发布。<a href="https://videocardz.com/newz/av2-video-codec-delivers-30-lower-bitrate-than-av1-final-spec-due-in-late-2025">VideoCardz</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>OpenAI没钱了？</strong>：一篇质疑OpenAI财务状况和商业模式的分析文章，探讨其未来的可持续性。<a href="https://platformonomics.com/2025/10/they-dont-have-the-money-openai-edition/">Platformonomics</a></li> <li><strong>Peter Thiel的“反基督”讲座</strong>：一篇解读这位科技巨头思想深层含义的文章，深入探讨其哲学与对社会的影响。<a href="https://www.theguardian.com/technology/ng-interactive/2025/oct/10/peter-thiel-antichrist-lectures">The Guardian</a></li> <li><strong>“贪婪的开发者”指控回应</strong>：DataStar团队对社区关于“贪婪开发者”指控的回应与反思。<a href="https://data-star.dev/essays/greedy_developer">data-star.dev</a></li> <li><strong>为什么Firefox是最佳移动浏览器</strong>：一篇论证Firefox在移动端优势的博客文章，探讨其隐私、定制化和性能特点。<a href="https://kelvinjps.com/blog/firefox-best-mobile-browser/">kelvinjps.com</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>美国数据中心转向燃煤发电</strong>：气候目标面临挑战，数据中心能耗问题日益突出，引发环保担忧。<a href="https://www.theregister.com/2025/10/10/datacenter_coal_power/">The Register</a></li> <li><strong>Discord漏洞暴露在线年龄验证风险</strong>：凸显互联网监管和青少年保护的挑战，呼吁更安全的验证机制。<a href="https://news.sky.com/story/discord-hack-shows-dangers-of-online-age-checks-as-internet-policing-hopes-put-to-the-test-13447618">Sky News</a></li> <li><strong>TikTok因“TikTok乐趣”移除帖子</strong>：平台内容审核标准引发争议，用户对“乐趣”的定义存在疑问。<a href="https://twitter.com/prem_thakker/status/1976786912154386828/">Twitter</a></li> <li><strong>亚马逊智能显示器广告泛滥，用户后悔购买</strong>：智能家居设备商业化过度引发消费者不满和反思。<a href="https://arstechnica.com/gadgets/2025/10/people-regret-buying-amazon-smart-displays-after-being-bombarded-with-ads/">Ars Technica</a></li> <li><strong>田纳西州男子因发布梗图被捕</strong>：涉嫌威胁枪击，保释金高达200万美元，引发言论自由与公共安全边界的争议。<a href="https://reason.com/2025/10/10/tennessee-man-arrested-gets-2-million-bond-for-posting-facebook-meme/">Reason</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li>🏥 <strong>GNU Health</strong>：一个自由和开源的健康和医院信息系统，旨在改善全球医疗服务。<a href="https://www.gnuhealth.org/about-us.html">gnuhealth.org</a></li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li>🌡️ <strong>如何用物理方式烹饪鸡肉？(2020)</strong>：一篇有趣地探讨“打鸡烹饪”所需能量的旧文，充满好奇心和科学精神。<a href="https://james-simon.github.io/blog/chicken-cooking/">james-simon.github.io</a></li> <li>📺 <strong>学习Turbo Pascal VHS视频系列</strong>：一套最初以VHS形式发布的经典编程教程，带你重温早期编程时代。<a href="https://www.youtube.com/watch?v=UOtonwG3DXM">YouTube</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li><strong>HTML <code class="language-plaintext highlighter-rouge">&lt;output&gt;</code> 标签</strong>：一个被低估的HTML标签及其在表单计算结果显示中的潜在用途。<a href="https://denodell.com/blog/html-best-kept-secret-output-tag">denodell.com</a></li> <li><strong>“Vibing”非微不足道的Ghostty功能</strong>：一篇关于软件开发中如何直观地感知并实现复杂功能的心得分享。<a href="https://mitchellh.com/writing/non-trivial-vibing">mitchellh.com</a></li> <li><strong>Java 26年变化评级</strong>：一篇回顾Java语言26年来演变的文章，评级了各种重要更新和改变。<a href="https://neilmadden.blog/2025/09/12/rating-26-years-of-java-changes/">neilmadden.blog</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.09</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-9-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.09"/><published>2025-10-09T00:00:00+00:00</published><updated>2025-10-09T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-9-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-9-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>Synology撤销第三方硬盘禁令</strong>：在NAS销售大幅下滑后，Synology反转了此前限制使用第三方硬盘的政策，回应市场呼声。<a href="https://www.guru3d.com/story/synology-reverses-policy-banning-third-party-hdds-after-nas-sales-plummet/">Guru3D</a></li> <li><strong>一人之力阻碍欧盟“聊天控制”法案</strong>：一位活动家通过邮件运动，有效阻滞了欧盟有争议的“聊天控制”法案的通过，凸显公民行动力量。<a href="https://www.politico.eu/article/one-man-spam-campaign-ravages-eu-chat-control-bill-fight-chat-control/">Politico.eu</a></li> <li><strong>数据中心支撑GDP增长</strong>：哈佛经济学家指出，若不计数据中心的贡献，2025年上半年GDP增长仅为0.1%，凸显其对经济的巨大影响。<a href="https://fortune.com/2025/10/07/data-centers-gdp-growth-zero-first-half-2025-jason-furman-harvard-economist/">Fortune</a></li> <li><strong>英格兰银行警示AI科技股泡沫</strong>：英格兰银行发出警告，称AI热潮推动的科技股存在“突然修正”的风险，可能引发市场动荡。<a href="https://www.ft.com/content/fe474cff-564c-41d2-aaf7-313636a83e5b">FT</a></li> <li><strong>百万年头骨揭示人类更早起源</strong>：一项对一百万年前头骨的研究表明，现代人类的起源可能比此前认为的更早，改写人类历史。<a href="https://www.theguardian.com/science/2025/sep/25/study-of-1m-year-old-skull-points-to-earlier-origins-of-modern-humans/">The Guardian</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>MAME破解Hyper Neo Geo 64</strong>：经过20年努力，MAME终于实现Hyper Neo Geo 64游戏机的完整模拟，包括声音仿真。<a href="https://www.readonlymemo.com/mame-hyper-neo-geo-support-sound-emulation/">ReadOnlyMemo</a></li> <li><strong>RSS阅读器生态洞察</strong>：深入探讨当前RSS阅读器的格局，分析其发展和各类工具的现状。<a href="https://lighthouseapp.io/blog/feed-reader-deep-dive">Lighthouseapp.io</a></li> <li><strong>Julia 1.12 发布亮点</strong>：Julia 1.12 版本在性能、功能和用户体验方面带来了多项重要改进。<a href="https://julialang.org/blog/2025/10/julia-1.12-highlights/">JuliaLang</a></li> <li><strong>Gemini CLI 扩展功能上线</strong>：Google Gemini CLI 现已支持扩展，允许开发者构建和集成自定义工具，提升开发灵活性。<a href="https://blog.google/technology/developers/gemini-cli-extensions/">Google Blog</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>他们不该读的那封邮件</strong>：一篇关于意外读取他人邮件带来的道德困境和隐私思考的个人文章。<a href="https://it-notes.dragas.net/2025/10/08/the-email-they-shouldnt-have-read/">IT-Notes</a></li> <li><strong>Ortega假说</strong>：解释了科学进步如何依赖于大量普通科学家，而非少数天才贡献的“Ortega 假说”。<a href="https://en.wikipedia.org/wiki/Ortega_hypothesis">Wikipedia</a></li> <li><strong>Kurt Got Got</strong>：Fly.io 文章反思在一次系统故障中“Kurt”的被捕获过程，并从中吸取经验教训。<a href="https://fly.io/blog/kurt-got-got/">Fly.io</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>Cory Doctorow：科技巨头利用App规避法律</strong>：作家Cory Doctorow指出美国科技卡特尔如何利用应用程序规避法律并形成垄断。<a href="https://lithub.com/how-american-tech-cartels-use-apps-to-break-the-law/">Lithub</a></li> <li><strong>法治国家不应有无根据的“聊天控制”</strong>：欧洲议会议员指出，未经怀疑的“聊天控制”在法治国家中是不可接受的禁忌。<a href="https://digitalcourage.social/@echo_pbreyer/115337976340299372">Digitalcourage.social</a></li> <li><strong>旅行黑名单的武器化</strong>：探讨旅行黑名单如何被用作政治工具，并对其对个人自由和国际关系的影响。<a href="https://papersplease.org/wp/2025/10/06/the-weaponization-of-travel-blacklists/">Papers Please</a></li> <li><strong>TiVo退出传统DVR业务</strong>：TiVo宣布将退出其传统的DVR业务，标志着流媒体时代下行业的一次重要转型。<a href="https://www.mediaplaynews.com/tivo-exiting-legacy-dvr-business/">Mediaplaynews</a></li> <li><strong>军民危机已然到来</strong>：《大西洋月刊》文章深入探讨了美国日益严重的军民关系危机及其潜在的社会和政治影响。<a href="https://www.theatlantic.com/newsletters/archive/2025/10/civil-military-crisis-trump-hegseth/684486/">The Atlantic</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li>⚙️ <a href="https://www.npmjs.com/package/@joseairosa/recall">Recall</a>：利用 Redis 为 Claude AI 提供记忆能力的工具，实现持久上下文。</li> <li>🖥️ <a href="https://www.winboat.app/">WinBoat</a>：一个允许在 Linux 上无缝运行 Windows 应用程序，提供更好集成体验的项目。</li> <li>👨‍👩‍👦 <a href="https://ohyahapp.com/">Oh Yah</a>：一款由父亲为儿子们开发的日常习惯管理应用。</li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>2025年诺贝尔化学奖揭晓</strong>：提供2025年诺贝尔化学奖的获奖信息及相关科学背景的通俗介绍。<a href="https://www.nobelprize.org/prizes/chemistry/2025/popular-information/">Nobel Prize</a></li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li>💰 <strong>Bob Ross画作拍卖资助公共广播</strong>：知名画家Bob Ross的画作将进行拍卖，所得款项用于资助美国公共广播事业。<a href="https://www.bbc.com/news/articles/cly10275v5zo">BBC</a></li> <li>🚗 <strong>偷我的保时捷914前必知事项</strong>：一篇幽默的文章，作者分享了偷他保时捷914之前需要了解的几件事。<a href="https://www.hagerty.com/media/advice/a-few-things-to-know-before-you-steal-my-914/">Hagerty</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li>🐛 <strong>Go语言ARM64编译器发现Bug</strong>：Cloudflare 团队详细介绍了他们如何在Go语言ARM64编译器中发现并解决一个bug的过程。<a href="https://blog.cloudflare.com/how-we-found-a-bug-in-gos-arm64-compiler/">Cloudflare Blog</a></li> <li>⚡ <strong>Svelte为何如此之快</strong>：一篇学术论文，从技术层面深入分析并解释了Svelte框架为何能实现如此高效和快速的性能。<a href="https://chuniversiteit.nl/papers/svelte-is-fast">Chuniversiteit.nl</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.08</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-8-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.08"/><published>2025-10-08T00:00:00+00:00</published><updated>2025-10-08T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-8-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-8-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>Qualcomm收购Arduino</strong>：Qualcomm宣布收购开源硬件平台Arduino，旨在加速开发者在物联网领域的创新。<a href="https://www.qualcomm.com/news/releases/2025/10/qualcomm-to-acquire-arduino-accelerating-developers--access-to-i">Qualcomm</a></li> <li><strong>Deloitte因AI报告退款</strong>：德勤因在为澳大利亚政府撰写的44万美元报告中不当使用AI工具而被迫退款。<a href="https://www.theguardian.com/australia-news/2025/oct/06/deloitte-to-pay-money-back-to-albanese-government-after-using-ai-in-440000-report">The Guardian</a></li> <li><strong>太阳能成最便宜电力来源</strong>：一项新研究表明，太阳能已成为全球范围内最经济实惠的电力来源。<a href="https://www.surrey.ac.uk/news/solar-energy-now-worlds-cheapest-source-power-surrey-study-finds">University of Surrey</a></li> <li><strong>黄金价格首次突破4000美元</strong>：国际黄金市场创下历史新高，金价首次突破每盎司4000美元大关。<a href="https://www.wsj.com/finance/commodities-futures/gold-prices-top-4-000-for-first-time-d63ab2bd">WSJ</a></li> <li><strong>德国政府反对“聊天控制”</strong>：德国政府明确表态反对欧盟提出的“聊天控制”法案，认为其侵犯隐私。<a href="https://xcancel.com/paddi_hansen/status/1975595307800142205">Paddi Hansen</a></li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Gemini 2.5计算机使用模型</strong>：Google DeepMind发布Gemini 2.5新模型，增强了AI与计算机的交互和任务执行能力。<a href="https://blog.google/technology/google-deepmind/gemini-computer-use-model/">Google DeepMind</a></li> <li><strong>Devpush：开源部署替代方案</strong>：一款开源、可自托管的部署平台，提供Vercel、Render、Netlify的替代方案。<a href="https://github.com/hunvreus/devpush">GitHub</a></li> <li><strong>Erlang ARM32 JIT编译器诞生</strong>：Erlang/OTP社区发布了针对ARM32架构的JIT编译器，提升性能。<a href="https://www.grisp.org/blog/posts/2025-10-07-jit-arm32.3">Grisp</a></li> <li><strong>Pdoc：Python项目文档生成器</strong>：一款用于自动生成Python项目API文档的工具，简化开发流程。<a href="https://pdoc.dev/">pdoc.dev</a></li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>Bluesky去中心化的现实</strong>：用户封禁争议揭示了Bluesky去中心化愿景与实际运作的差距。<a href="https://plus.flux.community/p/banning-controversy-reveals-blueskys">Flux Community</a></li> <li><strong>美国对AI的巨大押注</strong>：分析指出，美国经济正在将大量未来增长和发展押注于AI技术领域。<a href="https://www.ft.com/content/6cc87bd9-cb2f-4f82-99c5-c38748986a2e">FT</a></li> <li><strong>“少即是多”的递归推理</strong>：一篇探讨如何使用小型网络通过递归推理实现高效AI学习的文章。<a href="https://alexiajm.github.io/2025/09/29/tiny_recursive_models.html">AlexiaJM</a></li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>Windows 11将强制微软账户</strong>：微软再次收紧政策，未来Windows 11可能不再支持无网络或本地账户安装。<a href="https://www.theregister.com/2025/10/07/windows_11_local_account_loophole/">The Register</a></li> <li><strong>加州强制流媒体降低广告音量</strong>：一项新法案要求Netflix和Hulu等平台降低广告音量，以改善用户体验。<a href="https://www.politico.com/news/2025/10/06/dial-it-down-california-forces-netflix-hulu-to-lower-ad-volume-00595663">Politico</a></li> <li><strong>警方监控堕胎女性引争议</strong>：法庭记录显示警方以“安全”为由监控堕胎女性，并曾考虑起诉。<a href="https://www.404media.co/police-said-they-surveilled-woman-who-had-an-abortion-for-her-safety-court-records-show-they-considered-charging-her-with-a-crime/">404 Media</a></li> <li><strong>ICE购伪基站车辆监控手机</strong>：美国移民及海关执法局（ICE）被曝购买配备伪基站的车辆，用于秘密监控手机。<a href="https://techcrunch.com/2025/10/07/ice-bought-vehicles-equipped-with-fake-cell-towers-to-spy-on-phones/">TechCrunch</a></li> <li><strong>罗宾·威廉姆斯女儿呼吁停止AI视频</strong>：罗宾·威廉姆斯的女儿请求公众停止传播其父的AI生成视频，引发AI伦理讨论。<a href="https://www.bbc.co.uk/news/articles/c0r0erqk18jo">BBC</a></li> <li><strong>加拿大法案或剥夺公民互联网访问权</strong>：一项加拿大法案可能在无搜查令的情况下，剥夺“特定人士”的互联网访问权。<a href="https://nationalpost.com/opinion/canadian-bill-would-strip-internet-access-from-specified-persons">National Post</a></li> <li><strong>Google政策威胁F-Droid开源应用商店</strong>：谷歌要求所有Android开发者验证身份的政策，可能导致开源应用商店F-Droid关闭。<a href="https://www.techdirt.com/2025/10/07/googles-requirement-for-all-android-developers-to-register-and-be-verified-threatens-to-close-down-open-source-app-store-f-droid/">Techdirt</a></li> <li><strong>3M或摆脱PFAS毒物遗产</strong>：3M公司可能正寻求摆脱其有毒化学品PFAS制造带来的负面遗产和法律纠纷。<a href="https://www.bloomberg.com/features/2025-3m-pfas-toxic-legacy-turnaround/">Bloomberg</a></li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li><strong>Timelinize</strong>：一个本地化的数据组织工具，帮助用户私密管理来自各处的数据。<a href="https://timelinize.com/">timelinize.com</a></li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li><strong>2025年诺贝尔物理学奖揭晓</strong>：<a href="https://www.nobelprize.org/prizes/physics/2025/popular-information/">Nobel Prize</a></li> <li><strong>瑞士冰川十年缩减四分之一</strong>：研究显示，自2015年以来，瑞士冰川的体积已缩减了四分之一。<a href="https://www.france24.com/en/live-news/20251001-swiss-glaciers-shrank-by-a-quarter-in-past-decade-study">France 24</a></li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li>📦 <a href="https://ikeamuseum.com/en/explore/ikea-catalogue/">IKEA目录1951-2021年档案</a></li> <li>🚗 <a href="https://www.motor1.com/news/774805/ford-ceo-complains-shortage-mechanics/">机械师为何解释行业招工难</a></li> <li>💻 <a href="https://wiki.tcl-lang.org/page/Showcase">Tcl编程语言的官方案例展示</a></li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li>📈 <strong>“错误地”使用Rails</strong>：一篇关于如何避免Rails开发中常见误区的批判性文章。<a href="https://www.bananacurvingmachine.com/articles/you-re-doing-rails-wrong">Banana Curving Machine</a></li> <li>📜 <strong>Lua语言演进史</strong>：一份深入探讨Lua编程语言持续演进的PDF文档。<a href="https://www.lua.org/doc/cola.pdf">lua.org</a></li> <li>🔒 <strong>如何让你的邮件账户更难被封</strong>：一篇提供实用技巧，增强电子邮件账户抗封禁能力的文章。<a href="https://karboosx.net/post/PJOveGVa/become-unbannable-from-your-emailgmail">karboosx.net</a></li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">LeoTalk AI周知 3: 追求差异化的最后一公里</title><link href="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-3-beyond-the-model-race-toward-t/" rel="alternate" type="text/html" title="LeoTalk AI周知 3: 追求差异化的最后一公里"/><published>2025-10-07T01:00:00+00:00</published><updated>2025-10-07T01:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-3-beyond-the-model-race-toward-t</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-ai-weekly-3-beyond-the-model-race-toward-t/"><![CDATA[<p>小公司不必一直追模型，而是做好差异化的最后一公里。</p> <p>目前LLM不管是闭源还是开源都已经到达了一个效果很不错的水平了，在很多Benchmark和实际应用都得到了证明。随着目前SOTA大模型Scaling Law得到的收益趋缓，AI应用升级到最新的大模型的边际收益也会变小。在实际生产中应该着重关注最后一公里的价值体现。</p> <p>这里面可以有多种价值体现方式。最常见的是结合行业或者垂直领域的知识进行应用，通过AI Agent结合后阶段（如RL）做微调，可以最大化模型能力，在应用层结合一些实际的workflow来设计和构建，可以实现真正有价值的AI应用或工作流。</p> <p>VLM也是现在备受关注的方向，甚至在Switcher/Router层面，不一定需要LLM来做，VLM可以运用的场景有很多</p> <p>如何能最大化利用现有模型能力去创造价值或者赋能业务，是企业更应该关心的。也是初创企业的机会所在，保持敏感性，用AI思维去思考每一个已经习以为常的场景。</p> <p>最后一公里是一个泛指的定义，但是确实价值最大化，性价比最高的阶段。</p> <h1 id="技术研究技术突破">技术研究/技术突破</h1> <h2 id="a16z发布人工智能消费报告">a16z发布人工智能消费报告</h2> <p>a16z发布<a href="https://a16z.com/the-ai-application-spending-report-where-startup-dollars-really-go/"><strong>The AI Application Spending Report: Where Startup Dollars Really Go</strong></a>。a16z分析了2025年6-8月间超过20万家初创公司的支出数据，从中识别出前50家AI原生应用公司（AI-native application companies）</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_1-480.webp 480w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_1-800.webp 800w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>榜单揭示了哪些在花钱、购买什么样的AI应用。</p> <ol> <li>横向应用（Horizontal Apps）占多数：60%横向应用，40%垂直应用： <ul> <li>通用LLM助手：OpenAI、Anthropic、Perplexity、Merlin AI</li> <li>工作区类别工具：Notion、Manus</li> <li>会议类工具：Fyxer、Happyscribe、Plaude、Otter AI、Read AI</li> <li>创意类工具（最大单一类别）：Freepik、ElevenLabs、Canva、Photoroom、Midjourney、Descript、Opus Clip、Capcut、Arcads、Tavus</li> </ul> </li> <li>垂直应用（Vertical Apps）：增强人类vs替代人类： <ul> <li>增强类（12家）：帮助员工减少重复工作，如客服、销售、HR工具等</li> <li>替代类（5家）：AI完成整个业务流程，如AI律师、AI工程师等</li> </ul> </li> <li>Vibe Coding已经进入企业级 <ul> <li>以Replit、Cursor、Lovable、Emergent为主，使得Vibe Coding从消费者端转向了企业端</li> </ul> </li> <li>从Consumer→Prosumer→Enterprise的演化路径 <ul> <li>约70%产品可以个人直接消费</li> <li>很多AI产品短时间内完成了从C端切入到企业应用</li> <li>AI产品模糊了个人工具和企业软件的界限</li> </ul> </li> </ol> <p><em>Opinion：今年应用层的增速是很大的，模型层热转向了应用层热。企业更有意愿也有更多预算投入到AI。这个趋势在2026年会持续加深，2025H2可以明显感觉到B端对于AI Agent的狂热追求，应用也进一步往垂类和私域渗透。</em></p> <h1 id="产品模型发布">产品&amp;模型发布</h1> <ul> <li><a href="https://openai.com/index/buy-it-in-chatgpt/">OpenAI推出Agentic Commerce Protocol</a>：更像是和Google的<a href="https://github.com/google-agentic-commerce/AP2">AP2</a>竞争</li> <li>DeepSeek<a href="https://api-docs.deepseek.com/news/news250929">推出</a><strong>DeepSeek-V3.2-Exp</strong>，相关<a href="https://github.com/deepseek-ai/DeepSeek-V3.2-Exp/blob/main/DeepSeek_V3_2.pdf">技术报告</a></li> <li>Thinking Machines Lab<a href="https://thinkingmachines.ai/blog/announcing-tinker/">推出</a><a href="https://thinkingmachines.ai/tinker/"><strong>Tinker</strong></a>：一个用于微调大语言模型的灵活API平台，研究者和开发者能自行控制算法与数据，系统负责分布式训练与资源管理</li> <li>Anthropic<a href="https://www.anthropic.com/engineering/building-agents-with-the-claude-agent-sdk">推出</a><strong>Claude Agent SDK</strong></li> <li>智谱AI<a href="https://z.ai/blog/glm-4.6">发布</a><a href="https://docs.z.ai/guides/llm/glm-4.6"><strong>GLM-4.6</strong></a></li> <li>Opera<a href="https://www.operaneon.com/">发布</a>Neon（AI浏览器）</li> <li>Hume AI<a href="https://www.hume.ai/blog/octave-2-launch">发布</a>多模态TTS模型Octave-2</li> </ul> <h2 id="anthropic发布claude-sonnet-45">Anthropic发布Claude Sonnet 4.5</h2> <p>Anthropic<a href="https://www.anthropic.com/news/claude-sonnet-4-5">推出</a><strong>Claude Sonnet 4.5</strong></p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_2.webp-480.webp 480w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_2.webp-800.webp 800w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_2.webp-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_2.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_3.webp-480.webp 480w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_3.webp-800.webp 800w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_3.webp-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769058_3.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_4.webp-480.webp 480w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_4.webp-800.webp 800w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_4.webp-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_4.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_5.webp-480.webp 480w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_5.webp-800.webp 800w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_5.webp-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_5.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p><em>Opinion：看着是为了应对GPT-5发布会后强劲的势头。现在cc默认也是走4.5了。可以发现现在Coding模型会开始着重一个指标，最长可自主运行时间，这点上Sonnet4.5标榜了30小时。</em></p> <h2 id="openai发布sora2">OpenAI发布Sora2</h2> <p>OpenAI<a href="https://openai.com/index/sora-2/">发布</a>Sora2。同时发布了Sora APP，可以理解为AI生成视频领域的TikTok。另外这次Sora2采用了邀请制。</p> <p><em>Opinion：发布后几天内，Sora2席卷全球，自媒体狂欢，邀请码机制更是增加了FOMO心理，助推了裂变。感觉现在邀请机制属于AI产品的常用套路了，用得好确实是有助理的。Sora APP也连续登顶App Store。大家也在持续讨论Sora2是否是可行的路径，Sam也在4号在他的Blog里发了一篇文章表示OAI打算开始和IP方合作分成，进一步探索商业化路径。目前一些知名IP已经无法简单的Gen出来了。另外国内目前针对Sora和邀请码的关键词进行了全网屏蔽，原因未知。回到Sora 2的狂欢本身，很难非黑即白的去评价，不要过度狂欢，也不要视而不见，积极探索发现其背后的商业价值。</em></p> <h1 id="微软推出office-agent">微软推出Office Agent</h1> <p>微软<a href="https://www.microsoft.com/en-us/microsoft-365/blog/2025/09/29/vibe-working-introducing-agent-mode-and-office-agent-in-microsoft-365-copilot/">推出</a>Office Agent，在Word，Excel中可以有Agent模式了（这是一个其他AI Agent产品很早就实现的功能）</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_6.webp-480.webp 480w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_6.webp-800.webp 800w,/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_6.webp-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-07-leotalk-ai-weekly-3-beyond-the-model-race-toward-t/1759769059_6.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>另外Nadlla也宣布自己会将一些对外的事务转移由CCO负责，自己专注于重视内部的RD。MC在Office上的竞争日益激烈，在数据中心层面也面临了越来越激烈的竞争，甚至合作伙伴OAI都要自己建数据中心了</p> <p><em>Opinion：微软的AI进度和成功在MAG7里不是很好，更多还是在数据中心和云服务（包括AI推理）层面的收入，Office结合AI包括定价策略的调整和最终结果都表明用户不太买账。微软还需要在AI上持续投入和发力。相比之下Google现在已经慢慢跟上来并在多个方面实现反超了。</em></p> <h2 id="comet免费使用">Comet免费使用</h2> <p>Perplexity<a href="https://x.com/perplexity_ai/status/1973795224960032857">宣布</a>Comet（AI浏览器）可免费使用了，原来只能付费用户使用</p> <p><em>Opinion：Chrome已经在US开始试点侧边栏AI功能了，标志着AI浏览器下半场开始了。AI浏览器是未来很重要的一个流量入口，期待各家持续竞争下能产出一些对普通用户有价值的产品或者新的交互形态</em></p> <h1 id="热点论文">热点论文</h1> <ul> <li><a href="https://arxiv.org/abs/2510.02250"><strong>The Unreasonable Effectiveness of Scaling Agents for Computer Use</strong></a></li> <li><a href="https://arxiv.org/abs/2510.00510"><strong>JoyAgent-JDGenie: Technical Report on the GAIA</strong></a></li> <li><a href="https://arxiv.org/abs/2510.02283"><strong>Self-Forcing++: Towards Minute-Scale High-Quality Video Generation</strong></a></li> </ul> <h1 id="其他阅读">其他阅读</h1> <ul> <li><a href="https://www.anthropic.com/engineering/effective-context-engineering-for-ai-agents">https://www.anthropic.com/engineering/effective-context-engineering-for-ai-agents</a></li> <li><a href="https://thinkingmachines.ai/blog/modular-manifolds/"><strong>Modular Manifolds</strong></a>：探讨了如何用流形（manifold）约束和几何优化的视角来重新思考神经网络训练</li> <li><a href="https://thinkingmachines.ai/blog/lora/"><strong>LoRA Without Regret</strong></a>：探讨了LoRA的实际权衡与取舍，并提供了关于超参数选择、秩（rank）设定以及与其他技术结合使用的实用指导</li> <li><a href="https://github.com/PicoTrex/Awesome-Nano-Banana-images"><strong>Awesome-Nano-Banana-images</strong></a>：很多Nano-banana的使用方式展示</li> <li><a href="/273da74ef0458051bf22e86a1a0a5c7d"><strong>Building with Cursor (public)</strong></a>：Cursor内部针对非工程的新人Onboarding的指导</li> <li>微软<a href="https://azure.microsoft.com/en-us/blog/introducing-microsoft-agent-framework/">推出</a><a href="https://github.com/microsoft/agent-framework"><strong>Agent Framework</strong></a>：A framework for building, orchestrating and deploying AI agents and multi-agent workflows with support for Python and .NET.</li> <li><a href="https://hbr.org/2025/09/ai-generated-workslop-is-destroying-productivity">AI-Generated “Workslop” Is Destroying Productivity</a></li> <li><a href="https://www.theinformation.com/articles/openais-first-half-results-4-3-billion-sales-2-5-billion-cash-burn">OpenAI上半年43亿美元营收，在RD上投入了25亿美元</a></li> </ul>]]></content><author><name></name></author><category term="AI"/><category term="AI"/><category term="Tech"/><category term="LeoTalkAIWeekly"/><summary type="html"><![CDATA[小公司不必一直追模型，而是做好差异化的最后一公里。]]></summary></entry><entry><title type="html">LeoTalk · Hacker News Daily · 2025.10.04</title><link href="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-4-2025/" rel="alternate" type="text/html" title="LeoTalk · Hacker News Daily · 2025.10.04"/><published>2025-10-04T00:00:00+00:00</published><updated>2025-10-04T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-4-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/leotalk-hacker-news-daily-october-4-2025/"><![CDATA[<h2 id="-今日重点top-picks">🔥 今日重点（Top Picks）</h2> <ul> <li><strong>Apple下架ICE追踪应用</strong>：在美国司法部压力下，Apple从App Store移除ICEBlock等移民追踪应用，引发隐私讨论。(<a href="https://www.foxbusiness.com/politics/apple-takes-down-ice-tracking-app-after-pressure-from-ag-bondi">Fox Business</a>、<a href="https://techcrunch.com/2025/10/03/apple-removes-iceblock-and-similar-tracking-apps-from-the-app-store/">TechCrunch</a>)</li> <li><strong>微软拟用自研芯片替代AMD/Nvidia GPU</strong>：微软CTO表示，未来大部分AI芯片将转向内部自研，以减少对外部供应商的依赖。(<a href="https://www.cnbc.com/2025/10/01/microsoft-wants-to-mainly-use-its-own-ai-chips-in-the-future.html">CNBC</a>)</li> <li><strong>AI泡沫迹象：企业债务攀升</strong>：有迹象表明AI领域的投资泡沫可能正在形成，企业负债水平显著增加。(<a href="https://www.axios.com/2025/10/03/ai-bubble-meta-oracle-microsoft">Axios</a>)</li> </ul> <h2 id="-ai--开发工具">📦 AI &amp; 开发工具</h2> <ul> <li><strong>Python PEP 810 – 显式惰性导入</strong>：新的Python增强提案，旨在规范和优化模块的惰性加载。(<a href="https://pep-previews--4622.org.readthedocs.build/pep-0810/">PEP-previews</a>)</li> <li><strong>Blender 4.5 LTS 发布</strong>：广受欢迎的开源3D创作套件发布长期支持版本，带来多项性能与功能改进。(<a href="https://lwn.net/Articles/1036262/">LWN.net</a>)</li> <li><strong>Gmail支持端到端加密邮件</strong>：Google Workspace更新，允许用户向任意邮箱发送端到端加密邮件。(<a href="https://workspaceupdates.googleblog.com/2025/10/send-gmail-end-to-end-encrypted-emails-in-gmail.html">Google Workspace Updates</a>)</li> </ul> <h2 id="-思维激荡mind-food">🧠 思维激荡（Mind Food）</h2> <ul> <li><strong>社恐并非只是渴望被喜欢</strong>：探讨社交焦虑的深层原因，超越简单的被认可需求。(<a href="https://chrislakin.blog/p/social-anxiety">chrislakin.blog</a>)</li> <li><strong>赞美RSS与受控信息流</strong>：文章呼吁回归RSS等受控信息订阅方式，以对抗算法推荐的信息过载。(<a href="https://blog.burkert.me/posts/in_praise_of_syndication/">blog.burkert.me</a>)</li> <li><strong>OpenAI只是又一家无聊绝望的AI初创公司？</strong>：一篇对OpenAI及其未来发展持批判态度的评论文章。(<a href="https://www.wheresyoured.at/sora2-openai/">wheresyoured.at</a>)</li> <li><strong>数字身份：资本主义监控的新枷锁</strong>：批判性探讨数字身份系统可能带来的隐私与自由问题。(<a href="https://theslowburningfuse.wordpress.com/2025/09/26/digital-id-the-new-chains-of-capitalist-surveillance/">The Slow Burning Fuse</a>)</li> <li><strong>你应当保持担忧</strong>：一篇警示人们对当前某些趋势保持警惕的思考文章。(<a href="https://dlo.me/archives/2025/10/03/you-should-be-worried/">dlo.me</a>)</li> <li><strong>我们应接受有瑕疵的技术</strong>：思考技术发展中“完美”的悖论，并倡导接受技术固有的不完美。(<a href="https://entropicthoughts.com/you-want-technology-with-warts">entropicthoughts.com</a>)</li> <li><strong>教老年人使用iPhone的痛苦经历</strong>：一位用户分享了教老年人使用智能手机的挑战与思考。(<a href="https://forums.macrumors.com/threads/i-spent-the-day-trying-to-teach-seniors-how-to-use-an-iphone-and-it-was-a-nightmare.2468117/">MacRumors Forums</a>)</li> </ul> <h2 id="-科技与社会趋势">🌐 科技与社会趋势</h2> <ul> <li><strong>德国必须坚决反对聊天控制中的客户端扫描</strong>：Signal呼吁德国政府抵制欧盟提案中对加密通信进行客户端扫描的要求，以保护用户隐私。(<a href="https://signal.org/blog/pdfs/germany-chat-control.pdf">Signal.org</a>)</li> <li><strong>Anduril与Palantir战场通信系统存在缺陷</strong>：一份陆军备忘录指出Anduril和Palantir联合开发的下一代指挥控制系统存在严重缺陷。(<a href="https://www.cnbc.com/2025/10/03/anduril-palantir-ngc2-deep-flaws-army.html">CNBC</a>)</li> <li><strong>瑞典要求2026年前实现离线银行卡支付</strong>：瑞典央行发布通知，要求银行和支付服务提供商在特定日期前确保离线卡支付能力。(<a href="https://www.riksbank.se/en-gb/press-and-published/notices-and-press-releases/press-releases/2025/offline-card-payments-should-be-possible-no-later-than-1-july-2026/">Riksbank.se</a>)</li> <li><strong>ICE计划建立24/7社交媒体监控团队</strong>：美国移民及海关执法局（ICE）寻求合同建立全天候社交媒体监控能力。(<a href="https://www.wired.com/story/ice-social-media-surveillance-24-7-contract/">Wired</a>)</li> <li><strong>经济学博士就业市场崩溃</strong>：分析文章指出经济学博士就业市场面临严峻挑战。(<a href="https://www.chrisbrunet.com/p/the-collapse-of-the-econ-phd-job">chrisbrunet.com</a>)</li> <li><strong>欧洲不能再忽视俄罗斯的攻击</strong>：一篇评论文章指出欧洲正遭受俄罗斯的混合战争攻击，且不应再对此视而不见。(<a href="https://www.worldpoliticsreview.com/europe-russia-drones-hybrid-war/">World Politics Review</a>)</li> </ul> <h2 id="-新奇项目--show-hn">📱 新奇项目 / Show HN</h2> <ul> <li>🖼️ <strong>Niri – 一个可滚动的平铺Wayland合成器</strong>：一个新的开源项目，为Wayland桌面环境带来独特的平铺窗口管理体验。(<a href="https://github.com/YaLTeR/niri">GitHub</a>)</li> <li>🖥️ <strong>FyneDesk: 用Go语言编写的Linux桌面环境</strong>：一个用Fyne GUI库开发的轻量级、完整的Linux桌面环境项目。(<a href="https://github.com/FyshOS/fynedesk">GitHub</a>)</li> <li>🎮 <strong>将乐高Game Boy变成可玩设备</strong>：一位创作者成功将乐高Game Boy模型改造为实际可运行的游戏机。(<a href="https://blog.nataliethenerd.com/i-turned-the-lego-game-boy-into-a-working-game-boy-part-1/">blog.nataliethenerd.com</a>)</li> <li>🌐 <strong>Webbol: 用COBOL编写的极简静态Web服务器</strong>：一个新颖的开源项目，用古老的COBOL语言实现了一个简单的Web服务器。(<a href="https://github.com/jmsdnns/webbol">GitHub</a>)</li> </ul> <h2 id="-科学与健康">🔬 科学与健康</h2> <ul> <li>🐜 <strong>苏联核掩体中被困蚂蚁生存数年</strong>：研究发现，在极端环境下，一群被困在核掩体中的蚂蚁通过特殊方式存活了多年。(<a href="https://www.sciencealert.com/ants-trapped-in-an-old-soviet-nuclear-bunker-survived-for-years-by-turning-on-their-own">ScienceAlert</a>)</li> </ul> <h2 id="-快速浏览">🎯 快速浏览</h2> <ul> <li>🗺️ <strong>法罗群岛摄影集</strong>：一系列令人惊叹的法罗群岛风光照片。(<a href="https://photoblog.nk412.com/Faroe2025/Faroes/n-cPCNFr">photoblog.nk412.com</a>)</li> </ul> <h2 id="-dev-tricks">🧰 Dev Tricks</h2> <ul> <li>🚀 <strong>Fp8性能提升100 TFLOPS</strong>：在Triton中，FP8模型当内核名称包含”cutlass”时，运行速度可提升约100 TFLOPS。(<a href="https://github.com/triton-lang/triton/pull/7298">GitHub/Triton</a>)</li> <li>❌ <strong>取消异步Rust任务</strong>：深入探讨在Rust异步编程中如何有效取消正在运行的任务。(<a href="https://sunshowers.io/posts/cancelling-async-rust/">sunshowers.io</a>)</li> <li>📚 <strong>Stdlib: 技术领导力框架、模板与指南库</strong>：为技术领导者提供的实用资源集合，涵盖框架、模板和指导。(<a href="https://debuggingleadership.com/stdlib">debuggingleadership.com</a>)</li> </ul>]]></content><author><name></name></author><category term="HNDailyReport"/><category term="HNDailyReport"/><summary type="html"><![CDATA[🔥 今日重点（Top Picks）]]></summary></entry><entry><title type="html">大模型上下文工程实践指南-第5章：检索增强生成</title><link href="https://ifuryst.github.io/blog/2025/ce101-5-rag/" rel="alternate" type="text/html" title="大模型上下文工程实践指南-第5章：检索增强生成"/><published>2025-10-01T00:00:00+00:00</published><updated>2025-10-01T00:00:00+00:00</updated><id>https://ifuryst.github.io/blog/2025/ce101-5-rag</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/ce101-5-rag/"><![CDATA[<h1 id="51-rag基础与原理">5.1 RAG基础与原理</h1> <h2 id="511-rag基础概念">5.1.1 RAG基础概念</h2> <p>检索增强生成（RAG，Retrieval-Augmented Generation）是由Facebook（现Meta） AI Research在2020年的一篇<a href="https://arxiv.org/abs/2005.11401">论文</a>中出的一个技术，提出的原因是大语言模型（LLM）虽然在各种任务上表现优异，但由于<strong>知识存储在参数中</strong>，<strong>无法及时更新且易出现幻觉（Hallucination）</strong>；因此引入外部可检索的非参数化记忆，并将检索结果与模型结合，从而提升知识密集型任务的准确性与可追溯性。</p> <p>简单的人话表述就是，大模型需要外部的信息来帮助决策，提前将文档通过一些手段（分块、向量化等）存起来后，查询的时候可以在这些内容中搜索辅助大模型进行最终的回答，整个流程下来就是RAG要做的一个事情。</p> <p>RAG能流行是因为其解决了这么几个问题：</p> <ul> <li><strong>解决推理使用的是过时的训练语料库</strong>：尤其针对一些对时间较为敏感的数据，以及一些个人/企业知识库需要最新的</li> <li><strong>缓解幻觉（Hallucination）</strong>：RAG可以极强的缓解幻觉，这个核心还是因为模型基于上下文进行推理的过程可以产生更加可靠的结果</li> <li><strong>通用模型专业化</strong>：尤其针对垂直领域时，通用模型权重过于分散，在搭配该领域的知识库后，可以有效提升专业化，提高结果的可靠性</li> </ul> <p>我们采用Langchain官方这个<a href="https://python.langchain.com/docs/tutorials/rag/">教程</a>里的图演示RAG是怎么运作的：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293252_1-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293252_1-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293252_1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293252_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>文档通过这个流程进行分块、向量化和存储。然后到查询环节：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293252_2-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293252_2-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293252_2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293252_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>召回Top K的结果，结合提示词给到大模型做最后的输出。下面是一个简单的Demo：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">logging</span>
<span class="kn">from</span> <span class="n">langchain_openai</span> <span class="kn">import</span> <span class="n">ChatOpenAI</span><span class="p">,</span> <span class="n">OpenAIEmbeddings</span>
<span class="kn">from</span> <span class="n">langchain.chains</span> <span class="kn">import</span> <span class="n">RetrievalQA</span>
<span class="kn">from</span> <span class="n">langchain.text_splitter</span> <span class="kn">import</span> <span class="n">CharacterTextSplitter</span>
<span class="kn">from</span> <span class="n">langchain_community.vectorstores</span> <span class="kn">import</span> <span class="n">FAISS</span>

<span class="c1"># 配置日志格式
</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">basicConfig</span><span class="p">(</span>
<span class="n">level</span><span class="o">=</span><span class="n">logging</span><span class="p">.</span><span class="n">INFO</span><span class="p">,</span>
<span class="nb">format</span><span class="o">=</span><span class="sh">"</span><span class="s">%(asctime)s [%(levelname)s] %(message)s</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>

<span class="c1"># Step 1: 准备文档
</span>
<span class="n">docs</span> <span class="o">=</span> <span class="p">[</span>
<span class="sh">"</span><span class="s">Leo 发明了一种新的编程语言，名字叫做 CatLang。</span><span class="sh">"</span><span class="p">,</span>
<span class="sh">"</span><span class="s">CatLang 的语法非常简单，所有函数都以 </span><span class="sh">'</span><span class="s">喵</span><span class="sh">'</span><span class="s"> 开头。</span><span class="sh">"</span><span class="p">,</span>
<span class="sh">"</span><span class="s">在 2025 年，Leo 还发布了一个框架叫做 PurrNet，用于分布式 AI 计算。</span><span class="sh">"</span><span class="p">,</span>
<span class="sh">"</span><span class="s">PurrNet 的核心是通过小猫节点来进行任务调度，每个节点代号是 Kitten。</span><span class="sh">"</span><span class="p">,</span>
<span class="p">]</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">准备文档完成，共 %d 条</span><span class="sh">"</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">docs</span><span class="p">))</span>

<span class="c1"># Step 2: 文本切分（可选）
</span>
<span class="n">splitter</span> <span class="o">=</span> <span class="nc">CharacterTextSplitter</span><span class="p">(</span><span class="n">chunk_size</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">chunk_overlap</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">texts</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">docs</span><span class="p">:</span>
<span class="n">chunks</span> <span class="o">=</span> <span class="n">splitter</span><span class="p">.</span><span class="nf">split_text</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<span class="n">texts</span><span class="p">.</span><span class="nf">extend</span><span class="p">(</span><span class="n">chunks</span><span class="p">)</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">文档切分: 原文=%s -&gt; %d 个切片</span><span class="sh">"</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">chunks</span><span class="p">))</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">所有切分后的文本总数: %d</span><span class="sh">"</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">texts</span><span class="p">))</span>

<span class="c1"># Step 3: 向量化 &amp; 建立向量数据库
</span>
<span class="n">embeddings</span> <span class="o">=</span> <span class="nc">OpenAIEmbeddings</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">text-embedding-3-small</span><span class="sh">"</span><span class="p">)</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">开始向量化...</span><span class="sh">"</span><span class="p">)</span>
<span class="n">vectorstore</span> <span class="o">=</span> <span class="n">FAISS</span><span class="p">.</span><span class="nf">from_texts</span><span class="p">(</span><span class="n">texts</span><span class="p">,</span> <span class="n">embeddings</span><span class="p">)</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">向量数据库建立完成</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># Step 4: 构建 RAG QA Chain
</span>
<span class="n">retriever</span> <span class="o">=</span> <span class="n">vectorstore</span><span class="p">.</span><span class="nf">as_retriever</span><span class="p">(</span><span class="n">search_type</span><span class="o">=</span><span class="sh">"</span><span class="s">similarity</span><span class="sh">"</span><span class="p">,</span> <span class="n">search_kwargs</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">k</span><span class="sh">"</span><span class="p">:</span> <span class="mi">2</span><span class="p">})</span>
<span class="n">llm</span> <span class="o">=</span> <span class="nc">ChatOpenAI</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">gpt-4o-mini</span><span class="sh">"</span><span class="p">)</span>
<span class="n">qa</span> <span class="o">=</span> <span class="n">RetrievalQA</span><span class="p">.</span><span class="nf">from_chain_type</span><span class="p">(</span><span class="n">llm</span><span class="o">=</span><span class="n">llm</span><span class="p">,</span> <span class="n">retriever</span><span class="o">=</span><span class="n">retriever</span><span class="p">)</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">RAG QA Chain 构建完成</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># Step 5: 提问
</span>
<span class="n">query</span> <span class="o">=</span> <span class="sh">"</span><span class="s">什么是CatLang？</span><span class="sh">"</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">开始提问: %s</span><span class="sh">"</span><span class="p">,</span> <span class="n">query</span><span class="p">)</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">qa</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>

<span class="c1"># 检索过程可视化（教学用）
</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">检索到的相关文档（Top 2）:</span><span class="sh">"</span><span class="p">)</span>
<span class="n">retrieved_docs</span> <span class="o">=</span> <span class="n">retriever</span><span class="p">.</span><span class="nf">get_relevant_documents</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">doc</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">retrieved_docs</span><span class="p">,</span> <span class="mi">1</span><span class="p">):</span>
<span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">文档 %d: %s</span><span class="sh">"</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">doc</span><span class="p">.</span><span class="n">page_content</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="se">\n</span><span class="s">====== 最终结果 ======</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">问题:</span><span class="sh">"</span><span class="p">,</span> <span class="n">query</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">回答:</span><span class="sh">"</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">=====================</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>

</code></pre></div></div> <p>这是一个很简单的例子，我随便虚构了一些大模型不可能“知道”的内容，这样可以避免大模型作弊，然后写死了，运行后输出如下：</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2025-09-21 22:25:21,127 <span class="o">[</span>INFO] 准备文档完成，共 4 条
2025-09-21 22:25:21,127 <span class="o">[</span>INFO] 文档切分: 原文<span class="o">=</span>Leo 发明了一种新的编程语言，名字叫做 CatLang。 -&gt; 1 个切片
2025-09-21 22:25:21,127 <span class="o">[</span>INFO] 文档切分: 原文<span class="o">=</span>CatLang 的语法非常简单，所有函数都以 <span class="s1">'喵'</span> 开头。 -&gt; 1 个切片
2025-09-21 22:25:21,127 <span class="o">[</span>INFO] 文档切分: 原文<span class="o">=</span>在 2025 年，Leo 还发布了一个框架叫做 PurrNet，用于分布式 AI 计算。 -&gt; 1 个切片
2025-09-21 22:25:21,127 <span class="o">[</span>INFO] 文档切分: 原文<span class="o">=</span>PurrNet 的核心是通过小猫节点来进行任务调度，每个节点代号是 Kitten。 -&gt; 1 个切片
2025-09-21 22:25:21,127 <span class="o">[</span>INFO] 所有切分后的文本总数: 4
2025-09-21 22:25:21,335 <span class="o">[</span>INFO] 开始向量化...
2025-09-21 22:25:23,180 <span class="o">[</span>INFO] HTTP Request: POST https://api.openai.com/v1/embeddings <span class="s2">"HTTP/1.1 200 OK"</span>
2025-09-21 22:25:23,230 <span class="o">[</span>INFO] Loading faiss.
2025-09-21 22:25:23,279 <span class="o">[</span>INFO] Successfully loaded faiss.
2025-09-21 22:25:23,285 <span class="o">[</span>INFO] 向量数据库建立完成
2025-09-21 22:25:23,388 <span class="o">[</span>INFO] RAG QA Chain 构建完成
2025-09-21 22:25:23,388 <span class="o">[</span>INFO] 开始提问: 什么是CatLang？
2025-09-21 22:25:24,608 <span class="o">[</span>INFO] HTTP Request: POST https://api.openai.com/v1/embeddings <span class="s2">"HTTP/1.1 200 OK"</span>
2025-09-21 22:25:27,366 <span class="o">[</span>INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions <span class="s2">"HTTP/1.1 200 OK"</span>

2025-09-21 22:25:27,392 <span class="o">[</span>INFO] 检索到的相关文档（Top 2）:
2025-09-21 22:25:29,062 <span class="o">[</span>INFO] HTTP Request: POST https://api.openai.com/v1/embeddings <span class="s2">"HTTP/1.1 200 OK"</span>
2025-09-21 22:25:29,064 <span class="o">[</span>INFO] 文档 1: Leo 发明了一种新的编程语言，名字叫做 CatLang。
2025-09-21 22:25:29,065 <span class="o">[</span>INFO] 文档 2: CatLang 的语法非常简单，所有函数都以 <span class="s1">'喵'</span> 开头。

<span class="o">======</span> 最终结果 <span class="o">======</span>
问题: 什么是CatLang？
回答: CatLang是一种由Leo发明的新编程语言，其语法非常简单，所有函数都以“喵”开头。
<span class="o">=====================</span>
</code></pre></div></div> <p>这边我做了一个Top K搜索的模拟，实际上是不会打印的，这个简单的Demo让我们对RAG有一个初步的概念。总体而言，RAG是为了提高效果的技术，其结合文档检索，提供了合适模型的上下文，成为上下文工程中的核心技术之一。接下去我们来看一下RAG的基础架构和流程</p> <h2 id="512-架构与工作流程">5.1.2 架构与工作流程</h2> <p>接下去我们来看看RAG相关的架构和流程，这边我画了一张RAG架构图：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293252_3-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293252_3-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293252_3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293252_3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>这是一个比较完整的RAG架构图，包含了流程中的一些关键节点，我们不需要马上理解每个环节，后面我们会陆续提到每个环节里的内容。</p> <p>RAG的基础架构相对简单，主要分为三个阶段：</p> <ol> <li><strong>查询（Query）</strong>：输入，通常为用户的查询或者问题等</li> <li><strong>检索（Retriever）</strong>：从相关知识库中获得与用户问题相关性最高的文档（Top K）</li> <li><strong>生成（Generation）</strong>：根据Query和检索得到的文档，生成高质量的回答</li> </ol> <p>下面是一个RAG实施的全过程：</p> <ol> <li>数据通过合理的分块（chunking），每块分别做向量化（embedding）后存到向量数据库</li> <li>查询进来后，将查询问题也通过同样的方式向量化后，去到向量数据库内做相似性搜索</li> <li>将搜索得到的top-k文档块的原始数据拼接后放在上下文中一起发送给大语言模型</li> <li>大语言模型基于响应的数据做最后的结果生成</li> </ol> <p>这样有了原始数据的参考，大模型就有了参照物，最终给出的答案也会更加稳定，避免自由发挥情况下容易产生幻觉或产生过时数据的情况发生。在开始深入RAG之前，我们可以先来了解一下检索方式，这有助于我们理解RAG里一个很核心的概念，检索。</p> <h2 id="513-检索方式">5.1.3 检索方式</h2> <p>在自然语言处理中有文本检索技术，分为：</p> <ol> <li>稀疏文本检索（Sparse Retrieval）</li> <li>稠密文本检索（Dense Retrieval）</li> </ol> <p>在现行的RAG语境下，更多是使用了向量化搜索，也就是稠密文本检索的方式。但是随着RAG应用的推广和普及，目前越来越多应用中会将两个检索方式结合起来使用，这个在下一节中也会了解到。现在我们先来了解一下这两种检索方式的原理和差异。</p> <h3 id="稀疏文本检索sparse-retrieval">稀疏文本检索（Sparse Retrieval）</h3> <p>原理是<strong>基于词频（Term Frequency）等显式词项统计信息，使用稀疏向量（Sparse Vector）表示文本，使用向量相似度进行匹配，返回最相关的文档</strong>。那么什么是稀疏向量呢？简单说就是大部分维度为0的向量。简单举个例子来理解，假设有个词表（vocabulary）：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>["apple", "banana", "car", "dog", "elephant"]
</code></pre></div></div> <p>这个词表有5个词，对应一个5维的向量空间。现在有个文档：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>I like banana
</code></pre></div></div> <p>我们用稀疏向量来表示这个文档时，会得到：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[0, 1, 0, 0, 0]
</code></pre></div></div> <p>很直观的可以看到，这是一个5维的向量，但是其中大部分的维度都是0（没出现），只有极少数是非0（有出现的词）。理论上我们会在这里持续增加词出现的频次，比如</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>banana banana banana!
</code></pre></div></div> <p>可以得到</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[0, 3, 0, 0, 0]
</code></pre></div></div> <p>看着没什么问题，但是这种极致简单的词频统计，会在某些情况下有问题，比如像“the”、“is”、“you”这些词在所有文本中都很多，但它们没啥实际意义。所以出现次数多的词，并不一定重要。为了解决这个问题，我们就需要引入一些方法。常见的方法有：</p> <ul> <li><strong>TF-IDF（Term Frequency - Inverse Document Frequency）</strong>：在词频的基础上加入“逆文档频率”因素，降低常见词的权重，提高稀有词的权重。</li> <li><strong>BM25</strong>：一种改进的 TF-IDF 加权方案，同时考虑了词频饱和、文档长度归一化等因素，广泛应用于现代搜索引擎。</li> </ul> <p>这些方法都基于<strong>倒排索引（Inverted Index）</strong>结构实现高效检索。它们不再简单依赖“词频越高越重要”的假设，而是引入更多统计规律，使得检索系统能更准确地评估“哪些词更关键”。这个也是传统的搜索引擎的基础，像Google这类搜索引擎在早期就应用了这类技术去做搜索。另外全文检索里可以经常看到这两个技术，比如ES的全文检索就是利用了BM25来做的。</p> <p>可以看出<strong>稀疏文本检索的优点就是高效快速，消耗资源少，因此被广泛使用</strong>。其<strong>缺点就是无法理解一些语义相近但是词不重叠的文本</strong>，比如car和automobile这种，因此也就有了稠密文本检索来解决这个问题</p> <h3 id="稠密文本检索dense-retrieval">稠密文本检索（Dense Retrieval）</h3> <p>原理是<strong>通过神经网络（如Word2Vec、BERT）将查询和文档分别编码成低维稠密向量（Dense Vector），使用向量相似度（如内积或余弦相似度）进行匹配，返回最相关的文档</strong>。那么什么是稠密向量呢？和稀疏向量刚好反过来了：稠密向量是所有维度基本都有值的向量。每一维都用浮点数表示，通常没有“0”或者很少有“0”。</p> <p>这边的低维是相对于前面稀疏文本里的稀疏向量通常是极高维度的，因为那边的向量维度=词表大小，通常可以词表可以达到<strong>几十万甚至百万维</strong>，但是在稠密向量里，通常<strong>几十维到几千维</strong>的程度，所以是低维稠密向量。</p> <p>举个例子，还是前面这句话：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>I love bananas

</code></pre></div></div> <p>我们将其送进一个神经网络模型（如BERT、DPR编码器），可以输出得到一个向量，如：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[0.12, -0.08, 0.91, 0.33, ..., 0.04]   // 共768维

</code></pre></div></div> <p>像现在流行的Embedding本质上就是这个原理，通过预训练语言模型后，可以通过模型将内容编码为向量，每个向量都是一个<strong>语义表示（Semantic Representation）</strong>，这些向量不是手动构造的，而是模型通过大量文本学习出来的。</p> <p>我们可以找到很多这种向量可视化的网站或者开源项目，比如<a href="https://projector.tensorflow.org/">tensorflow</a>这个展示了word2vec的向量在三维空间的表示，可以看两个词的可视化距离（相似度计算其实算的就是在对应维度空间下的两点之间的距离，只不过维度高到人类大脑无法轻易想象，也就是超越人类的认知，没办法像在二维和三维空间下可以轻松计算距离）</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293254_4-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293254_4-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293254_4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293254_4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>另外vectosphere这个，也可以同样可视化展示：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293254_5-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293254_5-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293254_5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293254_5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>回过头来，常见的稠密文本检索方法有下面这些，有兴趣的可以自己去了解一下：</p> <p>我们平时最常见的RAG应用就是使用了Bi-Encoder，因为足够快，而ReRank时数量较少，可以利用Cross-Encoder来打分。</p> <p>到这里我们已经知道了稠密文本检索到底是做什么了，在提前向量化资料后，在后续问题来了之后可以将问题也进行向量化，然后通过向量相似度进行搜索，得到最相关的资料，这就是稠密文本检索的过程，<strong>能够检索语义相近但词不匹配的文档</strong>，并且<strong>适合复杂查询、开放域问答、RAG 等应用</strong>。</p> <p>其缺点也相对明显：<strong>需要大规模训练，消耗资源大，部署成本高，另外召回的结果可解释性低</strong></p> <h3 id="融合方法hybrid-retrieval">融合方法（Hybrid Retrieval）</h3> <p>两者各有优缺点，因此很多系统或者应用场景会将两者进行结合，比如用稀疏检索（如BM25）结合稠密检索先召回 Top K文档，再用重排模型（Dense Reranker，如Cross-Encoder）对结果进行重新排序，重新排序</p> <p>引用一张我之前发的关于Bi-Encoder和Cross-Encoder：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293254_6-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293254_6-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293254_6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293254_6.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>我们在实际应用中<strong>不会因为技术而技术</strong>，一定要记住这句话！否则很容易陷入拿着锤子找钉子的尴尬境地（现在其实有不少人就是拿着AI找钉子敲）。就比如前面提到的这些，有可能在实际的应用中只是简单的应用向量化去做检索就足够了，也可能复杂到需要结合关系型数据库做常规的数据检索+ES做全文检索+向量化检索+重排技术得到最匹配的结果去做方案。所以应用AI（Applied AI）的背后就是我们需要去了解每个技术背后的原理，是基于什么背景之下提出来的，以及这个技术目前发展到什么程度了，可以解决什么问题，在某个应用场景下是否合适，这样我们才可以真正做到将AI应用在有价值的地方，赋能业务产生真正的商业价值，而不是陷入技术自嗨中。</p> <p>了解完这个我们对于RAG的底层依托的技术已经有了比较清晰的认知了，接下去我们会进一步深入去了解RAG相关的技术以及衍生的一些应用方式。</p> <h1 id="52-rag进阶">5.2 RAG进阶</h1> <p>常规的RAG相对简单，在实际应用中，我们会在原本的架构之上，去运用一些技术和方法来提高，比如：</p> <ul> <li><strong>标量+向量</strong>：通常RAG是将文档分块（Chunk）后向量化（Embedding）入库，然后查询也向量化后到向量数据库进行相似性搜索。如前面提到，实际上还可以结合传统的数据库或者ES进行标量数据的匹配检索，最后可以得到标量+向量数据。</li> <li><strong>重排（Reranking）</strong>：不管是单向量还是结合了标量，在送到模型前可以用一些手段对文档进行重新排序，通常我们会使用重排模型对文档再进行评分排序，这样可以选择实际送到模型的文档</li> <li><strong>多跳RAG</strong>：当单跳查询无法满足复杂的查询时，结合多跳是可以达到更好的效果的。</li> <li><strong>图增强RAG（Graph-RAG）</strong>：结合图的能力来扩展RAG的能力，尤其是在文档处理阶段，可以利用图+大模型来细化一些实体和关系，甚至进一步形成社区或领域的形态。</li> </ul> <p>上面只是一部分技术或方法。在技术普及过程，开始会陆续出现体系化的知识，也是为了方便应用以及后来者学习，现在业界也有很多划分方式，比如<a href="https://www.dailydoseofds.com/tag/rag-crash-course/">Daily Dose of Data Science</a>这张图：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293255_7-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293255_7-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293255_7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293255_7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>另外<a href="https://arxiv.org/pdf/2501.09136">这篇论文</a>里也提供了相应的划分方式：</p> <p>我们引用<a href="https://arxiv.org/pdf/2312.10997">这篇论文</a>里的一张示意图：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293255_8-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293255_8-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293255_8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293255_8.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>可以较为清楚的看出差别，分类是人为划分的，本质上就是针对基础的RAG在各个环节进行优化提升，目的都是为了提高最后输出的效果。</p> <p><strong>进阶RAG（Advanced RAG）</strong>就是加入了<strong>前处理阶段（Pre-Retrieval）</strong>来优化查询，比如查询重写或运用一些策略进行处理。并且加入了<strong>后处理阶段（Post-Retrieval）</strong>来优化检索后的文档块，比如重排、压缩或融合等手段，这样在最终给到大模型可以得到更好的结果提升。</p> <p><strong>模块化RAG（Modular RAG）</strong>则是将各种阶段或者功能单独成模块，每个模块是最小单元，可以自由的组合，形成一个类似workflow的流程，有点像是玩乐高积木，可以针对不同的业务场景自由组合。本质上里面的技术和方法没有变化，只不过是在工程化上进行了优化，方便不断复用和自由编排。</p> <p><strong>图RAG（Graph RAG）</strong>就是利用了图来辅助处理，万物皆可图，图的能力应用在RAG里，使得RAG得到了极大的提升，后面我们会在图RAG章节里会详细分析加入图能力，RAG得到的好处和提升。</p> <p><strong>智能体RAG（Agentic RAG）</strong>则是将RAG从简单的检索生成扩展成自主的Agent，可以基于一定的策略动态决策并进行多轮次检索，这个其实是对多跳RAG的一种提升，将AI Agent的思想融入RAG。</p> <p>到这里我们再回过头来看看我们前面的那张架构图：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293256_9-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293256_9-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293256_9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293256_9.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>这里面其实已经体现了很多的东西，我们可以把RAG分为：</p> <ol> <li>输入：可能有不同的输入方式，主流常见的是从Chat进来的问题</li> <li>前处理：检索前作一些前置处理动作，目的是增加召回效果</li> <li>检索：执行检索</li> <li>后处理：对检索的结果进行特定的处理，目的也是增加召回效果</li> <li>生成：给大模型输出最后的结果</li> <li>输出：将结果返回</li> </ol> <p>这个其实就是一个进阶RAG的流程了，至于模块化RAG，其实是将里面的功能模块都单独抽出来形成独立的单元，这样可以重复自由组织编排，而图RAG和智能体RAG则会在里面多个环节参与。下面我们会针对一些关键的节点和方式展开。</p> <h2 id="521-查询重写">5.2.1 查询重写</h2> <p>在传统的RAG里，通常就是将查询通过向量化的手段转成嵌入（embedding），做相似性搜索后给到大模型。这种情况下有明显可见的问题：<strong>输入查询无法顺利匹配到文档块</strong>。</p> <p>在实际场景下，用户输入的问题有可能因为过于简化或者表述不当而无法通过相似度搜索匹配到合适的文档块，使得最终的效果不符合预期。面对这个问题，可以应用查询重写来进一步缓解并提升效果。</p> <p>正如前面提到的，重写策略其实有挺多的，目前主流的有这么几种（更多还是一些类别的划分，实际上在不同的业务场景下还会有不同的策略浮现的，比如一些行业词汇重写、黑白词等等，这边就不过度展开）：</p> <ol> <li><strong>规范化重写（Canonicalization）</strong>：将随意、模糊、口语化表达转成标准清晰的问题</li> <li><strong>同义改写（Paraphrasing）</strong>：增强表达覆盖、抗embedding漏召</li> <li><strong>泛化重写（Step-Back Query）</strong>：提升复杂问题检索效果</li> <li><strong>多查询生成（Multi-query Generation）</strong>：多视角覆盖、提升召回率</li> <li><strong>问题分解策略（Question Decomposition）</strong>：将复杂查询拆分为多个子问题，分步检索和推理</li> </ol> <h3 id="规范化重写canonicalization"><strong>规范化重写（Canonicalization）</strong></h3> <p>规范化重写其实就是针对查询问题让大语言模型帮忙进行重写，使得问题更加规范化，这其中有一些不同的手法。我们先来看一个基础的示例：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>周杰伦第一张专辑是什么？
</code></pre></div></div> <p>可以改写成</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>周杰伦第一张音乐专辑名称是什么？
</code></pre></div></div> <p>类似这样的规范化重写，可以将一个较为随意的问题转变成更加正式的问题。以便在向量化检索的过程中，可以更好的召回预期的文档块用于最终的结果生成。</p> <h3 id="同义改写paraphrasing"><strong>同义改写（Paraphrasing）</strong></h3> <p>同义改写的原理也是差不多的，对于不合适的表述，可以进行同义替换改写，使得输入的内容可以更容易匹配到合适的文档块。比如：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 历史聊天记录
User: 马斯克现在拥有哪些公司
AI: 截至2025年，马斯克拥有或主导的公司包括特斯拉、SpaceX、xAI（含X）、Neuralink 和 The Boring Company。
User: 他现在个人财富估值是多少？
</code></pre></div></div> <p>历史信息已经出现过相应的人物名，但是在最新的Query中却没有重复表述，此时是可以通过重写将用户最新的问题重写成：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>马斯克现在个人财富估值是多少？

</code></pre></div></div> <p>甚至是可以进一步结合前面规范化重写：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>截止2025年7月，马斯克（Elon Musk）的个人净资产估值是多少？

</code></pre></div></div> <p>这样等于是把时间具体化，并且名词也更加规范化表述了。</p> <h3 id="泛化重写step-back-query"><strong>泛化重写（Step-Back Query）</strong></h3> <p>泛化重写是把具体的问题抽象，将问题覆盖范围扩大了，这样可以扩大检索范围和获取更完整的上下文信息，比如：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 马斯克的出生地是哪里？
</code></pre></div></div> <p>可以改写成：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 马斯克的个人背景和早年经历是什么？
</code></pre></div></div> <p>这种好处不是明显可见的，为什么这么说呢？因为问题被泛化之后，有可能会导致答案也进一步被泛化，当然最终的递送给大语言模型的Prompt是可以保留原始的问题的。泛化重写其实是应该结合多跳RAG这些技术来发挥更大的作用，这个在后续我们也会涉及到，简单说就是通过泛化先在一个方向上探索，再一步步细化定位到实际想要的结果中。</p> <h3 id="多查询生成multi-query-generation"><strong>多查询生成（Multi-query Generation）</strong></h3> <p>这个方式也是应对用户问题表述不清晰或含糊的情况，通过将单一问题生成多个问题的方式，对一个问题提供多个角度，这样可以提高覆盖度，达到更好的检索和结果生成效果。</p> <p>我们来看下例子：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>周杰伦的第一张专辑是什么？
</code></pre></div></div> <p>多查询重写：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>周杰伦最早发行的专辑是哪一张？
周杰伦第一张音乐专辑的名字是什么？
周杰伦早期的音乐作品有哪些？
周杰伦的音乐出道作品是哪一张专辑？
</code></pre></div></div> <p>这样就将一个问题扩展出基于不同角度的多个问题组合，这样可以以较为全面的角度去召回文档块了。</p> <h3 id="问题分解策略question-decomposition"><strong>问题分解策略（Question Decomposition）</strong></h3> <p>将一个复杂问题拆解成多个原子问题，使得可以基于多个问题去分别召回文档块，比如：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>周杰伦从出道到现在有哪些重要的音乐成就？
</code></pre></div></div> <p>可以拆解成：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>周杰伦是哪一年出道的？
周杰伦的第一张专辑是什么？
周杰伦获得过哪些音乐奖项？
周杰伦的代表作有哪些？
他对华语乐坛的影响体现在哪些方面？
</code></pre></div></div> <p>这样可以基于不同的问题去做处理了。这里其实还可以结合前面的一些重写策略进一步完善子问题。</p> <p>另外这种方式通常会结合一些MapReduce的思维去做时间，也就是基于不同的原子问题去做文档块的召回，并做不同的结果生成，最终再把所有的结果再进行汇总生成一个最终的结果。后续我们也会提到这块应用，尤其在Graph RAG里有很完备的应用示例可以学习。</p> <h2 id="522-检索结果重排">5.2.2 检索结果重排</h2> <p>重排是提升RAG检索效果里很重要的一步，也是目前实际应用中很广泛被采用的一种方式，主要有几种方式：</p> <ol> <li><strong>基于打分函数的传统重排方法</strong>：BM25，TF-IDF余弦相似度</li> <li><strong>语义匹配类重排方法</strong>：双塔结构（Bi-Encoder），交叉编码器（Cross-Encoder）</li> <li><strong>生成式重排方法</strong>：通过LLM进行评分和排序</li> </ol> <p>实际使用需要根据业务需求和所有的资源来决定，这边我们来看个例子，LangChain官方有一个<a href="https://python.langchain.com/docs/integrations/retrievers/flashrank-reranker/">FlashRank reranker</a>的例子，采用的是<a href="https://github.com/PrithivirajDamodaran/FlashRank">FlashRank</a>，主要支持Pointwise（单文档打分），Pairwise（双文档比较，看谁相关度更好）和Listwise（列表排序，一次对所有文档排序）两种方式</p> <p>下面是一个基础的RAG流程，对文档切分后建立embedding，然后在对问题做向量化后在里面检索出相似度最高的20条文档片段</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">langchain_community.document_loaders</span> <span class="kn">import</span> <span class="n">TextLoader</span>
<span class="kn">from</span> <span class="n">langchain_community.vectorstores</span> <span class="kn">import</span> <span class="n">FAISS</span>
<span class="kn">from</span> <span class="n">langchain_openai</span> <span class="kn">import</span> <span class="n">OpenAIEmbeddings</span>
<span class="kn">from</span> <span class="n">langchain_text_splitters</span> <span class="kn">import</span> <span class="n">RecursiveCharacterTextSplitter</span>

<span class="n">documents</span> <span class="o">=</span> <span class="nc">TextLoader</span><span class="p">(</span>
    <span class="sh">"</span><span class="s">../../how_to/state_of_the_union.txt</span><span class="sh">"</span><span class="p">,</span>
<span class="p">).</span><span class="nf">load</span><span class="p">()</span>
<span class="n">text_splitter</span> <span class="o">=</span> <span class="nc">RecursiveCharacterTextSplitter</span><span class="p">(</span><span class="n">chunk_size</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span> <span class="n">chunk_overlap</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">texts</span> <span class="o">=</span> <span class="n">text_splitter</span><span class="p">.</span><span class="nf">split_documents</span><span class="p">(</span><span class="n">documents</span><span class="p">)</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">text</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">texts</span><span class="p">):</span>
    <span class="n">text</span><span class="p">.</span><span class="n">metadata</span><span class="p">[</span><span class="sh">"</span><span class="s">id</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">idx</span>

<span class="n">embedding</span> <span class="o">=</span> <span class="nc">OpenAIEmbeddings</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">text-embedding-ada-002</span><span class="sh">"</span><span class="p">)</span>
<span class="n">retriever</span> <span class="o">=</span> <span class="n">FAISS</span><span class="p">.</span><span class="nf">from_documents</span><span class="p">(</span><span class="n">texts</span><span class="p">,</span> <span class="n">embedding</span><span class="p">).</span><span class="nf">as_retriever</span><span class="p">(</span><span class="n">search_kwargs</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">k</span><span class="sh">"</span><span class="p">:</span> <span class="mi">20</span><span class="p">})</span>

<span class="n">query</span> <span class="o">=</span> <span class="sh">"</span><span class="s">What did the president say about Ketanji Brown Jackson</span><span class="sh">"</span>
<span class="n">docs</span> <span class="o">=</span> <span class="n">retriever</span><span class="p">.</span><span class="nf">invoke</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="nf">pretty_print_docs</span><span class="p">(</span><span class="n">docs</span><span class="p">)</span>

</code></pre></div></div> <p>现在来应用一下FlashRank做重排，从前面读取<code class="language-plaintext highlighter-rouge">retriever</code>，构建<code class="language-plaintext highlighter-rouge">ContextualCompressionRetriever</code>，里面会使用<code class="language-plaintext highlighter-rouge">FlashrankRerank</code></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">langchain.retrievers</span> <span class="kn">import</span> <span class="n">ContextualCompressionRetriever</span>
<span class="kn">from</span> <span class="n">langchain_community.document_compressors</span> <span class="kn">import</span> <span class="n">FlashrankRerank</span>
<span class="kn">from</span> <span class="n">langchain_openai</span> <span class="kn">import</span> <span class="n">ChatOpenAI</span>

<span class="n">llm</span> <span class="o">=</span> <span class="nc">ChatOpenAI</span><span class="p">(</span><span class="n">temperature</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="n">compressor</span> <span class="o">=</span> <span class="nc">FlashrankRerank</span><span class="p">()</span>
<span class="n">compression_retriever</span> <span class="o">=</span> <span class="nc">ContextualCompressionRetriever</span><span class="p">(</span>
    <span class="n">base_compressor</span><span class="o">=</span><span class="n">compressor</span><span class="p">,</span> <span class="n">base_retriever</span><span class="o">=</span><span class="n">retriever</span>
<span class="p">)</span>

<span class="n">compressed_docs</span> <span class="o">=</span> <span class="n">compression_retriever</span><span class="p">.</span><span class="nf">invoke</span><span class="p">(</span>
    <span class="sh">"</span><span class="s">What did the president say about Ketanji Jackson Brown</span><span class="sh">"</span>
<span class="p">)</span>
<span class="nf">print</span><span class="p">([</span><span class="n">doc</span><span class="p">.</span><span class="n">metadata</span><span class="p">[</span><span class="sh">"</span><span class="s">id</span><span class="sh">"</span><span class="p">]</span> <span class="k">for</span> <span class="n">doc</span> <span class="ow">in</span> <span class="n">compressed_docs</span><span class="p">])</span>

</code></pre></div></div> <p>对比一下前后的效果：</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293257_10-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293257_10-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293257_10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293257_10.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <ul> <li>Document 1 -&gt; Document 1</li> <li>Document 4 -&gt; Document 2</li> <li>Document 6 -&gt; Document 3 经过重排后，获取到的Top 3文档不一样了</li> </ul> <h2 id="523-graph-rag">5.2.3 Graph RAG</h2> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293257_11-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293257_11-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293257_11-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293257_11.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p><a href="https://microsoft.github.io/graphrag/">Graph RAG</a>是微软在2024年推出的一种结构化、分层的检索增强生成（RAG）方法，相较于仅使用纯文本片段进行语义搜索的朴素方法，它更加系统和智能。GraphRAG 的处理流程包括：从原始文本中提取知识图谱、构建社区层级结构、为这些社区生成摘要，并在执行基于 RAG 的任务时充分利用这些结构化信息。下面我们会做一个比较详细的分析</p> <h3 id="索引阶段">索引阶段</h3> <p>看看架构图可以有个全局的认知</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-10-01-ce101-5-rag/1759293258_12-480.webp 480w,/assets/img/2025-10-01-ce101-5-rag/1759293258_12-800.webp 800w,/assets/img/2025-10-01-ce101-5-rag/1759293258_12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-10-01-ce101-5-rag/1759293258_12.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> </div> <p>我们来看看标准处理流程：</p> <ol> <li>文本处理 （Text Processing）</li> <li>文档处理（Document Processing）</li> <li>图提取（Graph Extraction）</li> <li>图增强（Graph Augmentation）</li> <li>声明提取（Claims Extraction）</li> <li>社区创建（Community Creation）</li> <li>文本单元最终化（(Final Text Units）</li> <li>社区报告生成（Community Reports）</li> <li>文本嵌入（Text Embeddings）</li> </ol> <h4 id="文本处理-text-processing">文本处理 （Text Processing）</h4> <p>主要接收多种数据输入，然后对输入的数据进行<strong>切分</strong>（支持按句子或者token进行切分），分块得到<strong>文本单元TextUnits</strong>。</p> <p>这步主要是为了<strong>方便后续的数据处理</strong>，因为后续的处理涉及多轮次的模型调用，以一个合理块大小的处理单元来处理，会更加方便且上下文不容超过，<strong>也适合并发调度处理</strong>。</p> <h4 id="文档处理document-processing">文档处理（Document Processing）</h4> <p>将文本处理阶段处理出来的TextUnits与原始文档建立引用关系，形成一个<strong>结构化的数据表</strong>，用于后续一些操作：</p> <ul> <li>跟踪每个文档包含哪些chunk</li> <li>后续社区摘要、图构建等流程中使用</li> <li>统一文档展示和可视化索引</li> </ul> <h4 id="图提取graph-extraction">图提取（Graph Extraction）</h4> <p>会包含几个阶段：</p> <ol> <li><strong>实体（Entity）</strong>和<strong>关系（Relationship）</strong>提取</li> <li>图数据进行摘要简化（Graph Summrization）</li> </ol> <p>首先会让大语言模型提取文本里的<strong>实体（Entity）</strong>，以及不同实体间的<strong>关系（Relationship）</strong>，还会附带<strong>关系强弱的评分</strong>用于<strong>计算实体间的关系权重</strong>。</p> <p>这期间会在内存中做一定的合并和更新。比如实体和关系的描述，持续的更新会导致描述膨胀，这种情况下需要再进行一步图摘要，也就是让模型再次帮忙将实体和关系里的描述做总结为单一简介描述</p> <h4 id="图增强graph-augmentation">图增强（Graph Augmentation）</h4> <p>图增强里主要是图<strong>最终化</strong>，也就是将初步提取出来的图数据（实体节点和关系边），经过清洗、加工、标准化并准备好用于下游使用的过程。因为这是图构建的最后阶段：</p> <ul> <li>之前：只有基础的实体名称、描述、关系</li> <li>之后：实体具备了向量表示、空间坐标、网络属性等完整特征</li> </ul> <p>简单说就是： <strong>初步提取的基础数据 -&gt; 可用于可视化、推理、检索和分析的结构化图</strong></p> <p>在对实体最终化流程中，会有这么一些操作和步骤：</p> <ul> <li>根据配置决定是否创建向量（embedding）</li> <li>根据配置决定是否对图做UMAP或其他布局（layout）方法，生成2D/3D坐标用于可视化</li> <li>计算每个实体节点的度数（degree），用于后续分析或排序</li> <li>合并、移除重复、预填充缺失字段、生成唯一id等等</li> </ul> <blockquote> <p>UMAP（Uniform Manifold Approximation and Projection）中文名为统一流形近似与投影算法，是一种非线性降维算法，可以用于把高维数据（比如向量嵌入embedding）映射到二维或三维空间，用于方便可视化或聚类分析。简单说就是： UMAP 是一种可以把高维“云雾向量”压缩成漂亮二维坐标点的方法，保留结构、方便展示和聚类</p> </blockquote> <p>关于实体节点的<strong>度数（degree）</strong>，其实是每个节点连接的边的数量，比如：</p> <ul> <li>Leo –写–&gt; 书</li> <li>Leo –开发–&gt; 应用</li> </ul> <p>那么Leo这个节点就有两条边，它的degree就是2。那为什么要算degree呢？因为在图分析/图机器学习中，degree是一个很有用的特征值，比如：</p> <ul> <li>找到重要节点：高度数可能表示实体在图中很核心</li> <li>控制布局：在图布局中（比如UMAP或Force-directed），高 degree 节点更可能在中心。</li> <li>下游模型特征：在图神经网络中，degree 是常用的节点特征之一</li> <li>图过滤：有时我们只保留degree&gt;=2的节点，忽略孤立点（degree=0）。</li> </ul> <h4 id="声明提取claims-extraction">声明提取（Claims Extraction）</h4> <p>Graph RAG里面是叫做<strong>共变量（Covariates）提取任务</strong>，一个道理，就是从文本单元里提取声明（Claims）的过程，并将其转换为结构化数据，供后续图构建或社区摘要使用。</p> <p>操作主要是让<strong>模型针对文本单元里的内容进行声明提取</strong>，Prompt里会包括实体、想找的主张，需要分析的原始内容，最终模型会输出声明主体、涉及对象、声明类型、声明状态（对/错/存疑）、时间范围、描述说明、原始文本这些信息。</p> <h4 id="社区创建community-creation">社区创建（Community Creation）</h4> <p>这里会借助Leiden算法将节点进行<strong>社区化</strong>，简单说就是<strong>把相似、相关的阶段放到统一个社区</strong>。社区是指内部连接多，外部连接少的一组节点，类比班级，一个班级内部的同学联系较为紧密，而不同的班级之间的联系相对就少一点，这里班级就是一个社区的概念。另外同一个班级之下还可以分兴趣小组，这样就出现了分层级的社区，也就是某个社区有可能归属于某个父社区。Leiden算法整体就是在做这么一件事情，我们不展开算法的细节，有兴趣的可以自行了解。</p> <p>通过构建，最终是可以得到一个这种结构的数据</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">level</span><span class="p">,</span> <span class="n">cluster_id</span><span class="p">,</span> <span class="n">parent_cluster_id</span><span class="p">,</span> <span class="p">[</span><span class="n">node_ids</span><span class="p">])</span>
</code></pre></div></div> <p>示例数据</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span>
  <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">C</span><span class="sh">'</span><span class="p">]),</span>  <span class="c1"># 一级社区，ID=1，父节点=-1（说明是顶层），含有节点A/B/C
</span>  <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">]),</span>        <span class="c1"># 二级社区，ID=2，父节点是1，细分A/B
</span><span class="p">]</span>
</code></pre></div></div> <p>最终再通过一定的操作来<strong>整理聚合社区</strong>，只保留每个社区里实体和社区内实体间关系信息，社区之间的关系被忽略，这样最终就得到一份社区数据了，会存放到数据库里，类似</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">id</span><span class="p">,</span><span class="n">human_readable_id</span><span class="p">,</span><span class="n">community</span><span class="p">,</span><span class="n">parent</span><span class="p">,</span><span class="n">children</span><span class="p">,</span><span class="n">entity_ids</span><span class="p">,</span><span class="n">relationship_ids</span><span class="p">,</span><span class="n">text_unit_ids</span><span class="p">,</span><span class="n">level</span><span class="p">,</span><span class="n">title</span><span class="p">,</span><span class="n">period</span><span class="p">,</span><span class="n">size</span>
<span class="mf">1e2</span><span class="n">f3a00</span><span class="o">-</span><span class="n">aaaa</span><span class="o">-</span><span class="mi">1111</span><span class="o">-</span><span class="n">bbbb</span><span class="o">-</span><span class="mi">000000000001</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="sh">"</span><span class="s">[]</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">[</span><span class="sh">'</span><span class="s">e1</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="s">e2</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="s">e3</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">[</span><span class="sh">'</span><span class="s">r1</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="s">r2</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">[</span><span class="sh">'</span><span class="s">t1</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="s">t2</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="s">t3</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">Community</span> <span class="mi">0</span><span class="p">,</span><span class="mi">2025</span><span class="o">-</span><span class="mi">07</span><span class="o">-</span><span class="mi">25</span><span class="p">,</span><span class="mi">3</span>
<span class="mi">4</span><span class="n">a6b7c00</span><span class="o">-</span><span class="n">bbbb</span><span class="o">-</span><span class="mi">2222</span><span class="o">-</span><span class="n">cccc</span><span class="o">-</span><span class="mi">000000000002</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="sh">"</span><span class="s">[]</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">[</span><span class="sh">'</span><span class="s">e4</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="s">e5</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">[</span><span class="sh">'</span><span class="s">r3</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">[</span><span class="sh">'</span><span class="s">t4</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="s">t5</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">Community</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2025</span><span class="o">-</span><span class="mi">07</span><span class="o">-</span><span class="mi">25</span><span class="p">,</span><span class="mi">2</span>
</code></pre></div></div> <h4 id="文本单元最终化final-text-units">文本单元最终化（(Final Text Units）</h4> <p>这一步主要是针对前面的几个步骤产生的<strong>中间数据做最终的聚合关联</strong>，也就是将文本单元（TextUnits）与实体（Entities）、关系（Relationships）和声明共变量（Covariates）。关联之后文本单元就拥有了实体id列表、关系列表、声明列表。</p> <p>大概数据如下：</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">{</span>
      <span class="sh">"</span><span class="s">id</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">text_unit_001</span><span class="sh">"</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">short_id</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">text</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Apple Inc. is headquartered in Cupertino...</span><span class="sh">"</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">n_tokens</span><span class="sh">"</span><span class="p">:</span> <span class="mi">127</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">document_ids</span><span class="sh">"</span><span class="p">:</span> <span class="p">[</span><span class="sh">"</span><span class="s">doc_001</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">doc_002</span><span class="sh">"</span><span class="p">],</span>
      <span class="sh">"</span><span class="s">entity_ids</span><span class="sh">"</span><span class="p">:</span> <span class="p">[</span><span class="sh">"</span><span class="s">entity_apple</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">entity_cupertino</span><span class="sh">"</span><span class="p">],</span>      <span class="c1"># ⭐ 图数据关联
</span>      <span class="sh">"</span><span class="s">relationship_ids</span><span class="sh">"</span><span class="p">:</span> <span class="p">[</span><span class="sh">"</span><span class="s">rel_001</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">rel_002</span><span class="sh">"</span><span class="p">],</span>              <span class="c1"># ⭐ 图数据关联
</span>      <span class="sh">"</span><span class="s">covariate_ids</span><span class="sh">"</span><span class="p">:</span> <span class="p">[</span><span class="sh">"</span><span class="s">claim_001</span><span class="sh">"</span><span class="p">]</span>                           <span class="c1"># ⭐ 声明数据关联
</span>  <span class="p">}</span>
</code></pre></div></div> <p>这步的目的是为每个文本单元添加结构化语义（实体、关系、属性），为后续图创建和问答系统打下基础。</p> <h4 id="社区报告生成community-reports">社区报告生成（Community Reports）</h4> <p>这步核心目的是基于实体（Entities）、关系（Relationships）、社区（Communities）和声明（Claims），构建每个社区的<strong>摘要性报告</strong>。</p> <p>核心的处理步骤有：</p> <ul> <li>社区展开：将社区结构展开</li> <li>数据准备：预处理实体、关系和声明数据</li> <li>上下文创建：为每个社区构建上下文</li> <li>摘要生成：生成社区报告</li> </ul> <p>首先就是将原本的社区记录（一条记录是一个社区，包含多个实体和关系）展开，然后合并到实体里，这样实体里就包含了所属社区、层级这些信息了。</p> <p>然后就是针对实体、关系和声明做相应的结构化数据准备，补充一些缺失的描述，为后续构建Prompt做准备。</p> <p>接下去是针对每个社区构建一份<strong>本地上下文（Local Context）</strong>。首先会遍历社区的所有层级（从高到低，这边可以理解一层都有不同的社区，上层的社区下会继续划分子社区，所以是一个嵌套关系的），对每个社区聚合实体、边、声明，然后将结构化的社区上下文变成模型可读的Prompt，再发送给模型进行摘要。</p> <p>摘要生成主要是读取前一步产生的社区上下文信息，调用大语言模型去生成文字摘要。期间会有一些车略，比如处理上下超限的情况，会尝试用子社区报告替换本地上下文，如果无法替换则进行修剪本地上下文以适应限制。</p> <p>样例数据：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-----Reports-----
community_id,full_content
1,"Community 1 consists of software development entities focused on healthcare applications..."

-----Entities-----
id,entity,description,degree
5,MICROSOFT,Microsoft is a technology company,15
12,AZURE CLOUD,Azure is Microsoft's cloud computing platform,8
23,HEALTHCARE APP,A healthcare application developed by Microsoft,3

-----Relationships-----
id,source,target,description,degree
101,MICROSOFT,AZURE CLOUD,Microsoft owns and operates Azure Cloud platform,12
102,AZURE CLOUD,HEALTHCARE APP,Healthcare app is deployed on Azure Cloud,6

-----Claims-----
id,subject,type,status,description
201,MICROSOFT,CLAIM,CONFIRMED,Microsoft has strong presence in healthcare technology
202,HEALTHCARE APP,CLAIM,SUSPECTED,The app may have compliance issues
</code></pre></div></div> <h4 id="文本嵌入text-embeddings">文本嵌入（Text Embeddings）</h4> <p>这步是最后的环节了，用于为前面产生的各种文本内容生成对应的<strong>向量表示</strong>，用于后续检索阶段的语义搜索和向量检索。主要包括：</p> <ul> <li>完整文档内容</li> <li>实体标题和描述</li> <li>关系描述</li> <li>文本单元</li> <li>社区标题和摘要</li> <li>社区完整报告内容</li> </ul> <h3 id="检索阶段">检索阶段</h3> <p>Graph RAG针对不同的使用场景，提供了4种查询方法：</p> <ol> <li><strong>全局搜索（Global Search）</strong>：面向社区报告级别的全局搜索，适合高层知识查找</li> <li><strong>本地搜索（Local Search）</strong>：走了图和文本搜索，同时融合实体、关系、文本等细粒度搜索</li> <li><strong>动态推理搜索（DRIFT Search）</strong>：和本地搜索类似，但是引入了embedding对齐</li> <li><strong>基础搜索（Basic Search）</strong>：走了文本级别的搜索，是最轻量的文本向量语义检索</li> </ol> <h4 id="全局搜索global-search"><strong>全局搜索（Global Search）</strong></h4> <p>主要<strong>基于社区（Community）和其报告（Reports）进行粗粒度搜索</strong>。走的是Map Reduce的方式，也就是将社区报告拆成多个文本块（chunks），每个文本块分别发送给大语言模型做分析，会生成类似下面格式的内容</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>points,
        description
    ]
}}
</code></pre></div></div> <p>这里包括的是对应社区报告的摘要，精炼的内容描述和对应的重要性得分，评分会决定该观点是否值得被纳入最终的Reduce阶段。Reduce阶段只会过滤出score大于0的结果，并且对结果进行排序，使得较为重要的观点排在前面，最终会展现出类似这样的形式：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>----Analyst 1----
Importance Score: 90
某个摘要句子...

----Analyst 2----
Importance Score: 88
另一个摘要句子...
</code></pre></div></div> <p>表现出不同的“分析员”（Analyst）的分析情况，然后把这份汇总的结果再次发送到大语言模型，将多个“分析员”的观点汇总成一个连贯、有逻辑且可读性较强的最终答案。输入的prompt片段类似：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---Target response length and format---

Multi-paragraph explanation with markdown headings

---Analyst Reports---

----Analyst 1----
Importance Score: 95
Company A violated environmental regulations in 2021 and was fined [Data: Reports (3, 6, 7)].

----Analyst 2----
Importance Score: 82
Whistleblowers from 2020 also claimed unsafe disposal methods by Company A [Data: Reports (12, 15, 19, 22, 26, +more)].
</code></pre></div></div> <p>最终输出的类似：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Environmental Violations of Company A

Company A was found guilty of violating environmental regulations in 2021, resulting in multiple fines [Data: Reports (3, 6, 7)].

In addition, whistleblower reports from 2020 suggested unsafe disposal practices, further highlighting the company's failure in compliance [Data: Reports (12, 15, 19, 22, 26, +more)].
</code></pre></div></div> <h4 id="本地搜索local-search"><strong>本地搜索（Local Search）</strong></h4> <p>本地搜索会利用<strong>向量搜索</strong>去检索出<strong>合适的实体（Entities）</strong>，然后给予这个实体去构建对应的上下文，其中涉及到了以下的数据：</p> <ul> <li>实体</li> <li>关系</li> <li>文本单元</li> <li>社区摘要</li> <li>声明</li> </ul> <p>其中实体是通过向量化搜索得到的，社区则是通过排序后选出topK个社区摘要，其他的则是通过对应实体去检索。最终会将上面的这些数据构建成单个上下文（不像全局搜索用chunk的形式）。然后将这个上下文结合预设的Prompt一起发送到大语言模型生成结果。</p> <p>示例输入片段：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---Role---

You are a helpful assistant responding to questions about data in the tables provided.

...

---Target response length and format---

multi-paragraph summary

---Data tables---

Entities Table:
1. John Smith - CEO
2. ...
</code></pre></div></div> <p>输出示例：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Key Individuals

John Smith is listed as CEO of Company A [Data: Entities (1)].

...

## Summary

These findings suggest ...
</code></pre></div></div> <h4 id="动态推理搜索drift-search"><strong>动态推理搜索（DRIFT Search）</strong></h4> <p>动态推理搜索（DRIFT Search，Dynamic Reasoning and Inference with Flexible Traversal）是最复杂也最智能的一种检索方式，它结合了推理驱动的层次搜索、查询拆分（Primer）、多步骤搜索和最终答案的合并（Reduce）。</p> <p>首先DRIFT会随机从社区报告里取一个<strong>全量文本</strong>出来，然后将输入的内容与随机取出的社区报告（作为模板）给到大语言模型去做相应的<strong>虚拟答案（Hypothetical Answer）</strong>生成，相应的Prompt是这样的：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Create a hypothetical answer to the following query: {query}

Format it to follow the structure of the template below:

{template}

Ensure that the hypothetical answer does not reference new named entities that are not present in the original query.
</code></pre></div></div> <p>然后将虚拟的答案转成向量，通过计算余弦相似度（Sosine Similarity），可以得到虚拟答案和所有文档的相似度，取出topK社区报告。</p> <p>然后基于Primer做将topK社区报告进行分片，并发调用LLM对每一份报告进行子问题生成（Query Decomposition）。我们来看看其Prompt模板：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You are a helpful agent designed to reason over a knowledge graph in response to a user query.
This is a unique knowledge graph where edges are freeform text rather than verb operators. You will begin your reasoning looking at a summary of the content of the most relevant communites and will provide:

1. score: How well the intermediate answer addresses the query. A score of 0 indicates a poor, unfocused answer, while a score of 100 indicates a highly focused, relevant answer that addresses the query in its entirety.

2. intermediate_answer: This answer should match the level of detail and length found in the community summaries. The intermediate answer should be exactly 2000 characters long. This must be formatted in markdown and must begin with a header that explains how the following text is related to the query.

3. follow_up_queries: A list of follow-up queries that could be asked to further explore the topic. These should be formatted as a list of strings. Generate at least five good follow-up queries.

Use this information to help you decide whether or not you need more information about the entities mentioned in the report. You may also use your general knowledge to think of entities which may help enrich your answer.

You will also provide a full answer from the content you have available. Use the data provided to generate follow-up queries to help refine your search. Do not ask compound questions, for example: "What is the market cap of Apple and Microsoft?". Use your knowledge of the entity distribution to focus on entity types that will be useful for searching a broad area of the knowledge graph.

For the query:

{query}

The top-ranked community summaries:

{community_reports}

Provide the intermediate answer, and all scores in JSON format following:

intermediate_answer

Begin:
</code></pre></div></div> <p>这里的Prompt要求LLM以类人类推理者而不是抽象逻辑机器来推理，其作用是结合用户query与社区总结（community reports），引导LLM推理出一个中间答案（intermediate answer）和一组后续子查询（follow-up queries）</p> <p>输出示例：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "intermediate_answer": "## Challenges Faced by EV Companies in 2024\n\nElectric vehicle companies encountered several critical challenges in...",
  "score": 91,
  "follow_up_queries": [
    "How are EV companies addressing battery material shortages?",
    "What trade policies are affecting Chinese EV exports?",
    "What steps is Tesla taking to resolve labor disputes in Berlin?",
    "How are legacy automakers improving their software capabilities?",
    "What impact do rising raw material costs have on EV pricing in 2024?"
  ]
}
</code></pre></div></div> <p>最终这个环节得到的是以虚拟答案检索出来的topK社区报告为语境种子，去生成对应的中间答案和子查询列表以及对应的评分。最后就是将所有的中间答案拼接起来，评分取平均数，子查询问题合并。</p> <p>接下去进入到循环执行动作（Action）的步骤了，会持续从当前状态中挑出尚未处理的动作（只保留top-k最重要的动作），每个动作进行搜索，这里的检索走的是本地搜索（Local Search），也就是针对query走图和文本搜索。这边还会控制最大深度，避免深度爆炸。</p> <p>最后将所有的结果进行聚合（Reduce），会将前面所有Action最终的回答拼接让模型帮忙汇总出最终答案</p> <h4 id="基础搜索basic-search"><strong>基础搜索（Basic Search）</strong></h4> <p>基础搜索的话只会将问题基于文本单元做<strong>向量检索</strong>，得到topK结果，然后到大语言模型进行生成。相对简单的一个检索。</p> <p>示例输入：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>source_id|text
12|John Smith is the CEO of QuantumTech and has faced several allegations of insider trading.
34|QuantumTech has been under investigation by the SEC since 2022.
46|Multiple anonymous reports accuse John Smith of misusing company resources.
51|John Smith was previously CEO at FutureCorp, where a similar scandal occurred.
55|Internal emails obtained by regulators suggest conflicts of interest involving John Smith.
</code></pre></div></div> <p>示例输出：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---Target response length and format---

multiple paragraphs

---Data tables---

source_id|text
12|John Smith is the CEO of QuantumTech and has faced several allegations of insider trading.
34|QuantumTech has been under investigation by the SEC since 2022.
46|Multiple anonymous reports accuse John Smith of misusing company resources.
51|John Smith was previously CEO at FutureCorp, where a similar scandal occurred.
55|Internal emails obtained by regulators suggest conflicts of interest involving John Smith.
</code></pre></div></div> <h3 id="总结">总结</h3> <p>我们花了很长的篇幅来深入GraphRAG，是因为我觉得里面应用了很多相关技术实现，从最基础的向量化检索，到采用了图做结合，甚至里面也融合了多跳RAG或者说多跳推理的技术，还利用了HyDE（Hypothetical Response）的思想。因此非常值得深入了解和学习。</p> <p>总体而言Graph RAG通过将非结构化文本转化为图结构表示，突破了传统 RAG 仅依赖向量检索的局限性。它采用分阶段处理流程，从文本中提取实体与关系，构建社区结构与摘要信息，并融合图结构与向量嵌入，实现多种检索模式的协同支持。</p> <p>在复杂上下文与多样应用场景中，GraphRAG 提供了一个强有力的实践范式。尽管本质上仍受限于语言模型的上下文窗口，但它通过算法、工程与架构手段最大化信息利用效率，将原本偏单跳的 RAG 推进到更具多跳推理能力的方向。其核心目标始终是：<strong>获取最相关、最有用的上下文以支持更好的生成结果。</strong></p> <p>RAG这部分内容非常多，目前也只是走马观花式的覆盖了一部分内容，包括AgenticRAG在内的一些方式还没有展开篇幅去讲，但是我觉得整个篇幅的内容已经足够支撑每一位读者去开启RAG探索之路了。除了技术探索和学术研究以外，在Applied AI中，我们会更加关注实际的业务和需求，始终以此作为导向，利用技术去创造更多的商业价值，才是有意义的事情，因此技术不是目的而是手段，当我们遇到一个无法解决的问题时，或许应该再去看看业界有什么新的方法，如果刚好没有，就是创造这个新的方法的时候。</p> <p>那么我们就继续往下走，来看看工具之于上下文工程的意义和用法</p>]]></content><author><name></name></author><category term="AI"/><category term="AI"/><category term="Book"/><category term="CE101"/><summary type="html"><![CDATA[5.1 RAG基础与原理]]></summary></entry></feed>
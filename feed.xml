<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ifuryst.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ifuryst.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-04-06T15:29:07+00:00</updated><id>https://ifuryst.github.io/feed.xml</id><title type="html">ifuryst</title><subtitle>📝 &amp; 💭 </subtitle><entry><title type="html">【Iter-X】 48/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-48-100/" rel="alternate" type="text/html" title="【Iter-X】 48/100days"/><published>2025-04-05T15:59:59+00:00</published><updated>2025-04-05T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-48-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-48-100/"><![CDATA[<p>Day4️⃣8️⃣</p> <p>今天show一下小样（这里不好放视频~），已经走到创建行程这步了，明天再把之前的行程页面集成进来，可以初步有一个小版本了。这两天忙死了，不过很充实，这两天重度使用了一些AI产品，感觉很棒，后续有机会再分享一下</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：33%</li> <li>后端（Go）开发：40%</li> <li>客户端（flutter）进度：33%</li> <li>数据：10%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣8️⃣]]></summary></entry><entry><title type="html">【Iter-X】 47/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-47-100/" rel="alternate" type="text/html" title="【Iter-X】 47/100days"/><published>2025-04-04T15:59:59+00:00</published><updated>2025-04-04T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-47-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-47-100/"><![CDATA[<p>Day4️⃣7️⃣</p> <p>这两天以4o为主的众多图片、视频模型的火热，很有意思。我承认我也被4o经验了，我觉得现在4o还有很多方面没办法做到comfyui+sd的解决方案，但是我觉得绝大部分场景他就是最佳解决方案，因为门槛太低了，我觉得很多人忽略了这点，这是产品能否触及普通人的一个非常非常重要的点。一定要摒弃那种这没什么，***早就能做到的那种想法，抛弃自己的自大和自以为是，一定要深刻的去感受和思考市场和人们的反应。一个产品不一定要追求最为前沿的技术就能取得很大的成功，历史上已经有数不胜数的公司和产品证明了，我们可以思考为什么一大群人狂欢，设计群体恐慌和生气，为什么OpenAI的服务器再一次扛不住压力，这些背后都有很深刻的原因。</p> <p>借着这个节奏分享一下未来的创业团队，我之前应该也有简单提过一点，我相信未来的团队一定小而精的，只需要几个重要岗位：</p> <ol> <li>研发人员：如果有人说没有任何研发背景的可以取代这个角色我非常不信，Vibe Programing是存在的，但是不能取代一切，当然你可以在你一个MVP能推销出去的时候去融资招人，但是本质上你依然要有一个在认知层面厉害且高效的研发。以我个人来说，现在我小半天就可以做好几个Feature，这个在以前是不敢想的，手撸一个Feat需要1h，但是Review且小调整一个Feat可能只需要10min，这其中的生产效率之差显而易见。</li> <li>产品：优秀的产品设计是AI目前不能全面取代的，或许也是碳基生物的这种主观非理性和现实世界接触产生的一种化学反应的东西，当然其中包括一些行业内的经验积累，我觉得一个好的Idea，一个好的产品方向是成功的基础。人人皆可产品经理完全没有错，但是垃圾的产品很多也没有错。</li> <li>设计师：一定要有设计，AI能做很多事情，但是不能Cover一切，最好的是要有自己的风格，借助AI去赋能，我其实觉得设计反而在未来是很重要的一个角色，虽然现在很多人担心被AI取代，我觉得这个也是趋势，和AI取代研发人员一样，但是有一些更高维度的东西是人类设计师的护城河</li> <li>运营人员：产品需要持续的运营，运营很重要的一点就是要有风格，能知道各种运营手法，我们可以让AI帮忙很多运营的物料，但是实际的实施仍然需要有足够认知的人，以及有经验的人来实施</li> <li>商业增长：这块是很重要的，AI很难帮你去做商业，至多帮你写BP，他没办法帮你去找投资人，没办法帮你路演，没办法把你结合实际的情况去思考商业增长。我反而觉得商业这块是AI目前比较难以大面积影响的领域。</li> </ol> <p>或许未来的团队只需要5个“超人”，如果你发现你的团队里的人不会用AI，或许你可能要当心了。当然我不反对Old School，我觉得可以是一个情怀❤️</p> <p>我还是很喜欢我一直以来的关键点，AI不能帮你坚持，不能帮你总是满怀热情，能阻止你前进的只有你的心和舒服的沙发😇</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：33%</li> <li>后端（Go）开发：39%</li> <li>客户端（flutter）进度：30%</li> <li>数据：10%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣7️⃣]]></summary></entry><entry><title type="html">【Iter-X】 46/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-46-100/" rel="alternate" type="text/html" title="【Iter-X】 46/100days"/><published>2025-04-03T15:59:59+00:00</published><updated>2025-04-03T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-46-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-46-100/"><![CDATA[<p>Day4️⃣6️⃣</p> <p>把AI再调整了一下，我打算利用Function Call的函数调用的JSON返回来得到稳定的JSON结构化返回，等于是用一个实际上不存在的或者不需要执行的Tool来欺骗AI。本来常规的做法是用Prompt来要求其返回，这种情况似乎也没办法保证100%的稳定JSON输出。然后进一步把Agent拆得更原子化一点，基本上现在一个Agent能完成的工作就是比较单一的，这样其实是可以不断复用Agent的功能，比如现在分为CityPlanner和TripPlanner，这样其实在目的城市未知的情况下是可以增加让AI去规划城市，最后再进一步去规划行程。这两天会集中把整个行程模块打通，这样核心功能就可以出来。100天已经过去快一半了，好快，我觉得100天这种连续输出的强度确实挺大的，主要是一个每日进度的问题，有时候其实一天并没有一个比较明显的进度体现，公众又多是视觉动物，我也不太希望去刨一些细节的东西，那样更加枯燥，只能有时候夹带一些资讯、想法等等，或许以后如果我再次BuildInPublic的话，我会考虑阶段性的分享，而不是每日这种频次，我不希望让内容流水账化，希望能有更好的内容的时候再去递送。</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：33%</li> <li>后端（Go）开发：36%</li> <li>客户端（flutter）进度：25%</li> <li>数据：10%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣6️⃣]]></summary></entry><entry><title type="html">【Iter-X】 45/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-45-100/" rel="alternate" type="text/html" title="【Iter-X】 45/100days"/><published>2025-04-02T15:59:59+00:00</published><updated>2025-04-02T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-45-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-45-100/"><![CDATA[<p>Day4️⃣5️⃣</p> <div class="row mt-3"> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-02-iter-x-45-100/MainTripPage-480.webp 480w,/assets/img/2025-04-02-iter-x-45-100/MainTripPage-800.webp 800w,/assets/img/2025-04-02-iter-x-45-100/MainTripPage-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-02-iter-x-45-100/MainTripPage.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-02-iter-x-45-100/MainTripPage2-480.webp 480w,/assets/img/2025-04-02-iter-x-45-100/MainTripPage2-800.webp 800w,/assets/img/2025-04-02-iter-x-45-100/MainTripPage2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-02-iter-x-45-100/MainTripPage2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-02-iter-x-45-100/MinePageSkeleton-480.webp 480w,/assets/img/2025-04-02-iter-x-45-100/MinePageSkeleton-800.webp 800w,/assets/img/2025-04-02-iter-x-45-100/MinePageSkeleton-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-02-iter-x-45-100/MinePageSkeleton.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-02-iter-x-45-100/MinePage-480.webp 480w,/assets/img/2025-04-02-iter-x-45-100/MinePage-800.webp 800w,/assets/img/2025-04-02-iter-x-45-100/MinePage-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-02-iter-x-45-100/MinePage.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> <div class="caption mt-0"> Main Trip Page &amp; Mine Page </div> <p>还在继续出页面，这周想要把行程的打通，看看清明有没有出门，如果没有的话应该是可以搞完的。这两天进度还是可以的，下周我会重新评估一下整体的进度，这些进度基本是拍脑袋推进的，不是很线性切割实际的进度，我觉得这个可能也是项目管理里的一个难题。如果有明确的roadmap，能拆分较明确的需求出来，那进度是可以比较明确且可控的，否则就很难正常丝滑的推进项目。目前我们其实还是混沌状态，一切都是野蛮生长，这一切就比较严重的缺失，倒是可以适当引入一线可视化的看板来奔MVP的，不过因为协作比较松散，其实还挺难把行业内的一些项目管理应用进来，这块其实还挺矛盾的，后面有可能是需要思考学习一下的，目的不是增加繁琐的东西，而是为了让每位伙伴都能明确的感知到目前项目的进展，哪里卡点了，自己所处的位置，其他人在哪些方面推进，这些是有意义的。</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：33%</li> <li>后端（Go）开发：34%</li> <li>客户端（flutter）进度：23%</li> <li>数据：10%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊（我们需要一个UI设计小伙伴👾）：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣5️⃣]]></summary></entry><entry><title type="html">【Iter-X】 44/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-44-100/" rel="alternate" type="text/html" title="【Iter-X】 44/100days"/><published>2025-04-01T15:59:59+00:00</published><updated>2025-04-01T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-44-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-44-100/"><![CDATA[<p>Day4️⃣4️⃣</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-iter-x-44-100/cursor-480.webp 480w,/assets/img/2025-04-01-iter-x-44-100/cursor-800.webp 800w,/assets/img/2025-04-01-iter-x-44-100/cursor-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-iter-x-44-100/cursor.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> POI </div> <p>今天我们的POI数据有了比较大的进展，新加入的小伙伴很给力，跑通了数据源，处理了很多POI数据，3天后等另外一位正在外面旅游的小伙伴回来后我们会对一下ETL的逻辑，就可以进一步安排数据清洗了。</p> <p>我今天其实沉迷在n8n的workflow编排上，我有一些事可以利用n8n去做一些编排，进一步提升我的效率和生产力，我觉得投入一定的时间去处理是值得的，比如我写的文章，可以方便的通过一些编排和自定义 的节点去快速的递送到不同的平台。另外就是信息的聚合和降维，我现在每天摄取的信息有一点多了，我需要做一定的聚合，减少一些重复性的新闻，这样我可以有更多时间去阅读那种有深度的文章，广+精是一个很好的策略，保持对最新趋势跟踪的同时也能看一些有趣的东西、想法。后面有机会可以分享一下</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-iter-x-44-100/poi-480.webp 480w,/assets/img/2025-04-01-iter-x-44-100/poi-800.webp 800w,/assets/img/2025-04-01-iter-x-44-100/poi-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-iter-x-44-100/poi.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Cursor </div> <p>今天看到Anysphere也就是做Cursor的那家Startup，他们预计未来12个月通过订阅可以获得2亿美元的年经常性收入（ARR，Annual Recurring Revenue），最近他们也在谈新一轮的融资，预估能达到100亿美元的估值。这家公司目前只有50个人，非常厉害，得益于早起在开发圈子的热门，以及Product Hunt 2024年度得主，去年以来持续流行，对比2024年3月的净收入留存率（Net Revenue Retention Rate，NRR）达到恐怖的250%，怎么理解这个数字？可以理解老客户不仅持续付费，而且还付得更多了，也就是原本一个人贡献1美元，现在贡献了2.5美元。我们常见的留存率能达到115%的水平已经是非常好的，因为这表现为现有客户能持续带来稳定的收入增长，因此反观Cursor的留存率就知道有多恐怖了。我一点也不意外，因为就我个人而言Cursor已经超越老牌的IDE了，就好像是新时代的产品，而JetBrains家的产品似乎止步不前了。最近我已经在大量利用在仓库里编写SOP手册和一些培训文档来给Cursor在每次开启新任务前查看，带来的效果尤其惊人，今天有个小伙伴被我带上车后直呼内行，一天无心上班都在看AI思考工作。后面有机会可以分享一下这个，我觉得现在几种人，一种是完全不用或者不知道用，一种是用一下大骂难用，一种是用了直呼好用，我是坚定的最后者，如果你是前两者，你真的应该考虑catchup一下，因为你很快会发现你已经被很多人抛下了，如果你觉得不好用，一定要尝试看看是不是哪里用错了，或者对AI的水平有了错估，导致结果错配进而否认，不要让简单的偏见阻碍你学习和掌握新的事物</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：33%</li> <li>后端（Go）开发：34%</li> <li>客户端（flutter）进度：21%</li> <li>数据：10%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊（我们需要一个UI设计小伙伴👾）：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣4️⃣]]></summary></entry><entry><title type="html">MCP自定义传输协议</title><link href="https://ifuryst.github.io/blog/2025/mcp-custom-transport-protocol/" rel="alternate" type="text/html" title="MCP自定义传输协议"/><published>2025-04-01T15:59:59+00:00</published><updated>2025-04-01T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/mcp-custom-transport-protocol</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/mcp-custom-transport-protocol/"><![CDATA[<p>去年出的MCP，最近开始火起来，大体可以理解是Anthropic制定的一个Function Call的统一开放协议，各方都可以根据这个协议去实现MCP Server，根据协议实现的MCP Client可以任意去调用对应的MCP Server。这个目的旨在解决各个厂商之间实现的细节差异导致无法复用成果的问题。</p> <h2 id="规范">规范</h2> <p>https://spec.modelcontextprotocol.io/specification/2025-03-26/</p> <blockquote> <p><a href="https://modelcontextprotocol.io/">Model Context Protocol</a> (MCP) is an open protocol that enables seamless integration between LLM applications and external data sources and tools. Whether you’re building an AI-powered IDE, enhancing a chat interface, or creating custom AI workflows, MCP provides a standardized way to connect LLMs with the context they need.</p> </blockquote> <p>看下这段官方的介绍，本质上MCP就是连接LLMs应用和外部数据工具等，从虚拟世界到现实世界都是可以集成进来的。</p> <h2 id="技术细节">技术细节</h2> <p><a href="https://modelcontextprotocol.io/docs/concepts/architecture">https://modelcontextprotocol.io/docs/concepts/architecture</a></p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp1-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp1-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>先看架构图，其实我们只需要关注2个东西，Client和Server即可</p> <h3 id="通信协议">通信协议</h3> <p>目前有2种：</p> <ol> <li>STDIO: 客户端会直接通过配置里的命令拉起服务端，然后后续通过STDIO输入输出去交互，重Client</li> <li>HTTP with SSE: 客户端通过HTTP与服务端进行交互</li> </ol> <h3 id="stdio">STDIO</h3> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp2-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp2-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>这个很好理解，就是MCP Client会通过配置去拉起对应的MCP Server，然后拿到STDIN, STDOUT, STDERR，后续通过STDIN传递命令，另外两个获取结果和错误信息，通过这样的方式进行调用</p> <h3 id="http--ssedeprecated">HTTP + SSE（Deprecated）</h3> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp3-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp3-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>通过HTTP结合SSE进行通信，大体流程如下图所示</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp4-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp4-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp5-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp5-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>如图所示，这几个步骤就共同组成了Client通过HTTP调用Server的过程，首先会通过/sse接口建立一个SSE连接，也就是Client会一直等待Server异步返回信息（单方面接受），此时客户端怎么和服务端交互呢？通过HTTP请求，也就是下面4个POST依次请求。每次请求的响应都会通过前面的SSE接口响应，这样是解耦了，并且让服务端可以异步处理和通知。期间是通过sessionId来认会话的</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp6-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp6-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp6.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp7-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp7-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp7.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp8-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp8-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp8.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp9-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp9-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp9.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h3 id="streamable-http">Streamable HTTP</h3> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp10-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp10-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp10.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>03-26的版本已经用这个取代原来的HTTP+SSE的方案了，往通用无状态、可选支持流的HTTP方向走了，更加通用化，原来Client和Server需要建立长连，对双方都是负担</p> <p>流程上其实差不多，只不过第一次不是请求/sse建立长连接进行持续监听，而是通过/mcp去初始化会话，得到sessionId即可，后续同样是通过/message去做工具调用，调用过程中是可以提升成SSE去持续等待服务端返回结果的</p> <h3 id="自定义传输协议">自定义传输协议</h3> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp11-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp11-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp11-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp11.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>适合做一些内部的传输协议，比如目前主要有这么几个场景：</p> <ol> <li>客户端内部函数调用/IPC调用</li> <li>不通应用（同设备不同设备）之间非官方定义（HTTP）的通信方式，如TCP/UDP/RPC等</li> </ol> <p>下面是一个应用内部的函数调用的粗略代码示意，大致是：</p> <ol> <li>开始会话，确认sessionId，这个通常维护在被调用方比较好</li> <li>通过对应的函数句柄持续调用和获取结果</li> </ol> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp12-480.webp 480w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp12-800.webp 800w,/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-04-01-mcp-custom-transport-protocol/mcp12.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>这边其实更多是在Client做In-house的定制，MCP我觉得也是比较重Client的，这边其实就能识别内部协议，里面有些功能可以直接空跑，比如start可以只new一个session不做任何事情，通过send和onmessage配合着就能完成函数调用了</p> <h2 id="总结">总结</h2> <p>值得一提的是，MCP还在不断发展中，刚好我写这篇的那天（03/26），官方又修订了一版出来，就是增加Streamable HTTP这版，我觉得势必会有一些Breaking Changes，包括一些诸如MCP应用市场或者说注册和发现机制，我觉得如果要进入到生产环境的各个环节，MCP还有一些需要推进的。企业级别中，很多东西不可能全部落在客户端，并且很多服务也不见得能保障成MCP Server，所以有个MCP网关统一在服务端做代理和调度是有意义的。</p>]]></content><author><name></name></author><category term="AI"/><category term="AI"/><summary type="html"><![CDATA[去年出的MCP，最近开始火起来，大体可以理解是Anthropic制定的一个Function Call的统一开放协议，各方都可以根据这个协议去实现MCP Server，根据协议实现的MCP Client可以任意去调用对应的MCP Server。这个目的旨在解决各个厂商之间实现的细节差异导致无法复用成果的问题。]]></summary></entry><entry><title type="html">【Iter-X】 43/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-43-100/" rel="alternate" type="text/html" title="【Iter-X】 43/100days"/><published>2025-03-31T15:59:59+00:00</published><updated>2025-03-31T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-43-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-43-100/"><![CDATA[<p>Day4️⃣3️⃣</p> <p>从总进度来看，似乎总体才完成了1/3，不过似乎还是挺有信心在接下去的50天内把剩下的搞完，所以整个进程看起来并不是完全线性的速度。这个也能理解，一般刚开始很多要处理的，做了几个页面或者几个接口后，一般有一些东西能不断复用的，自然速度就上来了</p> <p>今天在看bluesky的ATProtocol，以前虽然看过，但是没有仔细看里面的技术架构，今天看了一篇文章解析，区块链去中心化+社交平台，能不能成为下一个时代的潮流就未可知了，毕竟Web3的风也吹了这么久。不过转过来思考，我们的旅行APP其实也可以往这个方向探索，虽然有点技术乌托邦，不过如果未来APP真的没有跑起来的话，我会考虑全面开源，接入ATProtocol或者自己仿造的定制一个去中心化旅行协议，这样其实APP只是一个AppView，只是一个展示的载体，实际的数据是多数区块共识的，用户完全拥有自己的数据，也是一个挺好玩的东西。</p> <p>昨晚录屏了一下截止目前的客户端情况，实际操作了一下稍微有点感觉了，期待这周可以录个屏分享一下。这两天还是不断有新的朋友来和我分享或者询问一些APP里的功能，很高兴能持续收到大家的私聊，很多很好的建议我们都会积极采纳的，如果你有任何想法欢迎找我聊</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：32%</li> <li>后端（Go）开发：33%</li> <li>客户端（flutter）进度：20%</li> <li>数据：8%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊（我们需要一个UI设计小伙伴👾）：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣3️⃣]]></summary></entry><entry><title type="html">【Iter-X】 42/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-42-100/" rel="alternate" type="text/html" title="【Iter-X】 42/100days"/><published>2025-03-30T15:59:59+00:00</published><updated>2025-03-30T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-42-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-42-100/"><![CDATA[<p>Day4️⃣2️⃣</p> <p>今天干了一个页面，如果能用这个速度的话，那其实很快就可以把现有的页面都完成掉，这两天还需要补充一下后端接口。自从没有每天投入画图的日子，进度就上来了～还是得搭配着来，对于想投入独立开发的人来说，通常我们一个APP会需要处理这么几个东西：</p> <ol> <li>代码结构和基础框架的搭建（这点不可小视，不过有历史项目的一般会很快）</li> <li>构思产品，有能力的会输出脑图和原型图</li> <li>出设计图（根据产品大小可快可慢，也是挺重要的一个点）</li> <li>数据库设计（对于复杂点的产品也是不小的工作，不过我通常是随着后端开发过程去产出的）</li> <li>后端开发（根据产品目标规模而视重要性）</li> <li>前端/客户端开发（C端用户是视觉动物，B端更多是功能至上）</li> <li>联调测试，回顾设计实现度（细节总是耗费时间精力，取决于规模和是否完美主义）</li> </ol> <p>这些是主要的方面，如果你不是简单的做那种几个页面的Idea式或者卖设计的产品，复杂度上来这些方向都需要去投入的，可想而知独立开发者想Build一个Team才能做的东西需要付出多大的Effort🧑🏿‍💻</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：32%</li> <li>后端（Go）开发：32%</li> <li>客户端（flutter）进度：19%</li> <li>数据：8%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊（我们需要一个UI设计小伙伴👾）：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣2️⃣]]></summary></entry><entry><title type="html">【Iter-X】 41/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-41-100/" rel="alternate" type="text/html" title="【Iter-X】 41/100days"/><published>2025-03-29T15:59:59+00:00</published><updated>2025-03-29T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-41-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-41-100/"><![CDATA[<p>Day4️⃣1️⃣</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-29-iter-x-41-100/GitHubContributions-480.webp 480w,/assets/img/2025-03-29-iter-x-41-100/GitHubContributions-800.webp 800w,/assets/img/2025-03-29-iter-x-41-100/GitHubContributions-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-03-29-iter-x-41-100/GitHubContributions.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> GitHub Contributions </div> <p>今天忙于Coding了，比较沉浸，主要在忙客户端的，实际实现到真机查看还是非常精美的，跟原型图到高保真设计图的感觉一样，感觉很舒服，一种创造的感觉，就像我说自己喜欢创造一样，我觉得这是一个很重要的原动力，可以支持你去走很远。看了一下单单主仓库已经油179提交了，我统计了一下从2月17日第0天开始，我的GitHub提交记录就没断过，最少的一天2次，最多的一天38次。当你觉得你想去搞点事情、做点东西甚至是创业的时候，你需要问一下自己，你是否能几个月、几年如一日的坚持？为什么我反复表达坚持的力量？我其实很不喜欢一些人会简单的用一句选择比努力更重要然后就否定一切的努力，可以看到很多牛逼的人，绝大部分都是Hardworking造就的，从来就没有捷径，回到前面这个问题，知易行难，希望心中的🔥仍然在燃烧的你不要被无聊的现实世界给轻易熄灭了。</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：32%</li> <li>后端（Go）开发：32%</li> <li>客户端（flutter）进度：18%</li> <li>数据：8%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊（我们需要一个UI设计小伙伴👾）：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣1️⃣]]></summary></entry><entry><title type="html">【Iter-X】 40/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-40-100/" rel="alternate" type="text/html" title="【Iter-X】 40/100days"/><published>2025-03-28T15:59:59+00:00</published><updated>2025-03-28T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-40-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-40-100/"><![CDATA[<p>Day4️⃣0️⃣</p> <p>应科技薯的邀请，今天和他们的运营同学线上聊了接近1个小时，主要针对独立开发者做了一些访谈，和他们交流了一下创作过程的一些感想，还聊了一些关于xhs上现在有更加多元的信息，他们也有在考虑一些未来的特性。我们甚至聊到了18图+1k字的限制，这个我觉得也是一些领域的创作者必然会遇到的形式，不过这个和xhs本身的产品定位等等都有关系，我觉得也不容易改变。总体而言还是挺愉快的，我很乐于和不同的人交流思想，很多时候都能产生出很多新的有趣的想法，期待后面他们能给予众多独立开发者更多支持，也希望其能保持整个平台、社区的氛围和基调，这个或许也是很多人能持续创作的动力之一。</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-28-iter-x-40-100/MinePage1-480.webp 480w,/assets/img/2025-03-28-iter-x-40-100/MinePage1-800.webp 800w,/assets/img/2025-03-28-iter-x-40-100/MinePage1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-03-28-iter-x-40-100/MinePage1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-28-iter-x-40-100/MinePage2-480.webp 480w,/assets/img/2025-03-28-iter-x-40-100/MinePage2-800.webp 800w,/assets/img/2025-03-28-iter-x-40-100/MinePage2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-03-28-iter-x-40-100/MinePage2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Mine Page </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-28-iter-x-40-100/RawMinePage-480.webp 480w,/assets/img/2025-03-28-iter-x-40-100/RawMinePage-800.webp 800w,/assets/img/2025-03-28-iter-x-40-100/RawMinePage-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-03-28-iter-x-40-100/RawMinePage.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma1-480.webp 480w,/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma1-800.webp 800w,/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma2-480.webp 480w,/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma2-800.webp 800w,/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-03-28-iter-x-40-100/Cursor+Figma2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Cursor + Figma to codes </div> <p>这两天尝试了两个方向的AI提升效率的，前天是用cursor结合figma从文本去输出原型图，今天我尝试了用cursor+figma从设计图转成flutter客户端代码，我觉得效果和收益比前者了来得大一点，我贴几张图，我基本用最简单的话语和2轮次就输出一个页面，60分，剩下的我花了一点时间调整一下就成了最终的形态了，我觉得这块会是我后面会持续去尝试的一个方向，我希望能最大化提升自己的效率。</p> <p>今天有1位原本自己就有产品想法的小伙伴加入我们，会帮助我们在POI方向的数据制备上发力，很高兴持续有很优秀的人加入。我们的2位产品小伙伴也不断在碰产品想法和输出功能定义，对于这点我们其实有点“奇怪”，也就是目前其实我们的原型/设计图和研发都进展到一定程度，完整的产品定义才陆续跟上来，这个也和产品是后来加入的有关系，最开始毕竟是我自己在构思产品，变成双轨进行，不过我还是乐观的，我觉得很多功能性的东西差不会太多，页面层面的调整可以比较快的去做调整，多一些effort，但是也在可控范围。</p> <p>汇总目前情况：</p> <ol> <li>原型设计&amp;UI/UX设计：32%</li> <li>后端（Go）开发：32%</li> <li>客户端（flutter）进度：17%</li> <li>数据：8%</li> </ol> <p>如果你认为你符合以下条件，欢迎来聊（我们需要一个UI设计小伙伴👾）：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day4️⃣0️⃣]]></summary></entry></feed>
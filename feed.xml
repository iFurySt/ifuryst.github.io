<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ifuryst.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ifuryst.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-18T16:18:19+00:00</updated><id>https://ifuryst.github.io/feed.xml</id><title type="html">ifuryst</title><subtitle>📝 &amp; 💭 </subtitle><entry><title type="html">【Iter-X】 2/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-2-100/" rel="alternate" type="text/html" title="【Iter-X】 2/100days"/><published>2025-02-18T15:59:59+00:00</published><updated>2025-02-18T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-2-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-2-100/"><![CDATA[<p>Day2️⃣</p> <p>今天在HN上看到一个很有趣的东西，按周展示自己的一生，然后会mark一些重要的事件上去，因为按周的维度，按照100年的跨度算下来才5215周（100*365/7=5215），可以用很简洁的方式展示一些人生时刻，感觉很酷。</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster1.2025-02-18_11-16-30-480.webp 480w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster1.2025-02-18_11-16-30-800.webp 800w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster1.2025-02-18_11-16-30-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster1.2025-02-18_11-16-30.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster2.2025-02-18_11-17-24-480.webp 480w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster2.2025-02-18_11-17-24-800.webp 800w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster2.2025-02-18_11-17-24-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster2.2025-02-18_11-17-24.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> MyLifeInWeeks: Buster 1 &amp; 2 </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster3.2025-02-18_11-17-32-480.webp 480w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster3.2025-02-18_11-17-32-800.webp 800w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster3.2025-02-18_11-17-32-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Buster3.2025-02-18_11-17-32.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina1.2025-02-18_11-14-55-480.webp 480w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina1.2025-02-18_11-14-55-800.webp 800w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina1.2025-02-18_11-14-55-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina1.2025-02-18_11-14-55.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> MyLifeInWeeks: Buster 3 &amp; Gina 1 </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina2.2025-02-18_11-15-07-480.webp 480w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina2.2025-02-18_11-15-07-800.webp 800w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina2.2025-02-18_11-15-07-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina2.2025-02-18_11-15-07.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina3.2025-02-18_11-15-16-480.webp 480w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina3.2025-02-18_11-15-16-800.webp 800w,/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina3.2025-02-18_11-15-16-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-19-iter-x-2-100/MyLifeInWeeks-Gina3.2025-02-18_11-15-16.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> MyLifeInWeeks: Gina 2 &amp; 3 </div> <p>我当时第一个想法就是我要把他集成到APP里！我希望到时候能用这个展示你人生的旅行时刻，然后结合地图可视化，可以很容易勾起当时的回忆。就好像现在有人喜欢去点亮地图，我觉得也是一个目的</p> <p>今天🥚，汇总目前情况：</p> <ol> <li>原型设计：1%，有想法了，但是还是会和2️⃣一起推进</li> <li>UI/UX设计：1%，开始了但是还没出什么实质结果，和一些设计聊了一下色调，得出了一些关键字（极简设计、扁平化、撞色、莫兰迪色系、饱和度高、孟菲斯、酸性设计、几何体）</li> <li>后端（Go）开发：10%，手拿把掐，目前会稍稍停一下这块工作，要先处理2️⃣和4️⃣</li> <li>客户端（flutter）进度：0%，坐等1️⃣&amp;2️⃣完成，同时再学习一下flutter~</li> </ol> <p>预计接下去几天会重点忙1️⃣和2️⃣</p> <p>如果你认为你符合以下条件，欢迎来聊：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol> <p>References:</p> <ul> <li><a href="https://weeks.ginatrapani.org/">https://weeks.ginatrapani.org/</a></li> <li><a href="https://busterbenson.com/life-in-weeks">https://busterbenson.com/life-in-weeks</a></li> <li><a href="https://waitbutwhy.com/2014/05/life-weeks.html">https://waitbutwhy.com/2014/05/life-weeks.html</a></li> <li><a href="https://www.weeksofyour.life/">https://www.weeksofyour.life/</a></li> <li><a href="https://github.com/ginatrapani/life-in-weeks">https://github.com/ginatrapani/life-in-weeks</a></li> </ul>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day2️⃣]]></summary></entry><entry><title type="html">【Iter-X】 1/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-1-100/" rel="alternate" type="text/html" title="【Iter-X】 1/100days"/><published>2025-02-17T15:59:59+00:00</published><updated>2025-02-17T15:59:59+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-1-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-1-100/"><![CDATA[<p>Day1️⃣</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-17-iter-x-1-100/Slide1.2025-02-18_00-14-45-480.webp 480w,/assets/img/2025-02-17-iter-x-1-100/Slide1.2025-02-18_00-14-45-800.webp 800w,/assets/img/2025-02-17-iter-x-1-100/Slide1.2025-02-18_00-14-45-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-17-iter-x-1-100/Slide1.2025-02-18_00-14-45.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Slides 1 </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-17-iter-x-1-100/Slide2.2025-02-18_00-15-05-480.webp 480w,/assets/img/2025-02-17-iter-x-1-100/Slide2.2025-02-18_00-15-05-800.webp 800w,/assets/img/2025-02-17-iter-x-1-100/Slide2.2025-02-18_00-15-05-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-17-iter-x-1-100/Slide2.2025-02-18_00-15-05.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-17-iter-x-1-100/Slide3.2025-02-18_00-15-20-480.webp 480w,/assets/img/2025-02-17-iter-x-1-100/Slide3.2025-02-18_00-15-20-800.webp 800w,/assets/img/2025-02-17-iter-x-1-100/Slide3.2025-02-18_00-15-20-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-17-iter-x-1-100/Slide3.2025-02-18_00-15-20.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Slides 2 &amp; 3 </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-17-iter-x-1-100/Slide4.2025-02-18_00-15-36-480.webp 480w,/assets/img/2025-02-17-iter-x-1-100/Slide4.2025-02-18_00-15-36-800.webp 800w,/assets/img/2025-02-17-iter-x-1-100/Slide4.2025-02-18_00-15-36-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-17-iter-x-1-100/Slide4.2025-02-18_00-15-36.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-17-iter-x-1-100/Slide5.2025-02-18_00-15-44-480.webp 480w,/assets/img/2025-02-17-iter-x-1-100/Slide5.2025-02-18_00-15-44-800.webp 800w,/assets/img/2025-02-17-iter-x-1-100/Slide5.2025-02-18_00-15-44-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-17-iter-x-1-100/Slide5.2025-02-18_00-15-44.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Slides 4 &amp; 5 </div> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-17-iter-x-1-100/Slide6.2025-02-18_00-15-58-480.webp 480w,/assets/img/2025-02-17-iter-x-1-100/Slide6.2025-02-18_00-15-58-800.webp 800w,/assets/img/2025-02-17-iter-x-1-100/Slide6.2025-02-18_00-15-58-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-17-iter-x-1-100/Slide6.2025-02-18_00-15-58.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-17-iter-x-1-100/Slide7.2025-02-18_00-16-05-480.webp 480w,/assets/img/2025-02-17-iter-x-1-100/Slide7.2025-02-18_00-16-05-800.webp 800w,/assets/img/2025-02-17-iter-x-1-100/Slide7.2025-02-18_00-16-05-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-17-iter-x-1-100/Slide7.2025-02-18_00-16-05.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Slides 6 &amp; 7 </div> <p>今天有点忙，我写下这个的时候已经00点半了，还是坚持把一个简单的Slide写完了，离BP和路演的PPT还差远了，但是重在传达一些想法和设计理念</p> <p>汇总目前情况：</p> <ol> <li>原型设计：1%，有想法了，但是还是会和2️⃣一起推进</li> <li>UI/UX设计：1%，开始了但是还没出什么实质结果，和一些设计聊了一下色调，得出了一些关键字（极简设计、扁平化、撞色、莫兰迪色系、饱和度高、孟菲斯、酸性设计、几何体）</li> <li>后端（Go）开发：10%，手拿把掐，目前会稍稍停一下这块工作，要先处理2️⃣和4️⃣</li> <li>客户端（flutter）进度：0%，坐等1️⃣&amp;2️⃣完成，同时再学习一下flutter~</li> </ol> <p>预计接下去几天会重点忙1️⃣和2️⃣</p> <p>如果你认为你符合以下条件，欢迎来聊：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[Day1️⃣]]></summary></entry><entry><title type="html">分布式限流算法</title><link href="https://ifuryst.github.io/blog/2025/distributed-rate-limiter/" rel="alternate" type="text/html" title="分布式限流算法"/><published>2025-02-17T15:28:27+00:00</published><updated>2025-02-17T15:28:27+00:00</updated><id>https://ifuryst.github.io/blog/2025/distributed-rate-limiter</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/distributed-rate-limiter/"><![CDATA[<h1 id="设计之初">设计之初</h1> <p>遵循以下原则：</p> <ul> <li>从需求出发进行方案的思考和设计</li> <li>最小可满足方案开始思考</li> <li>列出目前已有的中间件和外部服务</li> </ul> <p>循环渐进的来思考，首先是回归需求本身：</p> <ol> <li>避免请求数过多把整个服务打挂</li> <li>当请求数超过阈值，可以适当对部分客户进行降级</li> <li>该接口属于客户端定时拉取更新接口，拉不到也会沿用上次的数据，所以适当的拒绝服务大概率对客户端没有明显影响（新环境新启动的才会因没有数据无法使用）</li> <li>需要针对租户级别进行限流，多租户间的限流是互相隔离的</li> </ol> <p>目前的服务及配套情况：</p> <ul> <li>服务本身在K8s，多副本</li> <li>有Redis和MySQL</li> </ul> <h1 id="方案思考">方案思考</h1> <p>因为是多副本+针对租户级别限流，所以需要走分布式限流方案的方向去设计了，我们暂定使用Redis来做</p> <p>我们暂定用一分钟600次请求的目标来做</p> <h2 id="1-固定窗口计数fixed-window-count">1. 固定窗口计数（Fixed Window Count）</h2> <p>这个最好实现了，直接对着租户ID自增，每次请求来就到redis自增获取，判断是否超阈值来决定</p> <p>不过缺点也比较明显，就是会出现流量突刺，比如集中在1、2秒内把600次都打完了，这样我们没办法进行流量削峰，容易对服务造成冲击</p> <h2 id="2-滑动窗口计数sliding-window-count">2. 滑动窗口计数（Sliding Window Count）</h2> <p>为了让流量更加平滑一点，我们就把整分钟切割成多个相同大小的时间片段，比如5秒一个片段，这样就变成60/5=12个片段，600/12=50requests/5s，也就是流量峰值从600qps变成了50qps了，也就是降低了12倍。</p> <p>可以利用Redis的有序集合ZSet来做，比如每次请求来就把当前时间戳当分数score，ZADD进去，然后删掉超过时间窗口的时间戳，判断剩余数量是否超过阈值</p> <p>不过这个也有缺点：</p> <ol> <li>性能瓶颈：为了匀速，人为的切割很多个时间片段，但是这样会让请求没办法小范围突发（burst），天然限制了系统的处理能力了</li> <li>操作和存储也相对复杂</li> </ol> <h2 id="3-令牌桶token-bucket">3. 令牌桶（Token Bucket）</h2> <p>我们希望能在一定范围内去突发，但是又不会太猛，令牌桶就是以固定的速率去生成令牌，消费的时候可以突发把现有的令牌都消耗掉，直到没有令牌可消费就会拒绝服务。流量表现会更加的平滑一点</p> <p>这里令牌桶是可以满足整体的需求了，但是有个问题：令牌刷新投放。通常是某个副本起个线程去刷新，但是这样增加了复杂性和可靠性</p> <p>为了简化实现，有几个思路和手段的转变：</p> <ol> <li>采取lua来进行获取和投放计算，这样在redis层面也能做到原子性操作</li> <li>把实时投放转变成获取令牌的时候计算时差来增量投放</li> </ol> <p>这样可以实现投放和消费都在redis里完成了，复杂性降低</p> <h2 id="codes">Codes</h2> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
	<span class="s">"context"</span>
	<span class="s">"fmt"</span>
	<span class="s">"log"</span>
	<span class="s">"net/http"</span>

	<span class="s">"github.com/go-redis/redis/v8"</span>
	<span class="s">"github.com/gorilla/mux"</span>
<span class="p">)</span>

<span class="k">var</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">Background</span><span class="p">()</span>

<span class="c">// 初始化 Redis 客户端</span>
<span class="k">func</span> <span class="n">initRedisClient</span><span class="p">()</span> <span class="o">*</span><span class="n">redis</span><span class="o">.</span><span class="n">Client</span> <span class="p">{</span>
	<span class="n">client</span> <span class="o">:=</span> <span class="n">redis</span><span class="o">.</span><span class="n">NewClient</span><span class="p">(</span><span class="o">&amp;</span><span class="n">redis</span><span class="o">.</span><span class="n">Options</span><span class="p">{</span>
		<span class="n">Addr</span><span class="o">:</span> <span class="s">"localhost:6379"</span><span class="p">,</span> <span class="c">// Redis 地址</span>
		<span class="n">DB</span><span class="o">:</span>   <span class="m">3</span><span class="p">,</span>                <span class="c">// 使用默认数据库</span>
	<span class="p">})</span>
	<span class="k">return</span> <span class="n">client</span>
<span class="p">}</span>

<span class="c">// 限流的 Lua 脚本</span>
<span class="k">var</span> <span class="n">luaScript</span> <span class="o">=</span> <span class="s">`
  -- 定义返回值，是个数组，包含：是否触发限流（1限流 0通过）、当前桶中的令牌数
  local ret = {0, 0}
  local cl_key = KEYS[1]
  local lock_key = cl_key .. '-lock'
  local lock_val = redis.call('get', lock_key)
  if lock_val == '1' then
    ret[1] = 1
    ret[2] = -1
    return ret
  end

  -- 获取桶容量和其他配置
  local capacity = tonumber(ARGV[1])
  local amount = tonumber(ARGV[2])
  local inflow_unit = tonumber(ARGV[3])
  local inflow_quantity_per_unit = tonumber(ARGV[4])
  local key_expire_time = tonumber(ARGV[5])
  local lock_seconds = tonumber(ARGV[6])
  local current_time = tonumber(redis.call('time')[1])
  local st_key = cl_key .. '-st'

  -- 获取[上次向桶中投放令牌的时间]，如果没有设置过这个投放时间，则令牌桶也不存在
  local last_time = redis.call('get', st_key)
  if not last_time then
    local bucket_amount = capacity - amount
    redis.call('set', KEYS[1], bucket_amount, 'PX', key_expire_time)
    redis.call('set', st_key, current_time, 'PX', key_expire_time)
    ret[2] = bucket_amount
    return ret
  end

  -- 令牌桶存在，获取令牌桶中的当前令牌数
  local current_value = tonumber(redis.call('get', KEYS[1]))

  -- 判断是否需要投放令牌：当前时间 - 上次投放时间 &gt;= 投放时间间隔
  local past_time = current_time - tonumber(last_time)
  local past_inflow_unit_quantity = math.floor(past_time / inflow_unit)

  local bucket_amount = current_value + past_inflow_unit_quantity * inflow_quantity_per_unit - amount
  -- 确保 bucket_amount 不会超过容量
  bucket_amount = math.min(bucket_amount, capacity - amount)

  local last_time_changed = 0

  if past_inflow_unit_quantity &gt; 0 then
    last_time = current_time - (past_time % inflow_unit)
    redis.call('set', st_key, last_time, 'PX', key_expire_time)
    last_time_changed = 1
  end

  if bucket_amount &lt; 0 then
    if lock_seconds &gt; 0 then
      redis.call('set', lock_key, '1', 'EX', lock_seconds, 'NX')
    end
    ret[1] = 1
    ret[2] = -1
  else
    redis.call('set', KEYS[1], bucket_amount, 'PX', key_expire_time)
    ret[2] = bucket_amount
  end

  return ret
`</span>

<span class="c">// 限流 API 处理函数</span>
<span class="k">func</span> <span class="n">rateLimitHandler</span><span class="p">(</span><span class="n">w</span> <span class="n">http</span><span class="o">.</span><span class="n">ResponseWriter</span><span class="p">,</span> <span class="n">r</span> <span class="o">*</span><span class="n">http</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">client</span> <span class="o">:=</span> <span class="n">initRedisClient</span><span class="p">()</span>
	<span class="k">defer</span> <span class="n">client</span><span class="o">.</span><span class="n">Close</span><span class="p">()</span>

	<span class="c">// 请求参数</span>
	<span class="n">keys</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"my-rate-limit-key"</span><span class="p">}</span>
	<span class="n">argv</span> <span class="o">:=</span> <span class="p">[]</span><span class="k">interface</span><span class="p">{}{</span>
		<span class="m">10</span><span class="p">,</span>    <span class="c">// 桶容量</span>
		<span class="m">1</span><span class="p">,</span>     <span class="c">// 每次消耗的令牌数</span>
		<span class="m">5</span><span class="p">,</span>     <span class="c">// 投放令牌的时间间隔（秒）</span>
		<span class="m">2</span><span class="p">,</span>     <span class="c">// 每次投放的令牌数</span>
		<span class="m">60000</span><span class="p">,</span> <span class="c">// 键的过期时间（毫秒）</span>
		<span class="m">0</span><span class="p">,</span>     <span class="c">// 限流惩罚锁定时间（秒）</span>
	<span class="p">}</span>

	<span class="c">// 执行 Lua 脚本</span>
	<span class="n">result</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Eval</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">luaScript</span><span class="p">,</span> <span class="n">keys</span><span class="p">,</span> <span class="n">argv</span><span class="o">...</span><span class="p">)</span><span class="o">.</span><span class="n">Result</span><span class="p">()</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">http</span><span class="o">.</span><span class="n">Error</span><span class="p">(</span><span class="n">w</span><span class="p">,</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="s">"Error executing Lua script: %v"</span><span class="p">,</span> <span class="n">err</span><span class="p">),</span> <span class="n">http</span><span class="o">.</span><span class="n">StatusInternalServerError</span><span class="p">)</span>
		<span class="k">return</span>
	<span class="p">}</span>

	<span class="c">// 处理返回的结果</span>
	<span class="n">ret</span> <span class="o">:=</span> <span class="n">result</span><span class="o">.</span><span class="p">([]</span><span class="k">interface</span><span class="p">{})</span>
	<span class="k">if</span> <span class="n">ret</span><span class="p">[</span><span class="m">0</span><span class="p">]</span><span class="o">.</span><span class="p">(</span><span class="kt">int64</span><span class="p">)</span> <span class="o">==</span> <span class="m">1</span> <span class="p">{</span>
		<span class="c">// 触发限流</span>
		<span class="n">http</span><span class="o">.</span><span class="n">Error</span><span class="p">(</span><span class="n">w</span><span class="p">,</span> <span class="s">"Rate limit exceeded"</span><span class="p">,</span> <span class="n">http</span><span class="o">.</span><span class="n">StatusTooManyRequests</span><span class="p">)</span>
		<span class="k">return</span>
	<span class="p">}</span>

	<span class="c">// 返回当前桶中的令牌数</span>
	<span class="n">_</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Fprintf</span><span class="p">(</span><span class="n">w</span><span class="p">,</span> <span class="s">"Tokens left: %v"</span><span class="p">,</span> <span class="n">ret</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">.</span><span class="p">(</span><span class="kt">int64</span><span class="p">))</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="c">// 创建路由</span>
	<span class="n">r</span> <span class="o">:=</span> <span class="n">mux</span><span class="o">.</span><span class="n">NewRouter</span><span class="p">()</span>

	<span class="c">// 注册 API 路由</span>
	<span class="n">r</span><span class="o">.</span><span class="n">HandleFunc</span><span class="p">(</span><span class="s">"/rate-limit"</span><span class="p">,</span> <span class="n">rateLimitHandler</span><span class="p">)</span><span class="o">.</span><span class="n">Methods</span><span class="p">(</span><span class="s">"GET"</span><span class="p">)</span>

	<span class="c">// 启动 HTTP 服务器</span>
	<span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Server started on :8080"</span><span class="p">)</span>
	<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">http</span><span class="o">.</span><span class="n">ListenAndServe</span><span class="p">(</span><span class="s">":8080"</span><span class="p">,</span> <span class="n">r</span><span class="p">))</span>
<span class="p">}</span>

</code></pre></div></div> <p>这边有个简单的Go写的Demo，这样我们就完成了一个基于Redis的分布式令牌桶限流方案的设计和PoC了，接下去要做的仅仅只是集成到对应的服务里面去，再结合业务做一定的适配即可，effort不会特别大。</p> <p>网上有很多的架构设计或者方案设计的文章，但是很多上来就是给你说1、2、3方案，优缺点罗列，然后跟你说什么是最好的，我觉得这个对于老司机来说没毛病，但是对于一些正在发展期的人，有时候会比较直，我觉得最好的还是循环渐进，所以当自己不知道方案设计要到什么程度的时候，我会考虑使用满足即可的原则，也就是从最小的方案或者最垃圾的方案开始做，哪里不满足，再往上去找更有效的方案，这样爬楼梯一样，最终爬到哪一级，方案就出来了。</p>]]></content><author><name></name></author><category term="insights"/><category term="insights"/><summary type="html"><![CDATA[设计之初]]></summary></entry><entry><title type="html">【Iter-X】 0/100days</title><link href="https://ifuryst.github.io/blog/2025/iter-x-0-100/" rel="alternate" type="text/html" title="【Iter-X】 0/100days"/><published>2025-02-16T15:28:27+00:00</published><updated>2025-02-16T15:28:27+00:00</updated><id>https://ifuryst.github.io/blog/2025/iter-x-0-100</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/iter-x-0-100/"><![CDATA[<p>作为一个热衷于开发创造以及旅行的人，我觉得兴趣的交叉就是创造的好时机。</p> <p>经过一段时间的沉淀和思考，我决定从今天开始把新的旅行APP产品的诞生做一个每天记录。希望能结交到一些朋友，甚至是志同道合的伙伴。</p> <p>Day0️⃣</p> <p>汇总目前情况：</p> <ol> <li>产品英文名+产品理念+关键特性+MVP目标已初步完成</li> <li>完成部分后端（Go）接口开发（认证+主行程）</li> <li>客户端（flutter）进度：0%</li> <li>设想了一点原型、色调和UI</li> </ol> <p>预计明天会先分享一份项目介绍PPT。</p> <p>目前我们缺少：</p> <ol> <li>flutter研发伙伴</li> <li>UI并懂一些UX的设计师伙伴</li> </ol> <p>如果你认为你符合以下条件，欢迎来撩：</p> <ol> <li>能坚持</li> <li>有梦想</li> <li>有兴趣</li> </ol> <p>目前我们都是Part-Time哦，目前其实不太希望有Full-time的小伙伴进来，我们无法提供任何实物报酬</p>]]></content><author><name></name></author><category term="products"/><category term="products"/><summary type="html"><![CDATA[作为一个热衷于开发创造以及旅行的人，我觉得兴趣的交叉就是创造的好时机。]]></summary></entry><entry><title type="html">从语义化排序看未来算法和工程的变化</title><link href="https://ifuryst.github.io/blog/2025/llm-in-sort/" rel="alternate" type="text/html" title="从语义化排序看未来算法和工程的变化"/><published>2025-02-14T15:28:27+00:00</published><updated>2025-02-14T15:28:27+00:00</updated><id>https://ifuryst.github.io/blog/2025/llm-in-sort</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/llm-in-sort/"><![CDATA[<p>今天我看到 <a href="https://github.com/vagos/llm-sort">llm-sort</a> 这个项目，它是基于一篇<a href="https://arxiv.org/abs/2306.17563">论文</a>开发的一个小工具，主要用于文本排序。传统排序通常依赖于字母序或数字序，例如按照 A-Z 或 0-9 进行排序。而llm-sort的核心思路是将这种排序方式提升到语义层面，即利用大模型来进行更智能的排序。</p> <p>在传统排序算法中，我们的比较逻辑是基于字符或数值的大小关系，比如判断 A 是否大于 B，然后决定它们的相对顺序。而llm-sort本质上仍然是一个排序算法，只不过它的比较逻辑不再是简单的字符对比，而是基于LLM去做比较。这意味着我们仍然可以沿用经典的排序算法（如快速排序、插入排序等），但原子级别的比较操作被大模型取代，从而实现更智能的排序</p> <p>这种能力的提升带来了非常有趣的应用场景。例如，我们有一万个名字，希望找出最适合给家里的小狗命名的那些。传统排序方式可能只能按照字母序排列，而通过llm-sort，我们可以根据语义来排序。</p> <p>我们还可以增加一些关于狗狗的描述，比如活泼好动、喜欢粘人等等，我们可以将这些特性作为条件输入LLM，让它为我们推荐更适合的狗名。LLM会基于这些描述来理解哪些名字更符合这类狗的特性，并将它们排在前面。这只是一个简单的例子，实际上，我们可以添加更多复杂的条件，让排序更加精准和个性化。</p> <p>这一能力在搜索引擎、推荐系统等领域的应用前景极为广阔。目前的个性化推荐通常基于关键词关联、TF-IDF、用户行为分析等方式，例如：</p> <ul> <li>电商网站的猜你喜欢功能，主要依赖于标签匹配、词频计算、点击率等方法。</li> <li>搜索引擎会根据相关度排序，但排序逻辑主要基于关键字匹配，而非真正的语义理解。</li> </ul> <p>未来，结合大模型的排序方式可以大幅提升推荐质量。例如，当用户搜索吹风机时，系统可以分析商品的标题、详情页、用户评价、品牌认知等多种因素，并结合用户的偏好进行更精准的排序。这样排在前面的商品更符合用户的需求，能极大地提升购买转化率，也能尽快节省用户的时间。（发散一下：其实未来的搜索甚至直接是通过语音之类的自然语言搜索了，就跟去线下店里和导购交流我要什么意义。不过这边依然有反面的，就是广告主仍然可以竞拍被LLM优先采纳，这或许就是广告模式驱动的商业世界吧）</p> <p>这一技术还可以广泛应用于社交媒体推荐算法（如抖音、小红书等），让推你喜欢的内容推荐变得更加精准，而不只是基于简单的标签或算法推测（这无疑也让奶头乐发挥到极致🥲）</p> <p>值得一提，很多人认为应用LLM只需要写个 prompt 让它生成结果，看似很简单。但真正的挑战在于如何将LLM有效地融入到实际的工程体系中，解决现实问题。</p> <p>在大型工程系统中，涉及上下游的服务非常庞杂，而如何在这些系统中逐步引入大模型，使其真正发挥价值，这不仅是技术问题，更涉及产品设计理念和对新技术的敏感度。这种能力不是简单地做个demo展示一下的那种难度级别，而是需要深入理解场景，合理设计应用方式。</p> <p>总结来说，llm-sort让排序算法从传统的字符比对升级到了语义层面，这一小小的变化，实则带来了巨大的可能性。在业务里大大小小的地方都会陆续被LLM渗透进去，人类再一次给自己构建的世界制造了很大的想象空间啊</p>]]></content><author><name></name></author><category term="insights"/><category term="insights"/><summary type="html"><![CDATA[今天我看到 llm-sort 这个项目，它是基于一篇论文开发的一个小工具，主要用于文本排序。传统排序通常依赖于字母序或数字序，例如按照 A-Z 或 0-9 进行排序。而llm-sort的核心思路是将这种排序方式提升到语义层面，即利用大模型来进行更智能的排序。]]></summary></entry><entry><title type="html">AI在广告的应用</title><link href="https://ifuryst.github.io/blog/2025/ai-in-ads/" rel="alternate" type="text/html" title="AI在广告的应用"/><published>2025-02-13T00:30:27+00:00</published><updated>2025-02-13T00:30:27+00:00</updated><id>https://ifuryst.github.io/blog/2025/ai-in-ads</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/ai-in-ads/"><![CDATA[<p>今天在Newsletter里看到一篇文章，介绍了 Pinterest 如何将 AI 应用于产品和业务，尤其是在广告服务（ads）中的应用。Pinterest 通过 AI 个性化定制用户所看到的内容，根据用户喜好自动生成背景图等素材，从而提升广告效果。例如，一些保健品或药品销售商可以利用 AI 技术，更精准地针对目标用户群体生成和推送广告，提高转化率</p> <p>个性化广告投放无疑是未来的重要发展方向。除了 Pinterest，Meta和 Google 之类的公司也在积极探索 AI 在广告推广中的应用。目前，还没有哪家公司能完全掌握 AI 广告的最佳实践。各公司或平台还是需要结合自身的产品、内容和受众特点，定制化地将 AI 融入广告系统，才能最大化AI为广告推送带来更大的效益</p> <p>传统广告投放往往需要广告主准备大量的素材（如图片、视频、文案等），但 AI 可以帮助广告主在保持原有素材的基础上，甚至使用更少的素材，生成更符合目标用户需求的广告内容。例如，如果广告主针对年轻的养宠物群体投放狗粮或猫粮广告，AI 可以基于产品理念、说明书、规格等信息，自动生成适合该群体的图文或视频广告，而无需广告主额外花费大量精力制作新素材。另外AI 也不一定要为每个用户单独生成内容，而是可以针对某一类用户群体，自动生成相应的广告展示素材，从而提升广告投放的效率。这些无疑都是未来广告领域可见的一些方向。</p> <p>不过AI 在广告中的应用也面临了一些挑战，比如模型的准确性、内容的可信度，以及可能出现的幻觉等问题。不过我还是相信随着大模型的成本下降、效果提升和一些新的技术演进，这些问题能在一定程度上解决，最终能否完全解决，仍然取决于工程化的结合和技术的持续发展。</p> <p>从更宏观的角度来看，传统计算机技术依赖确定性，例如 1+1=2，正是这种确定性奠定了计算机技术长期发展的基础。但是在AI时代， 技术本质上并非是确定性的性质，而是更具语义化特征，类似于人类的语言表达——同一个意思可以有多种不同的表达方式。在这样的框架下，后续不能过度追求 AI 生成内容的确定性，或许以最终的实际效果为导向是更好的思维和实践方式。像特斯拉的自动驾驶采用端到端 AI 模型，虽然无法精确预测每一步的输出，但能确保最终的驾驶行为符合预期。这或许代表了一种思维模式的转变，即我们应该更加关注 AI 系统的最终结果，而非单一过程的确定性。</p>]]></content><author><name></name></author><category term="insights"/><category term="insights"/><summary type="html"><![CDATA[今天在Newsletter里看到一篇文章，介绍了 Pinterest 如何将 AI 应用于产品和业务，尤其是在广告服务（ads）中的应用。Pinterest 通过 AI 个性化定制用户所看到的内容，根据用户喜好自动生成背景图等素材，从而提升广告效果。例如，一些保健品或药品销售商可以利用 AI 技术，更精准地针对目标用户群体生成和推送广告，提高转化率]]></summary></entry><entry><title type="html">Congrats on ICLR 2025!</title><link href="https://ifuryst.github.io/blog/2025/congrats-on-iclr-2025/" rel="alternate" type="text/html" title="Congrats on ICLR 2025!"/><published>2025-02-11T14:22:27+00:00</published><updated>2025-02-11T14:22:27+00:00</updated><id>https://ifuryst.github.io/blog/2025/congrats-on-iclr-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/congrats-on-iclr-2025/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-02-11-congrats-on-iclr-2025/iclr2025-480.webp 480w,/assets/img/2025-02-11-congrats-on-iclr-2025/iclr2025-800.webp 800w,/assets/img/2025-02-11-congrats-on-iclr-2025/iclr2025-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2025-02-11-congrats-on-iclr-2025/iclr2025.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Paper on ICLR 2025. </div> <p><a href="https://github.com/All-Hands-AI/OpenHands">OpenHands（前OpenDevin）</a>的论文被ICLR 2025接受啦🎉</p> <p>现在已经45K的Start🌟，5K的Fork，时光荏苒啊。会想去年和大家一起写Paper，跑Benchmark，真实是一篇整个社区贡献的paper，感觉很棒。</p> <p>这个邮件也标志着我慢慢的从这个项目淡出了，2024年上半年花了很多时间在这个项目里贡献和结实一些优秀的人，现在我有更多我想做的事情，我慢慢的从这个项目里走开了，我觉得这个无可厚非，人生就是这样一段又一段的经历组成，才成就了现在的我们。祝愿还在项目里活跃的伙伴们能越走越远，不忘初心。</p>]]></content><author><name></name></author><category term="Life"/><category term="Life"/><summary type="html"><![CDATA[Paper on ICLR 2025.]]></summary></entry><entry><title type="html">Back Online! Let’s Rock 2025</title><link href="https://ifuryst.github.io/blog/2025/lets-rock-2025/" rel="alternate" type="text/html" title="Back Online! Let’s Rock 2025"/><published>2025-02-11T14:12:27+00:00</published><updated>2025-02-11T14:12:27+00:00</updated><id>https://ifuryst.github.io/blog/2025/lets-rock-2025</id><content type="html" xml:base="https://ifuryst.github.io/blog/2025/lets-rock-2025/"><![CDATA[<p>春节去美国玩了半个月，第一次去美国，这次旅程有很多收获，感觉成长了很多，后续有空再展开仔细说说这次美国之行的一些有趣的东西。这次半个月，算是Going Offline了半个月，一年有这样的一段时间还挺好的。</p> <p>我从美国背回来几本书，路上就在看The Nvidia Way，以前也看过类似这种公司或者个人的成长记录，但是这次意外的有很多感受，也坚定了一些我之前的想法和行为。</p> <p>为什么是这个标题呢，一个是跟大家说我在线了，可以继续开干了，另外一句是坚定了2025我会继续按照我的节奏往前突进。今天有个网友walker给我写邮件找我交流了无聊的世界，在我给他的回信中我写到了这样一段话：</p> <blockquote> <p>我觉得这两年似乎站在了一个时代变革的节点，我还是挺相信AI能给这个社会和个人带来很多价值的，今天看newsletter，里面有说到未来可能会出现一人的独角兽公司，我觉得还是有一定的可能的。以前说逆水行舟不进则退，现在我倒是感觉在时代的长河里，我们不是逆流，只是水流的速度越来越快，如果我们一直以一样的速度前行，相对而言我们就是一直在往后走，所以这个时代告诉变化本身就给不断向前的人一些无形的压力，有一点像是爱丽丝梦游仙境里那个意思了，我们努力奔跑只是为了留在原地。希望不要被时代抛下啊</p> </blockquote> <p>代表了我的一部分想法。AI时代，每个人的边界都极大扩大了，本来不太可能的东西也变得更加有可能了，我坚信AI必定能带我去到更高的地方</p> <p>整个2024我的收获大到可怕，我希望2025还能用这样的速度继续前进，也期待和一些有想法的人多聊聊，不断是同行还是各行各业的老板或者是远在国外的友人。新的一年，Let’s Rock! 🪨</p>]]></content><author><name></name></author><category term="Life"/><category term="Life"/><summary type="html"><![CDATA[春节去美国玩了半个月，第一次去美国，这次旅程有很多收获，感觉成长了很多，后续有空再展开仔细说说这次美国之行的一些有趣的东西。这次半个月，算是Going Offline了半个月，一年有这样的一段时间还挺好的。]]></summary></entry><entry><title type="html">My 2024 Recap 💫</title><link href="https://ifuryst.github.io/blog/2024/my-2024-recap/" rel="alternate" type="text/html" title="My 2024 Recap 💫"/><published>2024-12-26T15:43:27+00:00</published><updated>2024-12-26T15:43:27+00:00</updated><id>https://ifuryst.github.io/blog/2024/my-2024-recap</id><content type="html" xml:base="https://ifuryst.github.io/blog/2024/my-2024-recap/"><![CDATA[<p>今年挺精彩的，从世界的角度或者个人的角度，我觉得都值得回顾一下</p> <p>一晃已是New Yr，今年发生了还多事情啊，更加充实、自我提升的一年，我还挺满意的，虽然有那么几天因为身体缘故感觉到很累，但是整体还是很Nice的。</p> <p>今年算是正式开始接触LLM的一年，也是今年年初开始大量开始投入到AI应用的研发，首先是有幸参与了OpenDevin（先已更名为OpenHands，截止目前已有39K⭐️）从最开始的参与者，到成为Maintainer，再到后来Robert、Xingyao和Graham他们成立All Hands AI，以及在随后的时间内拉到$5M的融资，虽然有点小遗憾没有办法加入他们一起奋斗，但是还是很高兴这一路来的历程，见识到了好多牛逼的人，企业层面有字节、微软、阿里的，学校层面有CMU、UIUC等，国家更是跨越几乎每个大洲了。磕磕碰碰和大家用英语交流，也学会了很多黑话，是非常棒的一段经历。Keep Engaging.</p> <p>后来也陆续和几位小伙伴开发出了一下有趣的AI应用，这一块也将我的业余时间燃烧掉一大部分。这块也将是后续会持续投入的领域，我觉得AI远不止于此，还有很多机会的。今年跟资讯跟得很勤，几乎每天都可以看到有新的LLM Related Projects出来，每天都有新的Paper，每天都有融资新闻，每天都有各种AI新闻。这种状况是我从没见过的，堪比互联网浪潮，有点09年时候的感觉了，一切都是新鲜的，也有一群在新世界探索的人。Keep Doing.</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2024-12-26-my-2024-recap/medium-well-pls-480.webp 480w,/assets/img/2024-12-26-my-2024-recap/medium-well-pls-800.webp 800w,/assets/img/2024-12-26-my-2024-recap/medium-well-pls-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2024-12-26-my-2024-recap/medium-well-pls.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> Medium Well Please </div> <p>今年也是学习的一年，每个工作日都练口语这件事我确实是认真的，一年多了， 如果用我pyq发的这张牛排熟度来说的话，保守一点目前应该能到medium-rare了，ChatGPT永远是我最最棒的partner。今年也陆续看了一堆英语书，跟海绵一样每天会吸纳很多英文新闻和Podcast，输入和输出兼顾，还是能有很好的提升，不过我感觉还是不够用心的去craft如何提升的路径，不过我倒是觉得与其挖空心思去考虑这些，倒不如用自己更能接受的轻松方式，然后去坚持，有效的坚持必然会有收获的。马上就要去🇺🇸了，可以再次实践自己的口语能力了。Keep Practising.</p> <p>今年也从GitHub收到了好多人发邮件给我，有一部分是工作机会，很多是从🇺🇸的startup找来的，我觉得还蛮惊喜的，也挺高兴的，原来恢复写blog的一个原因就是我不希望别人是通过我的履历来了解定性我，我希望能通过字里行间以及我在做的事情，来让有兴趣的人感受到我是什么样的人，我觉得这能减少很多的误解和摩擦，不过是提供工作机会还是有技术、项目的交流。我也写了第一份全英Resume，第一次体验全英文面试，说不慌是不可能的，口吐芬芳了已经。明年也会坚持在这块做输出，我觉得很多时候自己做的没有去回顾，去复盘，去总结，过段时间就忘记了，有些很不错的想法、经验，这样流逝掉了还挺可惜的。Keep Fighting.</p> <p>极限运动确实不太适合我，甚至过山车也坐不了一点了，今年还是去🇰🇷玩了一下（第一次去非英语国家，突然就明白象形字有多难顶），顺便尝试了滑雪，简单说就是从早上摔到晚上吧，膝盖和屁股不太行了，不过我还挺喜欢滑雪的，我觉得等我觉得自己可以不那么拼的时候，我会考虑认真去学一下滑雪，然后去阿尔卑斯滑一次，一开始我觉得单板🏂比较酷，但是在深入了解了滑雪文化和一些人的故事，我发现我现在反而更喜欢双板🎿，尝试一个新事物，并且喜欢上，是一件很棒的事情。Keep Exploring.</p> <p>今年我对于经济、金融方面有了更加深刻的理解，背景当然是依托于大环境下的经济问题，从历史的角度，更宏观的角度来看，个人的努力只能决定一定范围内的东西，在经济好的年代的人和经济不景气年代的人，会有截然不同的观点和行为。基于自身过往的赚钱和投资经历来看，有得有失，现在对于财务情况和资产处置有了更高的理解了，渐渐明白，随着阅历和见识的增加，人是可以变得更加牛的（词汇量匮乏，反正就是牛吧）。Keep Investing.</p> <p>我还记得在120个孩子的东北老爸里看到的一句话：若要如何，全凭自己。我觉得这句话还挺合适用来概括2024年的我背后的动机。就像远航的船，最怕的就是没有目标。不管路上遇到的是滔天巨浪、狂风暴雨或是平静无风的海面，不管需要绕行多远，终将到达的不是生命的终点，就是永远不可触达的存在意识形态层面的目标。或许这样的目标并不存在，也永远不可到达，但这或许也是一种仁慈，我不怕目标不可达，怕的是达到后的迷茫</p>]]></content><author><name></name></author><category term="Life"/><category term="Life"/><summary type="html"><![CDATA[今年挺精彩的，从世界的角度或者个人的角度，我觉得都值得回顾一下]]></summary></entry><entry><title type="html">Default Ingress Class</title><link href="https://ifuryst.github.io/blog/2024/default-ingress-class/" rel="alternate" type="text/html" title="Default Ingress Class"/><published>2024-12-19T14:47:27+00:00</published><updated>2024-12-19T14:47:27+00:00</updated><id>https://ifuryst.github.io/blog/2024/default-ingress-class</id><content type="html" xml:base="https://ifuryst.github.io/blog/2024/default-ingress-class/"><![CDATA[<p>最近遇到一个问题，就是Ingress配置错误问题导致了到Ingress的流量始终无法流到对应的Service</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Ingress</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">playground</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">rules</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">host</span><span class="pi">:</span> <span class="s">api-test.ifuryst.com</span>
      <span class="na">http</span><span class="pi">:</span>
        <span class="na">paths</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">backend</span><span class="pi">:</span>
              <span class="na">serviceName</span><span class="pi">:</span> <span class="s">playground</span>
              <span class="na">servicePort</span><span class="pi">:</span> <span class="m">2112</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/metrics</span>
            <span class="na">pathType</span><span class="pi">:</span> <span class="s">ImplementationSpecific</span>
  <span class="na">tls</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">hosts</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">api-test.ifuryst.com</span>
      <span class="na">secretName</span><span class="pi">:</span> <span class="s">api</span>
</code></pre></div></div> <p>问题是这样一个Ingress配置，看起来没有问题，但是一直没生效，从Service走是OK的，这期间其实反复确认并重做了好几次，也有在rancher上做，最后才排查定位到是少了这个，其实根本原因是因为集群没有配置默认的IngressClass，所以在不配置的情况之下是不会走到Ingress的</p> <p>问题我觉得是个小问题，但是我还是去翻看了一下kube-apiserver和ingress-nginx的代码，这边通过minikube直接本地拉一个集群观测，这样有需要的可以根据命令自己跑测一下。</p> <p>另外为了对比，我增加安装了traefik。</p> <p>初始化相关命令</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># start k8s cluster</span>
<span class="s">minikube start</span>
<span class="c1"># install ingres-nginx</span>
<span class="s">helm upgrade --install ingress-nginx ingress-nginx \</span>
  <span class="s">--repo https://kubernetes.github.io/ingress-nginx \</span>
  <span class="s">--namespace ingress-nginx --create-namespace</span>
<span class="c1"># install trafik</span>
<span class="s">helm repo add traefik https://traefik.github.io/charts</span>
<span class="s">helm repo update</span>
<span class="s">helm install traefik traefik/traefik --namespace traefik --create-namespace</span>
</code></pre></div></div> <p>通过<code class="language-plaintext highlighter-rouge">kubectl get ingressclasses -o yaml</code> 可以看到ingrss-nginx的配置</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">items</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">apiVersion</span><span class="pi">:</span> <span class="s">networking.k8s.io/v1</span>
    <span class="na">kind</span><span class="pi">:</span> <span class="s">IngressClass</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">annotations</span><span class="pi">:</span>
        <span class="na">meta.helm.sh/release-name</span><span class="pi">:</span> <span class="s">ingress-nginx</span>
        <span class="na">meta.helm.sh/release-namespace</span><span class="pi">:</span> <span class="s">ingress-nginx</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="s2">"</span><span class="s">2024-12-04T03:35:34Z"</span>
      <span class="na">generation</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">labels</span><span class="pi">:</span>
        <span class="na">app.kubernetes.io/component</span><span class="pi">:</span> <span class="s">controller</span>
        <span class="na">app.kubernetes.io/instance</span><span class="pi">:</span> <span class="s">ingress-nginx</span>
        <span class="na">app.kubernetes.io/managed-by</span><span class="pi">:</span> <span class="s">Helm</span>
        <span class="na">app.kubernetes.io/name</span><span class="pi">:</span> <span class="s">ingress-nginx</span>
        <span class="na">app.kubernetes.io/part-of</span><span class="pi">:</span> <span class="s">ingress-nginx</span>
        <span class="na">app.kubernetes.io/version</span><span class="pi">:</span> <span class="s">1.11.3</span>
        <span class="na">helm.sh/chart</span><span class="pi">:</span> <span class="s">ingress-nginx-4.11.3</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">nginx</span>
      <span class="na">resourceVersion</span><span class="pi">:</span> <span class="s2">"</span><span class="s">969"</span>
      <span class="na">uid</span><span class="pi">:</span> <span class="s">158fe0a7-0701-45eb-a7f9-e37a5e026afe</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">controller</span><span class="pi">:</span> <span class="s">k8s.io/ingress-nginx</span>
  <span class="pi">-</span> <span class="na">apiVersion</span><span class="pi">:</span> <span class="s">networking.k8s.io/v1</span>
    <span class="na">kind</span><span class="pi">:</span> <span class="s">IngressClass</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">annotations</span><span class="pi">:</span>
        <span class="na">ingressclass.kubernetes.io/is-default-class</span><span class="pi">:</span> <span class="s2">"</span><span class="s">true"</span>
        <span class="na">meta.helm.sh/release-name</span><span class="pi">:</span> <span class="s">traefik</span>
        <span class="na">meta.helm.sh/release-namespace</span><span class="pi">:</span> <span class="s">traefik</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="s2">"</span><span class="s">2024-12-04T03:37:14Z"</span>
      <span class="na">generation</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">labels</span><span class="pi">:</span>
        <span class="na">app.kubernetes.io/instance</span><span class="pi">:</span> <span class="s">traefik-traefik</span>
        <span class="na">app.kubernetes.io/managed-by</span><span class="pi">:</span> <span class="s">Helm</span>
        <span class="na">app.kubernetes.io/name</span><span class="pi">:</span> <span class="s">traefik</span>
        <span class="na">helm.sh/chart</span><span class="pi">:</span> <span class="s">traefik-33.0.0</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">traefik</span>
      <span class="na">resourceVersion</span><span class="pi">:</span> <span class="s2">"</span><span class="s">1226"</span>
      <span class="na">uid</span><span class="pi">:</span> <span class="s">98b32f2f-d8a9-47d1-b5f6-bd63e1a01fac</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">controller</span><span class="pi">:</span> <span class="s">traefik.io/ingress-controller</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">List</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">resourceVersion</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
</code></pre></div></div> <p>这边从<code class="language-plaintext highlighter-rouge">ingressclass.kubernetes.io/is-default-class: "true"</code>其实可以看出来，ingress-nginx默认是没有将自己提升为默认的IngressClass，而traefik却有，我们到kube-apiserver里看一下</p> <p>在<code class="language-plaintext highlighter-rouge">staging/src/k8s.io/api/networking/v1/well_known_annotations.go</code> 和<code class="language-plaintext highlighter-rouge">staging/src/k8s.io/api/networking/v1beta1/well_known_annotations.go</code> 出现了这个配置，这边我们关注一下v1</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">v1</span>

<span class="k">const</span> <span class="p">(</span>
	<span class="c">// AnnotationIsDefaultIngressClass can be used to indicate that an</span>
	<span class="c">// IngressClass should be considered default. When a single IngressClass</span>
	<span class="c">// resource has this annotation set to true, new Ingress resources without a</span>
	<span class="c">// class specified will be assigned this default class.</span>
	<span class="n">AnnotationIsDefaultIngressClass</span> <span class="o">=</span> <span class="s">"ingressclass.kubernetes.io/is-default-class"</span>
<span class="p">)</span>
</code></pre></div></div> <p>可以看下调用方，主要是<code class="language-plaintext highlighter-rouge">plugin/pkg/admission/network/defaultingressclass/admission.go</code> 在调用</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// getDefaultClass returns the default IngressClass from the store, or nil.</span>
<span class="k">func</span> <span class="n">getDefaultClass</span><span class="p">(</span><span class="n">lister</span> <span class="n">networkingv1listers</span><span class="o">.</span><span class="n">IngressClassLister</span><span class="p">)</span> <span class="p">(</span><span class="o">*</span><span class="n">networkingv1</span><span class="o">.</span><span class="n">IngressClass</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">list</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">lister</span><span class="o">.</span><span class="n">List</span><span class="p">(</span><span class="n">labels</span><span class="o">.</span><span class="n">Everything</span><span class="p">())</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">nil</span><span class="p">,</span> <span class="n">err</span>
	<span class="p">}</span>

	<span class="n">defaultClasses</span> <span class="o">:=</span> <span class="p">[]</span><span class="o">*</span><span class="n">networkingv1</span><span class="o">.</span><span class="n">IngressClass</span><span class="p">{}</span>
	<span class="k">for</span> <span class="n">_</span><span class="p">,</span> <span class="n">class</span> <span class="o">:=</span> <span class="k">range</span> <span class="n">list</span> <span class="p">{</span>
		<span class="k">if</span> <span class="n">class</span><span class="o">.</span><span class="n">Annotations</span><span class="p">[</span><span class="n">networkingv1</span><span class="o">.</span><span class="n">AnnotationIsDefaultIngressClass</span><span class="p">]</span> <span class="o">==</span> <span class="s">"true"</span> <span class="p">{</span>
			<span class="n">defaultClasses</span> <span class="o">=</span> <span class="nb">append</span><span class="p">(</span><span class="n">defaultClasses</span><span class="p">,</span> <span class="n">class</span><span class="p">)</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">defaultClasses</span><span class="p">)</span> <span class="o">==</span> <span class="m">0</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">nil</span><span class="p">,</span> <span class="no">nil</span>
	<span class="p">}</span>
	<span class="n">sort</span><span class="o">.</span><span class="n">Slice</span><span class="p">(</span><span class="n">defaultClasses</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span>
		<span class="k">if</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">CreationTimestamp</span><span class="o">.</span><span class="n">UnixNano</span><span class="p">()</span> <span class="o">==</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">.</span><span class="n">CreationTimestamp</span><span class="o">.</span><span class="n">UnixNano</span><span class="p">()</span> <span class="p">{</span>
			<span class="k">return</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">Name</span> <span class="o">&lt;</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">.</span><span class="n">Name</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">CreationTimestamp</span><span class="o">.</span><span class="n">UnixNano</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">.</span><span class="n">CreationTimestamp</span><span class="o">.</span><span class="n">UnixNano</span><span class="p">()</span>
	<span class="p">})</span>
	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">defaultClasses</span><span class="p">)</span> <span class="o">&gt;</span> <span class="m">1</span> <span class="p">{</span>
		<span class="n">klog</span><span class="o">.</span><span class="n">V</span><span class="p">(</span><span class="m">4</span><span class="p">)</span><span class="o">.</span><span class="n">Infof</span><span class="p">(</span><span class="s">"%d default IngressClasses were found, choosing the newest: %s"</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">defaultClasses</span><span class="p">),</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="m">0</span><span class="p">]</span><span class="o">.</span><span class="n">Name</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="n">defaultClasses</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="no">nil</span>
<span class="p">}</span>
</code></pre></div></div> <p>通过lister拿到所有的IngressClass，判断是否设置了<code class="language-plaintext highlighter-rouge">ingressclass.kubernetes.io/is-default-class: "true"</code> ，如果有多个就根据创建时间和名称排序，后面添加的默认IngressClass会命中，再往上爬一下</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// Admit sets the default value of a Ingress's class if the user did not specify</span>
<span class="c">// a class.</span>
<span class="k">func</span> <span class="p">(</span><span class="n">a</span> <span class="o">*</span><span class="n">classDefaulterPlugin</span><span class="p">)</span> <span class="n">Admit</span><span class="p">(</span><span class="n">ctx</span> <span class="n">context</span><span class="o">.</span><span class="n">Context</span><span class="p">,</span> <span class="n">attr</span> <span class="n">admission</span><span class="o">.</span><span class="n">Attributes</span><span class="p">,</span> <span class="n">o</span> <span class="n">admission</span><span class="o">.</span><span class="n">ObjectInterfaces</span><span class="p">)</span> <span class="kt">error</span> <span class="p">{</span>
	<span class="k">if</span> <span class="n">attr</span><span class="o">.</span><span class="n">GetResource</span><span class="p">()</span><span class="o">.</span><span class="n">GroupResource</span><span class="p">()</span> <span class="o">!=</span> <span class="n">networkingv1</span><span class="o">.</span><span class="n">Resource</span><span class="p">(</span><span class="s">"ingresses"</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">attr</span><span class="o">.</span><span class="n">GetSubresource</span><span class="p">())</span> <span class="o">!=</span> <span class="m">0</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">}</span>

	<span class="n">ingress</span><span class="p">,</span> <span class="n">ok</span> <span class="o">:=</span> <span class="n">attr</span><span class="o">.</span><span class="n">GetObject</span><span class="p">()</span><span class="o">.</span><span class="p">(</span><span class="o">*</span><span class="n">networking</span><span class="o">.</span><span class="n">Ingress</span><span class="p">)</span>
	<span class="c">// if we can't convert then we don't handle this object so just return</span>
	<span class="k">if</span> <span class="o">!</span><span class="n">ok</span> <span class="p">{</span>
		<span class="n">klog</span><span class="o">.</span><span class="n">V</span><span class="p">(</span><span class="m">3</span><span class="p">)</span><span class="o">.</span><span class="n">Infof</span><span class="p">(</span><span class="s">"Expected Ingress resource, got: %v"</span><span class="p">,</span> <span class="n">attr</span><span class="o">.</span><span class="n">GetKind</span><span class="p">())</span>
		<span class="k">return</span> <span class="n">errors</span><span class="o">.</span><span class="n">NewInternalError</span><span class="p">(</span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"Expected Ingress resource, got: %v"</span><span class="p">,</span> <span class="n">attr</span><span class="o">.</span><span class="n">GetKind</span><span class="p">()))</span>
	<span class="p">}</span>

	<span class="c">// IngressClassName field has been set, no need to set a default value.</span>
	<span class="k">if</span> <span class="n">ingress</span><span class="o">.</span><span class="n">Spec</span><span class="o">.</span><span class="n">IngressClassName</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">}</span>

	<span class="c">// Ingress class annotation has been set, no need to set a default value.</span>
	<span class="k">if</span> <span class="n">_</span><span class="p">,</span> <span class="n">ok</span> <span class="o">:=</span> <span class="n">ingress</span><span class="o">.</span><span class="n">Annotations</span><span class="p">[</span><span class="n">networkingv1beta1</span><span class="o">.</span><span class="n">AnnotationIngressClass</span><span class="p">];</span> <span class="n">ok</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">}</span>

	<span class="n">klog</span><span class="o">.</span><span class="n">V</span><span class="p">(</span><span class="m">4</span><span class="p">)</span><span class="o">.</span><span class="n">Infof</span><span class="p">(</span><span class="s">"No class specified on Ingress %s"</span><span class="p">,</span> <span class="n">ingress</span><span class="o">.</span><span class="n">Name</span><span class="p">)</span>

	<span class="n">defaultClass</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">getDefaultClass</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">lister</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="k">return</span> <span class="n">admission</span><span class="o">.</span><span class="n">NewForbidden</span><span class="p">(</span><span class="n">attr</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c">// No default class specified, no need to set a default value.</span>
	<span class="k">if</span> <span class="n">defaultClass</span> <span class="o">==</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="k">return</span> <span class="no">nil</span>
	<span class="p">}</span>

	<span class="n">klog</span><span class="o">.</span><span class="n">V</span><span class="p">(</span><span class="m">4</span><span class="p">)</span><span class="o">.</span><span class="n">Infof</span><span class="p">(</span><span class="s">"Defaulting class for Ingress %s to %s"</span><span class="p">,</span> <span class="n">ingress</span><span class="o">.</span><span class="n">Name</span><span class="p">,</span> <span class="n">defaultClass</span><span class="o">.</span><span class="n">Name</span><span class="p">)</span>
	<span class="n">ingress</span><span class="o">.</span><span class="n">Spec</span><span class="o">.</span><span class="n">IngressClassName</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">defaultClass</span><span class="o">.</span><span class="n">Name</span>
	<span class="k">return</span> <span class="no">nil</span>
<span class="p">}</span>
</code></pre></div></div> <p>可以看到，捞到了默认的IngressClass的话，就把Ingress配置里的<code class="language-plaintext highlighter-rouge">Spec.IngressClassName</code>设置为默认的IngressClass名称</p> <p>然后我们到ingress-nginx看看，入口是<code class="language-plaintext highlighter-rouge">cmd/nginx</code> ，main里主要做了以下这些操作：</p> <ol> <li>初始化并和kube-apiserver建立连接</li> <li>做一些版本校验、权限检查</li> <li>初始化自监控（prometheus）采集器</li> <li>初始化nginx控制器controller，重点是这部分</li> <li>启动HTTP服务，自监控和健康检查</li> <li>启动nginx控制器</li> </ol> <p>nginx controller主要做了以下的操作：</p> <ol> <li>初始化并启动同步缓存模块（store）</li> <li>初始化内存队列用来处理配置变更</li> <li>监听本地文件变化，nginx配置和geoip文件</li> <li>确认是否需要选举主</li> <li>拉起nginx（单独进程组）</li> </ol> <p>这里的store会通过多个infomer和lister（k8s.io/client-go）去和kube-apiserver同步信息并在本地做一个缓存，比如感知到对应的ingerss应用的配置更新就可以去刷对应的nginx配置并重新加载</p> <p>在<code class="language-plaintext highlighter-rouge">internal/ingress/controller/store/store.go:429</code> 可以看到</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code>		<span class="n">AddFunc</span><span class="o">:</span> <span class="k">func</span><span class="p">(</span><span class="n">obj</span> <span class="k">interface</span><span class="p">{})</span> <span class="p">{</span>
			<span class="n">ing</span><span class="p">,</span> <span class="n">_</span> <span class="o">:=</span> <span class="n">toIngress</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>

			<span class="k">if</span> <span class="o">!</span><span class="n">watchedNamespace</span><span class="p">(</span><span class="n">ing</span><span class="o">.</span><span class="n">Namespace</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">return</span>
			<span class="p">}</span>

			<span class="n">ic</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">store</span><span class="o">.</span><span class="n">GetIngressClass</span><span class="p">(</span><span class="n">ing</span><span class="p">,</span> <span class="n">icConfig</span><span class="p">)</span>
			<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
				<span class="n">klog</span><span class="o">.</span><span class="n">InfoS</span><span class="p">(</span><span class="s">"Ignoring ingress because of error while validating ingress class"</span><span class="p">,</span> <span class="s">"ingress"</span><span class="p">,</span> <span class="n">klog</span><span class="o">.</span><span class="n">KObj</span><span class="p">(</span><span class="n">ing</span><span class="p">),</span> <span class="s">"error"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
				<span class="k">return</span>
			<span class="p">}</span>

			<span class="n">klog</span><span class="o">.</span><span class="n">InfoS</span><span class="p">(</span><span class="s">"Found valid IngressClass"</span><span class="p">,</span> <span class="s">"ingress"</span><span class="p">,</span> <span class="n">klog</span><span class="o">.</span><span class="n">KObj</span><span class="p">(</span><span class="n">ing</span><span class="p">),</span> <span class="s">"ingressclass"</span><span class="p">,</span> <span class="n">ic</span><span class="p">)</span>

			<span class="k">if</span> <span class="n">deepInspector</span> <span class="p">{</span>
				<span class="k">if</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">inspector</span><span class="o">.</span><span class="n">DeepInspect</span><span class="p">(</span><span class="n">ing</span><span class="p">);</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
					<span class="n">klog</span><span class="o">.</span><span class="n">ErrorS</span><span class="p">(</span><span class="n">err</span><span class="p">,</span> <span class="s">"received invalid ingress"</span><span class="p">,</span> <span class="s">"ingress"</span><span class="p">,</span> <span class="n">klog</span><span class="o">.</span><span class="n">KObj</span><span class="p">(</span><span class="n">ing</span><span class="p">))</span>
					<span class="k">return</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="k">if</span> <span class="n">hasCatchAllIngressRule</span><span class="p">(</span><span class="n">ing</span><span class="o">.</span><span class="n">Spec</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">disableCatchAll</span> <span class="p">{</span>
				<span class="n">klog</span><span class="o">.</span><span class="n">InfoS</span><span class="p">(</span><span class="s">"Ignoring add for catch-all ingress because of --disable-catch-all"</span><span class="p">,</span> <span class="s">"ingress"</span><span class="p">,</span> <span class="n">klog</span><span class="o">.</span><span class="n">KObj</span><span class="p">(</span><span class="n">ing</span><span class="p">))</span>
				<span class="k">return</span>
			<span class="p">}</span>

			<span class="n">recorder</span><span class="o">.</span><span class="n">Eventf</span><span class="p">(</span><span class="n">ing</span><span class="p">,</span> <span class="n">corev1</span><span class="o">.</span><span class="n">EventTypeNormal</span><span class="p">,</span> <span class="s">"Sync"</span><span class="p">,</span> <span class="s">"Scheduled for sync"</span><span class="p">)</span>

			<span class="n">store</span><span class="o">.</span><span class="n">syncIngress</span><span class="p">(</span><span class="n">ing</span><span class="p">)</span>
			<span class="n">store</span><span class="o">.</span><span class="n">updateSecretIngressMap</span><span class="p">(</span><span class="n">ing</span><span class="p">)</span>
			<span class="n">store</span><span class="o">.</span><span class="n">syncSecrets</span><span class="p">(</span><span class="n">ing</span><span class="p">)</span>

			<span class="n">updateCh</span><span class="o">.</span><span class="n">In</span><span class="p">()</span> <span class="o">&lt;-</span> <span class="n">Event</span><span class="p">{</span>
				<span class="n">Type</span><span class="o">:</span> <span class="n">CreateEvent</span><span class="p">,</span>
				<span class="n">Obj</span><span class="o">:</span>  <span class="n">obj</span><span class="p">,</span>
			<span class="p">}</span>
		<span class="p">},</span>
</code></pre></div></div> <p>这部分代码是在Ingress资源增加的时候会回调的函数，可以看到</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ic</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">store</span><span class="o">.</span><span class="n">GetIngressClass</span><span class="p">(</span><span class="n">ing</span><span class="p">,</span> <span class="n">icConfig</span><span class="p">)</span>
<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
	<span class="n">klog</span><span class="o">.</span><span class="n">InfoS</span><span class="p">(</span><span class="s">"Ignoring ingress because of error while validating ingress class"</span><span class="p">,</span> <span class="s">"ingress"</span><span class="p">,</span> <span class="n">klog</span><span class="o">.</span><span class="n">KObj</span><span class="p">(</span><span class="n">ing</span><span class="p">),</span> <span class="s">"error"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
	<span class="k">return</span>
<span class="p">}</span>
</code></pre></div></div> <p>这里调用了<code class="language-plaintext highlighter-rouge">store.GetIngressClass</code>验证对应的IngressClass和自身是否符合</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">func</span> <span class="p">(</span><span class="n">s</span> <span class="o">*</span><span class="n">k8sStore</span><span class="p">)</span> <span class="n">GetIngressClass</span><span class="p">(</span><span class="n">ing</span> <span class="o">*</span><span class="n">networkingv1</span><span class="o">.</span><span class="n">Ingress</span><span class="p">,</span> <span class="n">icConfig</span> <span class="o">*</span><span class="n">ingressclass</span><span class="o">.</span><span class="n">Configuration</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
	<span class="c">// First we try ingressClassName</span>
	<span class="k">if</span> <span class="o">!</span><span class="n">icConfig</span><span class="o">.</span><span class="n">IgnoreIngressClass</span> <span class="o">&amp;&amp;</span> <span class="n">ing</span><span class="o">.</span><span class="n">Spec</span><span class="o">.</span><span class="n">IngressClassName</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">iclass</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">s</span><span class="o">.</span><span class="n">listers</span><span class="o">.</span><span class="n">IngressClass</span><span class="o">.</span><span class="n">ByKey</span><span class="p">(</span><span class="o">*</span><span class="n">ing</span><span class="o">.</span><span class="n">Spec</span><span class="o">.</span><span class="n">IngressClassName</span><span class="p">)</span>
		<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
			<span class="k">return</span> <span class="s">""</span><span class="p">,</span> <span class="n">err</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="n">iclass</span><span class="o">.</span><span class="n">Name</span><span class="p">,</span> <span class="no">nil</span>
	<span class="p">}</span>

	<span class="c">// Then we try annotation</span>
	<span class="k">if</span> <span class="n">class</span><span class="p">,</span> <span class="n">ok</span> <span class="o">:=</span> <span class="n">ing</span><span class="o">.</span><span class="n">GetAnnotations</span><span class="p">()[</span><span class="n">ingressclass</span><span class="o">.</span><span class="n">IngressKey</span><span class="p">];</span> <span class="n">ok</span> <span class="p">{</span>
		<span class="k">if</span> <span class="n">class</span> <span class="o">!=</span> <span class="n">icConfig</span><span class="o">.</span><span class="n">AnnotationValue</span> <span class="p">{</span>
			<span class="k">return</span> <span class="s">""</span><span class="p">,</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"ingress class annotation is not equal to the expected by Ingress Controller"</span><span class="p">)</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="n">class</span><span class="p">,</span> <span class="no">nil</span>
	<span class="p">}</span>

	<span class="c">// Then we accept if the WithoutClass is enabled</span>
	<span class="k">if</span> <span class="n">icConfig</span><span class="o">.</span><span class="n">WatchWithoutClass</span> <span class="p">{</span>
		<span class="c">// Reserving "_" as a "wildcard" name</span>
		<span class="k">return</span> <span class="s">"_"</span><span class="p">,</span> <span class="no">nil</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="s">""</span><span class="p">,</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"ingress does not contain a valid IngressClass"</span><span class="p">)</span>
<span class="p">}</span>
<span class="c">// ...</span>
<span class="k">const</span> <span class="p">(</span>
	<span class="c">// IngressKey picks a specific "class" for the Ingress.</span>
	<span class="c">// The controller only processes Ingresses with this annotation either</span>
	<span class="c">// unset, or set to either the configured value or the empty string.</span>
	<span class="n">IngressKey</span> <span class="o">=</span> <span class="s">"kubernetes.io/ingress.class"</span>

	<span class="c">// DefaultControllerName defines the default controller name for Ingress NGINX</span>
	<span class="n">DefaultControllerName</span> <span class="o">=</span> <span class="s">"k8s.io/ingress-nginx"</span>

	<span class="c">// DefaultAnnotationValue defines the default annotation value for the ingress-nginx controller</span>
	<span class="n">DefaultAnnotationValue</span> <span class="o">=</span> <span class="s">"nginx"</span>
<span class="p">)</span>
</code></pre></div></div> <p>这边可以看到，根据这样的顺序获取IngressClass Name：</p> <ol> <li>先从spec.ingressClassName获取</li> <li>再从annotations的kubernetes.io/ingress.class获取</li> </ol> <p>所在在都没有指定的情况下，就匹配不到，就不会处理这个Ingress资源对象了，这里IngressClassName是1.18引入的，应该优先使用这个，然后annotations是为了兼容旧的，所以理论上如果k8s是1.18之后的版本，还是应该采用IngressClassName。</p> <p>结合前面kube-apiserver的代码，以及traefik是默认的IngressClass，我们可以知道其实这边spec.ingressClassName会被填充为traefik，我们看下ingres-nginx容器的日志</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">I1204</span> <span class="m">09</span><span class="o">:</span><span class="m">51</span><span class="o">:</span><span class="m">54.338921</span>       <span class="m">7</span> <span class="n">store</span><span class="o">.</span><span class="k">go</span><span class="o">:</span><span class="m">436</span><span class="p">]</span> <span class="s">"Ignoring ingress because of error while validating ingress class"</span> <span class="n">ingress</span><span class="o">=</span><span class="s">"default/nginx-ingress"</span> <span class="kt">error</span><span class="o">=</span><span class="s">"no object matching key </span><span class="se">\"</span><span class="s">traefik</span><span class="se">\"</span><span class="s"> in local store"</span>
</code></pre></div></div> <p>可以看到，匹配到traefik，符合预期。</p> <p>当我们没有traefik的情况下，又没有配置默认的IngressClass，在Ingress提交的时候又没有指定spec.ingressClassName和annotations的情况下，也是无法命中</p> <div class="row mt-3"> <div class="col-sm mt-0 mb-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2024-12-19-default-ingress-class/no-default-ingress-class-480.webp 480w,/assets/img/2024-12-19-default-ingress-class/no-default-ingress-class-800.webp 800w,/assets/img/2024-12-19-default-ingress-class/no-default-ingress-class-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2024-12-19-default-ingress-class/no-default-ingress-class.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption mt-0"> 无默认IngressClass </div> <p><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource">官方文档</a>也有说明这个，k8s本身是不会指定默认的IngressClass，也可以理解，k8s本身并没有内置IngressClass。</p> <p>ingress-nginx可以这样配置成默认的IngressClass</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">networking.k8s.io/v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">IngressClass</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app.kubernetes.io/component</span><span class="pi">:</span> <span class="s">controller</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">nginx-example</span>
  <span class="na">annotations</span><span class="pi">:</span>
    <span class="na">ingressclass.kubernetes.io/is-default-class</span><span class="pi">:</span> <span class="s2">"</span><span class="s">true"</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">controller</span><span class="pi">:</span> <span class="s">k8s.io/ingress-nginx</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Kubernetes"/><category term="Kubernetes"/><summary type="html"><![CDATA[最近遇到一个问题，就是Ingress配置错误问题导致了到Ingress的流量始终无法流到对应的Service]]></summary></entry></feed>